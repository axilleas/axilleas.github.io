<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Over the line</title><link>http://axilleas.github.io/</link><description></description><atom:link href="http://axilleas.github.io/feeds/gitlab.rss.xml" rel="self"></atom:link><lastBuildDate>Thu, 12 Sep 2013 00:00:00 +0300</lastBuildDate><item><title>GSoC - Weekly update 11 and 12</title><link>http://axilleas.github.io/en/blog/2013/gsoc-weekly-update-11-and-12</link><description>&lt;p&gt;So far, I managed to &lt;a href="https://fedora.axilleas.me"&gt;deploy GitLab&lt;/a&gt; on a Fedora 19 machine using only packaged gems either from
the official repos or a &lt;a href="http://repos.fedorapeople.org/repos/axilleas/gitlab/fedora-19/"&gt;custom&lt;/a&gt; one I have created.&lt;/p&gt;
&lt;p&gt;Below you will find some more info as well as the url of the testing environment. 
You can use/test it and report any issues &lt;a href="https://github.com/axilleas/gsoc/issues"&gt;here&lt;/a&gt;. If anyone needs an admin account 
for further testing just let me know. Just bare in mind that you might see some 500 errors as I will be trying some things.&lt;/p&gt;
&lt;p&gt;More or less, here is the workflow I followed:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Set up GitLab in a VM following the official installation guide and test everything works&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm -rf /vendor/bundle&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Test with &lt;code&gt;bundle install --local RAILS_ENV=production&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;See the dependency differences&lt;/li&gt;
&lt;li&gt;Install with &lt;code&gt;yum&lt;/code&gt; the gems in Gemfile&lt;/li&gt;
&lt;li&gt;Replace in Gemfile/Gemfile.lock with Fedora versions&lt;/li&gt;
&lt;li&gt;Repeat steps 3,4,5,6&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For details on what is replaced see this &lt;a href="https://github.com/axilleas/gsoc/blob/master/Gemfile.lock.diff"&gt;Gemfile.lock.diff&lt;/a&gt;.
The systemd services I used can be found &lt;a href="https://github.com/axilleas/gsoc/tree/master/systemd"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are a lot to be done yet until this reaches to the official repos but that's a start.&lt;/p&gt;
&lt;h2 id="todo"&gt;TODO&lt;/h2&gt;
&lt;h3 id="short-term"&gt;Short term&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Write the gitlab.spec that will glue all the dependencies together&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="long-term"&gt;Long term&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Commit as many specs as  possible to BZ.&lt;/li&gt;
&lt;li&gt;GitLab forks: one option is to patch upstream with GitLab's changes. Second but rather avoided is to to ask FPC for an exception and package the forks as they are.&lt;/li&gt;
&lt;li&gt;Coordinate efforts with Debian ruby team (&lt;a href="http://debian.2.n7.nabble.com/Regarding-gitlab-td2843993.html"&gt;related discussion&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Deploy on rawhide: when GitLab supports rails 4. That depends on many dependencies gems as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="longer-term"&gt;Longer term&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;port to EPEL&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.github.io,2013-09-12:en/blog/2013/gsoc-weekly-update-11-and-12</guid><category>gsoc</category><category>fedora</category><category>gitlab</category><category>packaging</category></item><item><title>GSoC - Weekly update 9 and 10</title><link>http://axilleas.github.io/en/blog/2013/gsoc-weekly-update-9-and-10</link><description>&lt;p&gt;I've been busy the past two weeks with some personal stuff so I got a little behind.
Here's what happened in the GitLab front.&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#finish-packaging-remaining-gems"&gt;Finish packaging remaining gems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gitlab-deploy"&gt;GitLab deploy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coordinate-packaging-with-debian"&gt;Coordinate packaging with Debian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#todo"&gt;TODO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="finish-packaging-remaining-gems"&gt;Finish packaging remaining gems&lt;/h2&gt;
&lt;p&gt;Now, all (hopefully) runtime dependencies are packaged and pushed in my public &lt;a href="http://repos.fedorapeople.org/repos/axilleas/gitlab/fedora-19/"&gt;gitlab-repo&lt;/a&gt;.
The majority of them are not ready for official submission in Bugzilla, but I kept track
of those that pass the standards in order to be submitted. Unfortunately they are only 5...&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;escape_utils&lt;/span&gt;
&lt;span class="n"&gt;http_parser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rb&lt;/span&gt;
&lt;span class="n"&gt;modernizr&lt;/span&gt;
&lt;span class="n"&gt;yajl&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ruby&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;already&lt;/span&gt; &lt;span class="n"&gt;submitted&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//bugzilla.redhat.com/show_bug.cgi?id=823351)&lt;/span&gt;
&lt;span class="n"&gt;settingslogic&lt;/span&gt;
&lt;span class="n"&gt;stamp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For now I have also packaged the forks as they need some more work to be accepted in Fedora.
&lt;a href="https://github.com/axilleas/gsoc/blob/master/packaging.md#gem-packaging-on-gitlab-forks"&gt;Here&lt;/a&gt; I have pointed out their differences with original gems.&lt;/p&gt;
&lt;h2 id="gitlab-deploy"&gt;GitLab deploy&lt;/h2&gt;
&lt;p&gt;I deployed &lt;a href="https://fedora.axilleas.me"&gt;GitLab in Fedora 19&lt;/a&gt; on a VPS following the standard installation, meaning all gems
are bundled under &lt;code&gt;vendor/bundle/&lt;/code&gt;. You can visit it, but it may not be functional as I am now in the
process of replacing the bundled gems with the system ones. Expect more info on this in a following post.&lt;/p&gt;
&lt;h2 id="coordinate-packaging-with-debian"&gt;Coordinate packaging with Debian&lt;/h2&gt;
&lt;p&gt;In other news, I found out that Debian is also in the process of packaging GitLab, so I contacted them through
their &lt;a href="http://debian.2.n7.nabble.com/Regarding-gitlab-td2843993.html"&gt;Ruby ML&lt;/a&gt; regarding this. If you follow the discussion you will understand that the main
problem for them is also how to package the forked gems. Hopefully we will come to a solution.&lt;/p&gt;
&lt;h2 id="todo"&gt;TODO&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Build dummy &lt;code&gt;gitlab.spec&lt;/code&gt; with all runtime &lt;code&gt;Requires&lt;/code&gt; for easy test install&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;bundle install --local&lt;/code&gt; and progressively test the required gems&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Thu, 29 Aug 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.github.io,2013-08-29:en/blog/2013/gsoc-weekly-update-9-and-10</guid><category>gsoc</category><category>fedora</category><category>gitlab</category><category>packaging</category></item><item><title>SELinux policy for nginx and GitLab unix socket in Fedora 19</title><link>http://axilleas.github.io/en/blog/2013/selinux-policy-for-nginx-and-gitlab-unix-socket-in-fedora-19</link><description>&lt;p&gt;The installation of GitLab in Fedora 19 went fine. I followed the official installation
guide with some deviations where necessary, mostly taken from the CentOS guide in
&lt;a href="https://github.com/gitlabhq/gitlab-recipes"&gt;gitlab-recipes&lt;/a&gt;. I setup nginx using the ssl &lt;a href="https://github.com/gitlabhq/gitlab-recipes/blob/master/web-server/nginx/gitlab-ssl"&gt;config&lt;/a&gt;, and poked some holes
in &lt;a href="https://github.com/gitlabhq/gitlab-recipes/tree/master/install/centos#8-configure-the-firewall"&gt;iptables&lt;/a&gt;. For systemd services I used &lt;a href="https://github.com/gitlabhq/gitlab-recipes/tree/master/init/systemd"&gt;these files&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, everything is set, configuration tests pass, services are started, nginx is started
and I finally point firefox to my FQDN (which by the way is fedora.axilleas.me, no secret)
just to see a big fat &lt;strong&gt;502 Bad Gateway&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;As wikipedia &lt;a href="http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#5xx_Server_Error"&gt;suggests&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;502 Bad Gateway&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The server was acting as a gateway or proxy and received an invalid response from the upstream server.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Spot on! The server (nginx) is acting as a proxy and received an invalid response from the upstream server (unicorn).
But what was that invalid response?&lt;/p&gt;
&lt;p&gt;I could reach &lt;code&gt;ip_addr:8080&lt;/code&gt; at which unicorn was listening, but not through my fqdn which
nginx was serving. So there clearly was something wrong with nginx.&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#error-hunting"&gt;Error hunting&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#nginx"&gt;Nginx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#selinux-you-crafty-little-blocker"&gt;SELinux you crafty little blocker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-a-custom-selinux-policy-module"&gt;Create a custom SELinux policy module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#add-nginx-to-git-group"&gt;Add nginx to git group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tldr"&gt;TL;DR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#integration-of-selinux-error-messages-with-journald"&gt;Integration of SELinux error messages with journald&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="error-hunting"&gt;Error hunting&lt;/h2&gt;
&lt;p&gt;So the first thing when such an error occurs is to look through the logs.&lt;/p&gt;
&lt;h3 id="nginx"&gt;Nginx&lt;/h3&gt;
&lt;p&gt;In &lt;code&gt;/var/log/nginx/gitlab_error.log&lt;/code&gt; I could see this error repeating:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;crit&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;2597&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt; &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;unix&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gitlab&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sockets&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gitlab&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Permission&lt;/span&gt; &lt;span class="n"&gt;denied&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;connecting&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;upstream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="mf"&gt;12.34.56.78&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fedora&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;axilleas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;GET /users/sign_in HTTP/1.1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;upstream&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://unix:/home/git/gitlab/tmp/sockets/gitlab.socket:/users/sign_in&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fedora.axilleas.me&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So we got a permission denied while nginx is trying to connect to the unix socket of GitLab.
After some hours searching and reading answers in stackoverflow, it sroke to me to check
whether SELinux is to blame. I set it to permissive mode with &lt;code&gt;setenforce 0&lt;/code&gt; and voila,
nginx was suddenly recieving requests.&lt;/p&gt;
&lt;h3 id="selinux-you-crafty-little-blocker"&gt;SELinux you crafty little blocker&lt;/h3&gt;
&lt;p&gt;I remembered the awesome introductory guide of &lt;a href="http://wiki.centos.org/HowTos/SELinux"&gt;SELinux&lt;/a&gt; at CentOS wiki,
which I had used when rewriting the &lt;a href="https://github.com/gitlabhq/gitlab-recipes/blob/master/install/centos/README.md"&gt;CentOS installation guide&lt;/a&gt; for GitLab
and immediately started reading.&lt;/p&gt;
&lt;p&gt;By default, SELinux log messages are written to &lt;code&gt;/var/log/audit/audit.log&lt;/code&gt; via the Linux Auditing System &lt;code&gt;auditd&lt;/code&gt;.
If the &lt;code&gt;auditd&lt;/code&gt; daemon is not running, then messages are written to &lt;code&gt;/var/log/messages&lt;/code&gt;. 
SELinux log messages are labeled with the &lt;em&gt;AVC&lt;/em&gt; keyword so that they might be easily filtered from other messages, as with &lt;code&gt;grep&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;So, by greping nginx in &lt;code&gt;/var/log/audit/audit.log&lt;/code&gt; I found those relative AVC messages, which indicate indeed
a denial of nginx connection to &lt;code&gt;gitlab.socket&lt;/code&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;AVC&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;audit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1377542938.307&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;248364&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;avc&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;denied&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;  &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2597&lt;/span&gt; &lt;span class="n"&gt;comm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nginx&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gitlab.socket&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;vda1&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;ino&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1180273&lt;/span&gt; &lt;span class="n"&gt;scontext&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;system_u&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;system_r&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;httpd_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;s0&lt;/span&gt; &lt;span class="n"&gt;tcontext&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;system_u&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;object_r&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;httpd_sys_content_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;s0&lt;/span&gt; &lt;span class="n"&gt;tclass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sock_file&lt;/span&gt;
&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;AVC&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;audit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1377542938.307&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;248364&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;avc&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;denied&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;connectto&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;  &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2597&lt;/span&gt; &lt;span class="n"&gt;comm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nginx&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/home/git/gitlab/tmp/sockets/gitlab.socket&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;scontext&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;system_u&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;system_r&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;httpd_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;s0&lt;/span&gt; &lt;span class="n"&gt;tcontext&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;system_u&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;system_r&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;initrc_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;s0&lt;/span&gt; &lt;span class="n"&gt;tclass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;unix_stream_socket&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using a tool called &lt;code&gt;audit2allow&lt;/code&gt; we are able to clear the AVC messages. If you haven't got it
installed, it is shipped with the &lt;code&gt;policycoreutils-devel&lt;/code&gt; package.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;audit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;audit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;audit2allow&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the result is:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#============= httpd_t ==============&lt;/span&gt;

&lt;span class="cp"&gt;#!!!! This avc is allowed in the current policy&lt;/span&gt;
&lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="kt"&gt;httpd_t&lt;/span&gt; &lt;span class="kt"&gt;http_cache_port_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;tcp_socket&lt;/span&gt; &lt;span class="n"&gt;name_connect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cp"&gt;#!!!! This avc is allowed in the current policy&lt;/span&gt;
&lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="kt"&gt;httpd_t&lt;/span&gt; &lt;span class="kt"&gt;httpd_log_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;setattr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cp"&gt;#!!!! This avc is allowed in the current policy&lt;/span&gt;
&lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="kt"&gt;httpd_t&lt;/span&gt; &lt;span class="kt"&gt;httpd_sys_content_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;sock_file&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cp"&gt;#!!!! This avc is allowed in the current policy&lt;/span&gt;
&lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="kt"&gt;httpd_t&lt;/span&gt; &lt;span class="kt"&gt;initrc_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;unix_stream_socket&lt;/span&gt; &lt;span class="n"&gt;connectto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cp"&gt;#!!!! This avc is allowed in the current policy&lt;/span&gt;
&lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="kt"&gt;httpd_t&lt;/span&gt; &lt;span class="kt"&gt;user_home_dir_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cp"&gt;#!!!! This avc is allowed in the current policy&lt;/span&gt;
&lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="kt"&gt;httpd_t&lt;/span&gt; &lt;span class="kt"&gt;user_home_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="n"&gt;getattr&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="cp"&gt;#!!!! This avc is allowed in the current policy&lt;/span&gt;
&lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="kt"&gt;httpd_t&lt;/span&gt; &lt;span class="kt"&gt;user_home_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;sock_file&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cp"&gt;#!!!! This avc is allowed in the current policy&lt;/span&gt;
&lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="kt"&gt;httpd_t&lt;/span&gt; &lt;span class="kt"&gt;var_run_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;These are the policies that should be used with SELinux. Notice that &lt;code&gt;user_home&lt;/code&gt; is essential
since GitLab's &lt;code&gt;APP_ROOT&lt;/code&gt; is in &lt;code&gt;/home/git/&lt;/code&gt;. Similarly, you notice a policy related to 
the denied socket connection: &lt;code&gt;unix_stream_socket connectto&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="create-a-custom-selinux-policy-module"&gt;Create a custom SELinux policy module&lt;/h2&gt;
&lt;p&gt;After all the investigation we are closer to the solution. All we have to do is use &lt;code&gt;audit2allow&lt;/code&gt;
to generate a set of policy rules that would allow the required actions. We can generate
a local nginx Type Enforcement policy file (nginx.te): &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;audit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;audit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;audit2allow&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;te&lt;/span&gt;
&lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;te&lt;/span&gt;


&lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;require&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;var_run_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;user_home_dir_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;httpd_log_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;httpd_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;user_home_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;httpd_sys_content_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;initrc_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;http_cache_port_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;sock_file&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;unix_stream_socket&lt;/span&gt; &lt;span class="n"&gt;connectto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="n"&gt;getattr&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;setattr&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;tcp_socket&lt;/span&gt; &lt;span class="n"&gt;name_connect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cp"&gt;#============= httpd_t ==============&lt;/span&gt;

&lt;span class="cp"&gt;#!!!! This avc is allowed in the current policy&lt;/span&gt;
&lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="kt"&gt;httpd_t&lt;/span&gt; &lt;span class="kt"&gt;http_cache_port_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;tcp_socket&lt;/span&gt; &lt;span class="n"&gt;name_connect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="kt"&gt;httpd_t&lt;/span&gt; &lt;span class="kt"&gt;httpd_log_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;setattr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="kt"&gt;httpd_t&lt;/span&gt; &lt;span class="kt"&gt;httpd_sys_content_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;sock_file&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="kt"&gt;httpd_t&lt;/span&gt; &lt;span class="kt"&gt;initrc_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;unix_stream_socket&lt;/span&gt; &lt;span class="n"&gt;connectto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cp"&gt;#!!!! This avc is allowed in the current policy&lt;/span&gt;
&lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="kt"&gt;httpd_t&lt;/span&gt; &lt;span class="kt"&gt;user_home_dir_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cp"&gt;#!!!! This avc is allowed in the current policy&lt;/span&gt;
&lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="kt"&gt;httpd_t&lt;/span&gt; &lt;span class="kt"&gt;user_home_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="n"&gt;getattr&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="kt"&gt;httpd_t&lt;/span&gt; &lt;span class="kt"&gt;user_home_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;sock_file&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="kt"&gt;httpd_t&lt;/span&gt; &lt;span class="kt"&gt;var_run_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We are not done yet, as this is a file for review only. We can then go ahead and use audit2allow 
to make a custom policy module to allow these actions: &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;audit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;audit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;audit2allow&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;
&lt;span class="n"&gt;semodule&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can check the policy module loaded correctly by listing loaded modules with &lt;code&gt;semodule -l&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After that, remember to enable SELinux again with &lt;code&gt;setenforce 1&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="add-nginx-to-git-group"&gt;Add nginx to git group&lt;/h2&gt;
&lt;p&gt;Unrelated to this article, but it is also needed for nginx to access the unix socket.
First we add nginx to git group, and then we make sure the group that owns &lt;code&gt;/home/git/&lt;/code&gt;
has read and execute permissions:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;usermod&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;
&lt;span class="n"&gt;chmod&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;rx&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="tldr"&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;To fix all nginx 502 issues, as root run:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;yum&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="n"&gt;policycoreutils&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;devel&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;audit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;audit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;audit2allow&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;
&lt;span class="n"&gt;semodule&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pp&lt;/span&gt;
&lt;span class="n"&gt;usermod&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;
&lt;span class="n"&gt;chmod&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;rx&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="integration-of-selinux-error-messages-with-journald"&gt;Integration of SELinux error messages with journald&lt;/h2&gt;
&lt;p&gt;In a very &lt;a href="http://danwalsh.livejournal.com/65777.html"&gt;interesting article&lt;/a&gt;, Dan Walsh explains how this whole process of error
hunting will be much easier with Fedora 20. I urge you to read it.&lt;/p&gt;
&lt;p&gt;With the upcoming changes, the error would have appeared at systemd's status log:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the possible solutions with:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;journalctl&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;verbose&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pretty cool, huh?&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Tue, 27 Aug 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.github.io,2013-08-27:en/blog/2013/selinux-policy-for-nginx-and-gitlab-unix-socket-in-fedora-19</guid><category>selinux</category><category>fedora</category><category>gitlab</category><category>unixsocket</category><category>nginx</category></item><item><title>GSoC - Weekly update 7 and 8</title><link>http://axilleas.github.io/en/blog/2013/gsoc-weekly-update-7-and-8</link><description>&lt;p&gt;The past week or so, I have been trying to package every gem GitLab needs, in Fedora 19.
This is something I should have done from the start, but better late than never.
Now that I have quite learnt the rubygem packaging process, I follow a certain
workflow that gets the job done pretty quickly (described below).&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://repos.fedorapeople.org/repos/axilleas/gitlab/fedora-19/"&gt;repo&lt;/a&gt; I had setup, now includes the majority of the gems needed for a working
GitLab instance.&lt;/p&gt;
&lt;p&gt;Of course many of them do not pass the standards in order to submit to Bugzilla,
meaning there are some gems missing the license file, the tests are not shipped or
fail, etc. The only thing that is correct in all of them is the declaration of files
to be incuded in the final packaged gem, that is the &lt;code&gt;%files&lt;/code&gt; and &lt;code&gt;%files doc&lt;/code&gt; macros.&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#workflow-of-quick-packaging"&gt;Workflow of quick packaging&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#notes"&gt;Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#difficulties-in-gem-versions"&gt;Difficulties in gem versions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#todo"&gt;TODO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="workflow-of-quick-packaging"&gt;Workflow of quick packaging&lt;/h2&gt;
&lt;p&gt;For the whole time I've been packaging gems, I use a VPS running Fedora 19. Luckily it is
a pretty strong machine (4GB RAM, 4 cpu) and building a rubygem in mock takes 1-3 minutes&lt;sup id="fnref:cloud"&gt;&lt;a class="footnote-ref" href="#fn:cloud" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;In general, I first check in the &lt;a href="https://fedoraproject.org/wiki/User:Axilleas/GitLab#Packages"&gt;wiki table&lt;/a&gt; what's missing, and then build the next gem in line.
I have 2 screen windows open (among others): one pointing in &lt;code&gt;~/rpmbuild/SPECS/&lt;/code&gt;
and the other to &lt;code&gt;~/rpmbuild/SRPMS/&lt;/code&gt;. Here are the steps onwards.&lt;/p&gt;
&lt;p&gt;On the first screen I run a simple &lt;a href="https://github.com/axilleas/gsoc/blob/master/gemget"&gt;script&lt;/a&gt; that downloads the gem file 
in &lt;code&gt;~/rpmbuild/SOURCES/&lt;/code&gt; and then runs gem2rpm on it with the resulting spec 
saved in &lt;code&gt;~/rpmbuild/SPECS/&lt;/code&gt;. I then open the spec with vim, open the url and 
check if the license tag is filled. If not, I check in the url for the license file. &lt;/p&gt;
&lt;p&gt;Inside vim, I save the changes with &lt;code&gt;:w&lt;/code&gt; and run &lt;code&gt;:!rpmbuild -ba %&lt;/code&gt;. Normally,
this will fail, which is good. We need the info provided by the &lt;code&gt;error: Installed (but unpackaged) file(s) found:&lt;/code&gt;
I copy all these stuff in a temp file (I have geany open) and then I fix the
&lt;code&gt;%files&lt;/code&gt; and &lt;code&gt;%files doc&lt;/code&gt; macro accordingly. Save and run &lt;code&gt;:!rpmbuild -ba %&lt;/code&gt;
again to check everything is in order. If the build exits with no error, I try
to make the tests work. I give myself 10-15 minutes topfor each gem, as I am
targeting to test the GitLab installation and not submit them to Bugzilla.
Of course during the whole process, I keep track what fails and what not, so
that I can come back later. You can see &lt;a href="https://github.com/axilleas/gsoc/blob/master/packaging.md"&gt;here&lt;/a&gt; my progress.&lt;/p&gt;
&lt;p&gt;After the build runs fine, I use &lt;code&gt;mock&lt;/code&gt; to test that a package is not missing
from the BuildRequires. Exit the &lt;code&gt;rpmbuild&lt;/code&gt; screen, enter &lt;code&gt;mock&lt;/code&gt;, which is in
&lt;code&gt;~/rpmbuild/SRPMS/&lt;/code&gt;, so with a simple &lt;code&gt;mock rubygem-foo-1.0-1.src.rpm&lt;/code&gt; begins
the packaging process. If something breaks, back to &lt;code&gt;rpmbuild&lt;/code&gt; screen, adjust
the spec, save it, run &lt;code&gt;:!rpmbuild -bs %&lt;/code&gt; to just produce the srpm, exit screen,
enter &lt;code&gt;mock&lt;/code&gt; screen, run &lt;code&gt;mock rubygem-foo-1.0-1.src.rpm&lt;/code&gt; again. And the circle
goes on until I have a working rpm.&lt;/p&gt;
&lt;p&gt;When the package builds fine in mock, I copy the produced rpms in &lt;code&gt;~/repo/gitlab/fedora-19/&lt;/code&gt;
with &lt;code&gt;cp /var/lib/mock/fedora-19-x86_64/result/*rpm ~/repos/gitlab/fedora-19&lt;/code&gt;.
From there, I move each package to its destined folder and using a modified &lt;a href="https://github.com/axilleas/gsoc/blob/master/repo-update"&gt;script&lt;/a&gt;
of &lt;a href="https://fedoraproject.org/wiki/Fedorapeople_Repos#Script_for_easy_repo_update"&gt;repo_update&lt;/a&gt; I sync the packages to my repo hosted on fedorapeople.org.&lt;/p&gt;
&lt;h3 id="notes"&gt;Notes&lt;/h3&gt;
&lt;p&gt;Using of mock is of utter importance. Building in a clean chrooted environment,
you ensure that a package builds and installs cleanly without any dependencies missing,
on other machines as well.&lt;/p&gt;
&lt;p&gt;The use of the repository is two-fold. Other than the default nature of the repo 
where you could easily install and test GitLab, it also serves as a building point 
where you have packages needed by other packages and so on, that are not yet in Fedora. 
Sure you could use &lt;code&gt;mock --init&lt;/code&gt; as described &lt;a href="https://fedoraproject.org/wiki/Using_Mock_to_test_package_builds#Building_packages_that_depend_on_packages_not_in_a_repository"&gt;here&lt;/a&gt;, but that is quite
a burden when there is a multiple dependency issue. For that purpose I made my 
mock default config being a copy of the &lt;code&gt;fedora-19-x86_64.cfg&lt;/code&gt; plus the information of the
&lt;a href="http://repos.fedorapeople.org/repos/axilleas/gitlab/fedora-gitlab.repo"&gt;fedora-gitlab.repo&lt;/a&gt;. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sudo cp /etc/mock/fedora-19-x86_64 /etc/mock/gitlab-x86_64.cfg&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo vim /etc/mock/gitlab-x86_64.cfg&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Append the info of &lt;a href="http://repos.fedorapeople.org/repos/axilleas/gitlab/fedora-gitlab.repo"&gt;fedora-gitlab.repo&lt;/a&gt; (be carefull of the &lt;code&gt;"""&lt;/code&gt;, they must be last)&lt;/li&gt;
&lt;li&gt;Repeat 1-3 for a &lt;code&gt;i686&lt;/code&gt; config.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ln -s /etc/mock/gitlab-x86_64 /etc/mock/default.cfg&lt;/code&gt; so that I don't have to
    repeatedly invoking the mock configs with the &lt;code&gt;-r&lt;/code&gt; flag.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ultimately, &lt;code&gt;gitlab-x86_64.cfg&lt;/code&gt; looks like this:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;config_opts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;fedora&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;config_opts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;target_arch&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;config_opts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;legal_host_arches&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;
&lt;span class="n"&gt;config_opts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;chroot_setup_cmd&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;groupinstall&lt;/span&gt; &lt;span class="n"&gt;buildsys&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;config_opts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;fc19&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;  &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;useful&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;resultdir&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="n"&gt;subst&lt;/span&gt;

&lt;span class="n"&gt;config_opts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;yum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;cachedir&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;yum&lt;/span&gt;
&lt;span class="n"&gt;debuglevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;reposdir&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;
&lt;span class="n"&gt;logfile&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;yum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;
&lt;span class="n"&gt;retries&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;obsoletes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;assumeyes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;syslog_ident&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mock&lt;/span&gt;
&lt;span class="n"&gt;syslog_device&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;

&lt;span class="cp"&gt;# repos&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fedora&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fedora&lt;/span&gt;
&lt;span class="n"&gt;mirrorlist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//mirrors.fedoraproject.org/mirrorlist?repo=fedora-19&amp;amp;arch=x86_64&lt;/span&gt;
&lt;span class="n"&gt;failovermethod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;priority&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;updates&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;updates&lt;/span&gt;
&lt;span class="n"&gt;mirrorlist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//mirrors.fedoraproject.org/mirrorlist?repo=updates-released-f19&amp;amp;arch=x86_64&lt;/span&gt;
&lt;span class="n"&gt;failovermethod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;priority&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;updates&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;updates&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;testing&lt;/span&gt;
&lt;span class="n"&gt;mirrorlist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//mirrors.fedoraproject.org/mirrorlist?repo=updates-testing-f19&amp;amp;arch=x86_64&lt;/span&gt;
&lt;span class="n"&gt;failovermethod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;priority&lt;/span&gt;
&lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;
&lt;span class="n"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//kojipkgs.fedoraproject.org/repos/f19-build/latest/x86_64/&lt;/span&gt;
&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;
&lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fedora&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;debuginfo&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fedora&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;debuginfo&lt;/span&gt;
&lt;span class="n"&gt;mirrorlist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//mirrors.fedoraproject.org/mirrorlist?repo=fedora-debug-19&amp;amp;arch=x86_64&lt;/span&gt;
&lt;span class="n"&gt;failovermethod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;priority&lt;/span&gt;
&lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;updates&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;debuginfo&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;updates&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;debuginfo&lt;/span&gt;
&lt;span class="n"&gt;mirrorlist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//mirrors.fedoraproject.org/mirrorlist?repo=updates-released-debug-f19&amp;amp;arch=x86_64&lt;/span&gt;
&lt;span class="n"&gt;failovermethod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;priority&lt;/span&gt;
&lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;updates&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;debuginfo&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;updates&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;debuginfo&lt;/span&gt;
&lt;span class="n"&gt;mirrorlist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//mirrors.fedoraproject.org/mirrorlist?repo=updates-testing-debug-f19&amp;amp;arch=x86_64&lt;/span&gt;
&lt;span class="n"&gt;failovermethod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;priority&lt;/span&gt;
&lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fedora&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gitlab&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Unofficial&lt;/span&gt; &lt;span class="n"&gt;GitLab&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;Fedora&lt;/span&gt;
&lt;span class="n"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//repos.fedorapeople.org/repos/axilleas/gitlab/fedora-$releasever/$basearch/&lt;/span&gt;
&lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;skip_if_unavailable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fedora&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gitlab&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;noarch&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Unofficial&lt;/span&gt; &lt;span class="n"&gt;GitLab&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;Fedora&lt;/span&gt;
&lt;span class="n"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//repos.fedorapeople.org/repos/axilleas/gitlab/fedora-$releasever/noarch/&lt;/span&gt;
&lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;skip_if_unavailable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fedora&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gitlab&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Unofficial&lt;/span&gt; &lt;span class="n"&gt;GitLab&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;Fedora&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Source&lt;/span&gt;
&lt;span class="n"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//repos.fedorapeople.org/repos/axilleas/gitlab/fedora-$releasever/SRPMS&lt;/span&gt;
&lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;skip_if_unavailable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="difficulties-in-gem-versions"&gt;Difficulties in gem versions&lt;/h2&gt;
&lt;p&gt;The most challenging aspect of my whole GSoC project is not how to package the 
~ 80 gems needed for GitLab at runtime, but how to coordinate GitLab-Fedora-Upstream
and their different versions of gems.&lt;/p&gt;
&lt;p&gt;In this process, there are two key stoppers that need to be resolved.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;For gems with versions: GitLab &amp;lt; Fedora, I will have to test if they properly work.
    Else, a gem with lower version should be packaged for Fedora.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For gems with versions: GitLab &amp;gt; Fedora, if GitLab == Upstream, it is easy to update by asking the maintainer to update, 
    BUT if Fedora &amp;lt; GitLab &amp;lt; Upstream , it is &lt;em&gt;hard&lt;/em&gt;, as it is needed a version lower than the
    current upstream, and in Fedora we try to have the latest version. Of course
    that is debatable and if really needed, a gem with lower version than upstream
    could be submitted.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="todo"&gt;TODO&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;There are about 15 more gems to package&lt;/li&gt;
&lt;li&gt;Somehow deal with GitLab's forks&lt;/li&gt;
&lt;li&gt;Commit to github the specs i have built so far with propper commit messages&lt;/li&gt;
&lt;li&gt;Test in a gitlab-vagrant VM some new gem versions I built and submit PR with updated Gemfile&lt;/li&gt;
&lt;li&gt;Start packaging the GitLab app itself (get a clue from Gitorious)&lt;/li&gt;
&lt;li&gt;Check which gems are ok so far to submit to Bugzilla&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:cloud"&gt;
&lt;p&gt;All that thanks to &lt;a href="https://okeanos.grnet.gr/home/"&gt;okeanos&lt;/a&gt;, a &lt;a href="https://www.grnet.gr/en/"&gt;GRNET&lt;/a&gt;'s public cloud service which provides cloud services to the whole Greek research and academic community. More info &lt;a href="http://www.synnefo.org/"&gt;here&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:cloud" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Tue, 13 Aug 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.github.io,2013-08-13:en/blog/2013/gsoc-weekly-update-7-and-8</guid><category>gsoc</category><category>fedora</category><category>gitlab</category><category>packaging</category></item><item><title>GSoC - Weekly update 6</title><link>http://axilleas.github.io/en/blog/2013/gsoc-weekly-update-6</link><description>&lt;p&gt;Here is what I have been doing the past week.&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#packages"&gt;Packages&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#charlock_holmes"&gt;charlock_holmes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#omniauth"&gt;omniauth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sanitize"&gt;sanitize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orm_adapter"&gt;orm_adapter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#update-to-gitlab-54"&gt;Update to GitLab 5.4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="packages"&gt;Packages&lt;/h2&gt;
&lt;h3 id="charlock_holmes"&gt;charlock_holmes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=989143"&gt;Pending review&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This one gave me some headaches as it is a gem with c extensions and as it turned
out I didn't ship the soname in the right directory. It took me some time but I
finally understood how that works. Here are the steps I follow when packaging gems
with c extensions.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;From the initial spec file that gem2rpm creates, comment the line below:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mv %&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;%&lt;span class="o"&gt;{&lt;/span&gt;gem_instdir&lt;span class="o"&gt;}&lt;/span&gt;/lib/shared_object.so %&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;%&lt;span class="o"&gt;{&lt;/span&gt;gem_extdir_mri&lt;span class="o"&gt;}&lt;/span&gt;/lib/
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;rpmbuild -bi rubygem-charlock_holmes.spec&lt;/code&gt; in order not to remove the
  &lt;em&gt;BUILDROOT&lt;/em&gt; directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find the soname files that get created:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;find ~/rpmbuild/BUILDROOT/rubygem-charlock_holmes-0.6.9.4-1.fc19.x86_64/ -name &lt;span class="s1"&gt;&amp;#39;*.so&amp;#39;&lt;/span&gt;

Output
------
~/rpmbuild/BUILDROOT/rubygem-charlock_holmes-0.6.9.4-1.fc19.x86_64/usr/share/gems/gems/charlock_holmes-0.6.9.4/ext/charlock_holmes/charlock_holmes.so
~/rpmbuild/BUILDROOT/rubygem-charlock_holmes-0.6.9.4-1.fc19.x86_64/usr/share/gems/gems/charlock_holmes-0.6.9.4/lib/charlock_holmes/charlock_holmes.so
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There are 2 files, one in &lt;code&gt;lib/&lt;/code&gt; dir and one in &lt;code&gt;ext/&lt;/code&gt; dir. We should ship the one in
&lt;code&gt;lib/&lt;/code&gt; dir, so in our spec file we replace the line that we commented before with:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mkdir -p %&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;%&lt;span class="o"&gt;{&lt;/span&gt;gem_extdir_mri&lt;span class="o"&gt;}&lt;/span&gt;/lib/%&lt;span class="o"&gt;{&lt;/span&gt;gem_name&lt;span class="o"&gt;}&lt;/span&gt;/
mv %&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;%&lt;span class="o"&gt;{&lt;/span&gt;gem_libdir&lt;span class="o"&gt;}&lt;/span&gt;/%&lt;span class="o"&gt;{&lt;/span&gt;gem_name&lt;span class="o"&gt;}&lt;/span&gt;/%&lt;span class="o"&gt;{&lt;/span&gt;gem_name&lt;span class="o"&gt;}&lt;/span&gt;.so %&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;%&lt;span class="o"&gt;{&lt;/span&gt;gem_extdir_mri&lt;span class="o"&gt;}&lt;/span&gt;/lib/%&lt;span class="o"&gt;{&lt;/span&gt;gem_name&lt;span class="o"&gt;}&lt;/span&gt;/

&lt;span class="c"&gt;# Remove the binary extension sources and build leftovers.&lt;/span&gt;
rm -rf %&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;/%&lt;span class="o"&gt;{&lt;/span&gt;gem_instdir&lt;span class="o"&gt;}&lt;/span&gt;/ext/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;See what I did there? The lib dir when I used find was:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;rpmbuild&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BUILDROOT&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rubygem&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;charlock_holmes&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.6.9.4&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.f&lt;/span&gt;&lt;span class="n"&gt;c19&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gems&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gems&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;charlock_holmes&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.6.9.4&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;charlock_holmes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;charlock_holmes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which when written with macros translates to:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;%{buildroot}%{gem_libdir}/%{gem_name}/%{gem_name}.so&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which in turn gets copied to:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;%&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;%&lt;span class="o"&gt;{&lt;/span&gt;gem_extdir_mri&lt;span class="o"&gt;}&lt;/span&gt;/lib/%&lt;span class="o"&gt;{&lt;/span&gt;gem_name&lt;span class="o"&gt;}&lt;/span&gt;/
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Tl;dr;
Follow the directory structure of &lt;code&gt;lib/&lt;/code&gt; where the soname resides and remove the
&lt;code&gt;ext/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Beware that there are cases where this structure is not the same and the soname
is found right in &lt;code&gt;lib/&lt;/code&gt; dir and not in &lt;code&gt;lib/%{gem_name}/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Take for example &lt;a href="http://pkgs.fedoraproject.org/cgit/rubygem-pg.git/tree/rubygem-pg.spec#n61"&gt;rubygem-pg&lt;/a&gt; compared to &lt;a href="https://github.com/axilleas/fedora/blob/master/packages/rubygem-charlock_holmes/rubygem-charlock_holmes.spec#L54"&gt;rubygem-charlock_holmes&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="omniauth"&gt;omniauth&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=989775"&gt;Pending review&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I had some hard time with this too as it was failing the test suite. It turned out
I was missing a BuildRequires dependency. A huge thanks to &lt;a href="https://fedoraproject.org/wiki/User:Ktdreyer"&gt;Ken Dreyer&lt;/a&gt; who
pointed me out to the right direction in the &lt;a href="https://lists.fedoraproject.org/pipermail/ruby-sig/2013-July/001393.html"&gt;mailing list&lt;/a&gt; as well as giving
some nice tips about the packaging workflow.&lt;/p&gt;
&lt;h3 id="sanitize"&gt;sanitize&lt;/h3&gt;
&lt;p&gt;This was an easy one and was immediately accepted when &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=989132"&gt;reviewed&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="orm_adapter"&gt;orm_adapter&lt;/h3&gt;
&lt;p&gt;This is pending a &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=988938"&gt;review&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="update-to-gitlab-54"&gt;Update to GitLab 5.4&lt;/h2&gt;
&lt;p&gt;I updated the dependencies to version 5.4. Overall nothing changed except for the
addition of unicorn, which is already submitted for &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=786636"&gt;review&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Tue, 30 Jul 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.github.io,2013-07-30:en/blog/2013/gsoc-weekly-update-6</guid><category>gsoc</category><category>fedora</category><category>gitlab</category><category>packaging</category></item><item><title>GSoC - Weekly update 5</title><link>http://axilleas.github.io/en/blog/2013/gsoc-weekly-update-5</link><description>&lt;p&gt;I can't believe that a month has already passed! I keep learning new things, mostly
on packaging, and the cool fact is that many of them are through my Review Requests.
The discussion between the reviewer and the reviewee can sometimes be very productive
leading to learning new things I previously ignored.&lt;/p&gt;
&lt;p&gt;This post would be a long one but I decided to split it up, because some sections
deserved there own space.&lt;/p&gt;
&lt;p&gt;The first split is named &lt;a href="http://axilleas.github.io/en/blog/2013/i-got-approved-as-a-packager-now-what"&gt;I got approved as a packager, now what?&lt;/a&gt;
and it refers to all new Fedora packagers :)&lt;/p&gt;
&lt;p&gt;The second one is going to talk about maintaining an unofficial repo and I will
describe my workflow and the potential scripts that facilitate the whole process.&lt;/p&gt;
&lt;p&gt;And here is the rest of my progress during the fifth week. &lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#packages"&gt;Packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-to-package-a-ruby-gem-blog-post-status"&gt;How to package a Ruby gem - blog post status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#todo-next-week"&gt;TODO next week&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="packages"&gt;Packages&lt;/h2&gt;
&lt;p&gt;This is the first time that some packages of mine got approved:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=985358"&gt;hashie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=982679"&gt;bootstrap-sass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=969877"&gt;timers&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I am also working on &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=927374"&gt;rubygem-rugged&lt;/a&gt; as a reviewer this time. This is much more
difficult than being the reviewee, since it needs a lot testing from your side
and a good understanding of the guidelines.&lt;/p&gt;
&lt;p&gt;And of course there is a bunch of other gems I am working on but not ready to
submit yet. As always, my progress is noted in this &lt;a href="https://trello.com/c/IOzzF6MQ/16-gem-packaging-phase-1"&gt;trello board&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="how-to-package-a-ruby-gem-blog-post-status"&gt;How to package a Ruby gem - blog post status&lt;/h2&gt;
&lt;p&gt;As you may know, I am in the process of writing an article on how to package Ruby
gems in Fedora. This is the only type of package I have been dealing with for the
past months, so I am far from an avid packager in general. But, as a structure
and wiki freak I like to have everything in order, even understandable by completely
newbies, so this is going to be very comprehensive. Progress is being made :)&lt;/p&gt;
&lt;p&gt;You can now watch the progress &lt;a href="https://trello.com/c/oGOKkvBn/6-weekly-blog-posts"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="todo-next-week"&gt;TODO next week&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Submit more packages&lt;/li&gt;
&lt;li&gt;Set up GitLab on a Fedora machine and check if packaged bundler works&lt;/li&gt;
&lt;li&gt;Take on reviews of packages concerning the gsoc project&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Mon, 22 Jul 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.github.io,2013-07-22:en/blog/2013/gsoc-weekly-update-5</guid><category>gsoc</category><category>fedora</category><category>gitlab</category><category>packaging</category></item><item><title>GSoC - Weekly update 3 and 4</title><link>http://axilleas.github.io/en/blog/2013/gsoc-weekly-update-3-and-4</link><description>&lt;p&gt;Here is what I have been doing the last two weeks.&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#work-on-packages"&gt;Work on packages&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#sanitize"&gt;sanitize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#boostrap-sass"&gt;boostrap-sass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orm_adapter"&gt;orm_adapter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#devise"&gt;devise&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#gems-and-their-versions-in-json-format"&gt;Gems and their versions in json format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#version-table-in-wiki"&gt;Version table in wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init-repository"&gt;Init repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rubygem-packaging-article"&gt;Rubygem packaging article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#todo-next-week"&gt;TODO next week&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="work-on-packages"&gt;Work on packages&lt;/h2&gt;
&lt;p&gt;I ran gem2rpm on all gems and saved their specs in a &lt;a href="https://github.com/axilleas/fedora/tree/master/packages/tmp"&gt;tmp&lt;/a&gt; folder
so that I can easily modify them later. I intend to split them in categories
according to the bundled gems in GitLab's &lt;a href="https://github.com/gitlabhq/gitlabhq/blob/master/Gemfile#L11-L143"&gt;Gemfile&lt;/a&gt; that are needed for production.
Below are some gems that are either almost ready for Bugzilla or submitted. There
are a dozen more that I work with but haven't pushed any changes to github. Will
do soon.&lt;/p&gt;
&lt;h3 id="sanitize"&gt;sanitize&lt;/h3&gt;
&lt;p&gt;Not yet submitted to BZ as it needs nokogiri 1.6.0 whereas in Fedora
we still have 1.5.9. Will have to talk to the maintainer of nokogiri for an update.&lt;/p&gt;
&lt;h3 id="boostrap-sass"&gt;boostrap-sass&lt;/h3&gt;
&lt;p&gt;Submitted in &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=982679"&gt;Bugzilla&lt;/a&gt;. This is a tricky one as per the package guidelines,
as it ships with some javascript files that are distributed from &lt;a href="https://github.com/twitter/bootstrap"&gt;Twitter bootstrap&lt;/a&gt;,
which are considered a bundle. And if you don't already know it, bundling is
prohibited by the &lt;a href="https://fedoraproject.org/wiki/Packaging:Guidelines#Duplication_of_system_libraries"&gt;packaging guidelines&lt;/a&gt;. You can follow the discussion
in the Bugzilla. There is also an interesting discussion going on in packaging ML,
about web Assets/JavaScript guidelines and are proposed some &lt;a href="https://lists.fedoraproject.org/pipermail/packaging/2013-July/009304.html"&gt;drafts&lt;/a&gt;.
This could probably alter the packaging structure of bootstrap-sass, but I don't
expect it anytime soon.&lt;/p&gt;
&lt;h3 id="orm_adapter"&gt;orm_adapter&lt;/h3&gt;
&lt;p&gt;Some tests are skipped because they require some gems not yet packaged for Fedora,
but that is a &lt;a href="https://lists.fedoraproject.org/pipermail/ruby-sig/2013-July/001384.html"&gt;little acceptable&lt;/a&gt;. This is a dependency of devise (see
below). To be submitted soon.&lt;/p&gt;
&lt;h3 id="devise"&gt;devise&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://github.com/plataformatec/devise"&gt;Devise&lt;/a&gt; provides ready-made authentication and user management for rails
applications. It is a very popular rack application among the rails community, so
it'll be cool to get it into Fedora's repos :)
Submission is on the way along with orm_adapter.&lt;/p&gt;
&lt;h2 id="gems-and-their-versions-in-json-format"&gt;Gems and their versions in json format&lt;/h2&gt;
&lt;p&gt;As I've mentioned before, one of the main problems about packaging GitLab, is
the version mismatch between GitLab, Fedora and upstream gems. I have added some
more functions to my &lt;a href="https://github.com/axilleas/gsoc/blob/master/gemfile.py"&gt;script&lt;/a&gt; and now it saves the gems with their corresponding
version in a json format. There are three files: &lt;code&gt;gitlab.json&lt;/code&gt;, &lt;code&gt;fedora.json&lt;/code&gt; and 
 &lt;code&gt;upstream.json&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;I haven't added a flag to those methods yet, so one has to run it through the python
interpreter for now. Here's how:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a href="https://fedorahosted.org/python-bugzilla/‎"&gt;python-bugzilla&lt;/a&gt; and &lt;a href="http://pkgwat.readthedocs.org/en/latest/"&gt;pkgwat.api&lt;/a&gt; if not already.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/axilleas/gsoc.git &amp;amp;&amp;amp; cd gsoc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start your python interpreter (I prefer ipython)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;import gemfile as g&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dicts = g.populate_dicts()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[gitlab, fedora, upstream] = dicts&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It will take a couple of minutes since it uses pkgwat.api to query the Fedora
database for the gems in Rawhide, and rubygems.org for the upstream versions.
&lt;code&gt;dicts&lt;/code&gt; is a tuple containing all three dictionaries. With the last command we
unpacked the dictionaries of the tuple. So now calling gitlab, you have the gitlab
dictionary and so on.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; All methods are called using the runtime gems of the current version of 
GitLab, which are 143 for now. According to those gems we then search the Fedora
package database and quering rubygems.org's API.&lt;/p&gt;
&lt;h2 id="version-table-in-wiki"&gt;Version table in wiki&lt;/h2&gt;
&lt;p&gt;There is now a &lt;a href="https://fedoraproject.org/wiki/User:Axilleas/GitLab#Packages"&gt;table&lt;/a&gt; in the wiki for an easy reference about the versions
of gems. Where you see &lt;code&gt;None&lt;/code&gt; it means it hasn't been packaged for Fedora yet.
This is now &lt;a href="https://github.com/axilleas/gsoc/blob/master/gemfile.py#L217"&gt;automatically&lt;/a&gt; accomplished by running the script. &lt;/p&gt;
&lt;p&gt;Further below is a list of the gems to be packaged. Those that are submitted to
Bugzilla are accompanied with a link to their review. I am working on automating
this process, it should be something similar to how the wiki table is generated.&lt;/p&gt;
&lt;p&gt;Also, I modified the output a little bit to be more readable. For example:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;------------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;Gitlab&lt;/span&gt; &lt;span class="n"&gt;runtime&lt;/span&gt; &lt;span class="n"&gt;gems&lt;/span&gt;  &lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;143&lt;/span&gt;
&lt;span class="n"&gt;Gems&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Fedora&lt;/span&gt; &lt;span class="n"&gt;repos&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;380&lt;/span&gt;
&lt;span class="n"&gt;Common&lt;/span&gt; &lt;span class="n"&gt;gems&lt;/span&gt;          &lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;64&lt;/span&gt;
&lt;span class="n"&gt;To&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;packaged&lt;/span&gt;       &lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;79&lt;/span&gt;
&lt;span class="n"&gt;Pending&lt;/span&gt; &lt;span class="n"&gt;review&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;BZ&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;11&lt;/span&gt;
&lt;span class="n"&gt;When&lt;/span&gt; &lt;span class="n"&gt;BZ&lt;/span&gt; &lt;span class="n"&gt;go&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repos&lt;/span&gt;  &lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;68&lt;/span&gt;

&lt;span class="n"&gt;Fedora&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="mf"&gt;20.79&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;ruby&lt;/span&gt; &lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="mi"&gt;459&lt;/span&gt; &lt;span class="n"&gt;gems&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;------------------------------------------------------&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="init-repository"&gt;Init repository&lt;/h2&gt;
&lt;p&gt;I have created a repository at &lt;a href="http://repos.fedorapeople.org/repos/axilleas/gitlab/"&gt;fedorapeople.org&lt;/a&gt; to start populating it with packages
I build, but take a long time to get to Fedora repos. This should be a good chance
to test the packages they make it to Rawhide.&lt;/p&gt;
&lt;p&gt;Most gems come with a bundled test suite. Running tests during gem packaging
can sometimes be cumbersome but it is the only way to test that the gem really
works, at least according to the suite. To my experience, getting the tests run
requires a big amount of your time during package building, so in this test repo
expect to find many packages without their tests run. At least this is going to
be the case at the beginning.&lt;/p&gt;
&lt;h2 id="rubygem-packaging-article"&gt;Rubygem packaging article&lt;/h2&gt;
&lt;p&gt;Half done, nothing commited yet, I have everything local. This takes more time
than I expected, as I want it to be easily understandable by people that don't
have a clue, but also a good guide for more experienced users. I am rather picky
and I read what I write many times, so yeah, this is going to take longer to finish.&lt;/p&gt;
&lt;h2 id="todo-next-week"&gt;TODO next week&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Categorize gems according to their dependencies.&lt;/li&gt;
&lt;li&gt;Submit 5-10 more gems.&lt;/li&gt;
&lt;li&gt;Deploy GitLab on a Fedora server and test with some packaged gems. This is going to hit me hard I feel it :p&lt;/li&gt;
&lt;li&gt;Maybe write an unofficial guide of how to install GitLab in Fedora, haven't checked if there is a guide out in the internets.&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Tue, 09 Jul 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.github.io,2013-07-09:en/blog/2013/gsoc-weekly-update-3-and-4</guid><category>gsoc</category><category>fedora</category><category>gitlab</category></item><item><title>GSoC - Weekly update 2</title><link>http://axilleas.github.io/en/blog/2013/gsoc-weekly-update-2</link><description>&lt;p&gt;Unfortunately this week hasn't been very productive due to lack of time. I managed
to package 5-6 more gems, but I haven't submit them in Bugzilla yet. As always, the
most difficult and time consuming task is to make all the test suites provided
with each gem pass. And believe me this isn't always easy. So, here is what I did
this week.&lt;/p&gt;
&lt;h2 id="meeting-gitlab-devs"&gt;Meeting GitLab devs&lt;/h2&gt;
&lt;p&gt;We arranged a google hangout and we talked about the progress I make.
They were kind enough to ask whether I need help with something. 
Then I got to meet in person &lt;a href="https://github.com/dosire"&gt;Sytse Sijbrandij&lt;/a&gt; and &lt;a href="https://github.com/maxlazio"&gt;Marin Jankovski&lt;/a&gt; 
during &lt;a href="http://euruko2013.org/"&gt;Euruko 2013&lt;/a&gt;. Really cool guys.&lt;/p&gt;
&lt;p&gt;Our main concern was about the gems that are GitLab's forks and how we should
deal with them since it is very unlikely they get accepted into the official Fedora
repos. See next week TODOs about that matter.&lt;/p&gt;
&lt;h2 id="wikification-and-versioning-process"&gt;Wikification and versioning process&lt;/h2&gt;
&lt;p&gt;I started a wiki page on &lt;a href="https://fedoraproject.org/wiki/User:Axilleas/GitLab"&gt;GitLab&lt;/a&gt;, listing all the &lt;a href="https://github.com/axilleas/gsoc/blob/master/rubygems_missing"&gt;dependencies&lt;/a&gt; and their versions.
I said version&lt;strong&gt;s&lt;/strong&gt; because we have to deal with version mismatch, &lt;a href="https://fedoraproject.org/wiki/GSOC_2013/Student_Application_Axilleas/Gitlab%28463%29#Version_mismatch"&gt;remember&lt;/a&gt;?
I am working on a script to get them automatically on a table. So far, I can extract
GitLab's and upstream versions whereas I still need Fedora's. Here's how I do it.&lt;/p&gt;
&lt;h3 id="gitlab"&gt;GitLab&lt;/h3&gt;
&lt;p&gt;gem versions are retrieved from &lt;a href="https://github.com/axilleas/gsoc/blob/master/gemfile.py#L30"&gt;this&lt;/a&gt; dictionary. Pretty simple.&lt;/p&gt;
&lt;h3 id="upstream"&gt;Upstream&lt;/h3&gt;
&lt;p&gt;Using &lt;a href="https://github.com/axilleas/gsoc/blob/master/gemfile.py#L83"&gt;this&lt;/a&gt; method by qeuerying the API of rubygems.org and iterrating
through the missing gems, I can get in a list of the latest gem versions.&lt;/p&gt;
&lt;h3 id="fedora"&gt;Fedora&lt;/h3&gt;
&lt;p&gt;There is this nice tool in ruby called &lt;a href="https://rubygems.org/gems/pkgwat"&gt;pkgwat&lt;/a&gt; which queries Fedora's repo
database. This is also used by &lt;a href="https://github.com/zuhao/isitfedoraruby/blob/master/app/models/rpm_importer.rb#L46"&gt;isitfedoraruby&lt;/a&gt;, which unfortunately doesn't have
an API. This would make my work a lot easier.&lt;/p&gt;
&lt;p&gt;So, I decided to give this a shot by first &lt;a href="https://github.com/axilleas/fedora/blob/master/packages/rubygem-pkgwat/rubygem-pkgwat.spec"&gt;packaging&lt;/a&gt; it. This is what I am learning
here, isn't it? I thought this would be a matter of time since it only depends on
one unpackaged gem, &lt;a href="https://rubygems.org/gems/sanitize"&gt;sanitize&lt;/a&gt; (which ironically is needed by GitLab too).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(And I just whipped out a mosquito. Where the hell are they going 14.30 in the afternoon?...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The process that I thought would take me 30 minutes top, still goes on.
You see, &lt;code&gt;pkgwat&lt;/code&gt; has a fixed dependency on &lt;code&gt;nokogiri 1.5.5&lt;/code&gt; whereas the latest
&lt;code&gt;sanitize 2.0.4&lt;/code&gt; requires &lt;code&gt;nokogiri&amp;gt;=1.6.0&lt;/code&gt;. On Fedora we have &lt;code&gt;nokogiri 1.5.9&lt;/code&gt;.
Let me draw that for you.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Dependency hell" src="http://axilleas.github.io/static/images/pkgwat.png" /&gt;&lt;/p&gt;
&lt;p&gt;Welcome to Gem dependency hell. The only way to install it is through
&lt;code&gt;gem install pkwat&lt;/code&gt;...&lt;/p&gt;
&lt;h2 id="package-review"&gt;Package review&lt;/h2&gt;
&lt;p&gt;My first informal review in order to be sponsored as a packager was 
&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=927374"&gt;rubygem-rugged&lt;/a&gt;. I did all my homework and I tested the given
SPEC and SRPM with fedora-review, I built the rpm using both mock and rpmbuild 
and then ran rpmlint against the produced packages. I made a few notes of 
what I thought needed fixing and with some help from Vit&lt;sup id="fnref:cheat"&gt;&lt;a class="footnote-ref" href="#fn:cheat" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; I submited
my review.&lt;/p&gt;
&lt;h2 id="package-submission"&gt;Package submission&lt;/h2&gt;
&lt;p&gt;Last week I submited for review &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=969877"&gt;rubygem-timers&lt;/a&gt;, this week it
is &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=978284"&gt;rubygem-redis&lt;/a&gt;. One package a week you say? Dude are you
ever going to package all these gems? Well, submiting a package for review
in bugzilla takes some time, as I carefully check to follow the guidelines
as much as I can. The toughest part of it all are the testing suites.
A test may rely on other gems that are not in Fedora yet, so I try to package 
them as well. &lt;a href="https://github.com/axilleas/fedora/tree/master/packages"&gt;Here&lt;/a&gt; you will find some packages I am working on. 
Most of them are not submited for review yet.&lt;/p&gt;
&lt;h2 id="todos-for-next-week"&gt;TODOs for next week&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Get more packages finished&lt;/li&gt;
&lt;li&gt;Complete the version table in wiki&lt;/li&gt;
&lt;li&gt;Start porting gemfile.py into ruby (eventually)&lt;/li&gt;
&lt;li&gt;Continue writing the article about Rubygem packaging&lt;/li&gt;
&lt;li&gt;Talk to infra team to see how that forked-gem-packaging will go&lt;/li&gt;
&lt;li&gt;I am just a placeholder, nothing useful here, I just wanted to continue the stairs&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:cheat"&gt;
&lt;p&gt;I actually did seek for some help in &lt;a href="https://lists.fedoraproject.org/pipermail/ruby-sig/2013-July/001373.html"&gt;Ruby-SIG&lt;/a&gt; ML :p&amp;#160;&lt;a class="footnote-backref" href="#fnref:cheat" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Tue, 02 Jul 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.github.io,2013-07-02:en/blog/2013/gsoc-weekly-update-2</guid><category>gsoc</category><category>fedora</category><category>gitlab</category></item><item><title>GSoC - Weekly update 1</title><link>http://axilleas.github.io/en/blog/2013/gsoc-weekly-update-1</link><description>&lt;p&gt;It's been over a week that GSoC started and here is a weekly report of what achieved
so far.&lt;/p&gt;
&lt;h2 id="weekly-process"&gt;Weekly process&lt;/h2&gt;
&lt;h3 id="workflow"&gt;Workflow&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://trello.com/board/gitlab/51b844202ed21a6735011b25"&gt;Trello board&lt;/a&gt; - This is a web app in which you can manage your workflow by adding
tasks that are to be completed. I set it up to remind me the things I have to accomplish
in due time. Cool thing is that there is an android app too, so I can manage it
from wherever I am :)&lt;/p&gt;
&lt;h3 id="first-package"&gt;First package&lt;/h3&gt;
&lt;p&gt;I submitted my first package to Bugzilla for review. Yay! It is called &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=969877"&gt;timers&lt;/a&gt;
and is of course a rubygem (what else :p). Not a big deal, just an easy one to get
me started.&lt;/p&gt;
&lt;h3 id="list-of-gems-to-package"&gt;List of gems to package&lt;/h3&gt;
&lt;p&gt;I re-calculated GitLab's gem dependencies, this time including only the ones
needed for runtime. I ditched from the list the ones that are used for testing/development.
Not that they are not useful, but for the time being runtime dependencies
are a priority. I used a really ugly hack but it works for now. Here is how:
Clone &lt;a href="https://github.com/gitlabhq/gitlabhq"&gt;GitLab&lt;/a&gt;, cd into it and run:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;bundle &lt;span class="nb"&gt;exec &lt;/span&gt;install --deployment --without &lt;span class="nb"&gt;test &lt;/span&gt;development
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will install all deps included in the Gemfile except for the ones in test and 
development groups. Then, using a for loop we can iterate under the &lt;code&gt;vendor/bundle/ruby/1.9.1/gems&lt;/code&gt;
directory and write the results in a file.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;for &lt;/span&gt;i in &lt;span class="sb"&gt;`&lt;/span&gt;ls vendor/bundle/ruby/1.9.1/gems&lt;span class="sb"&gt;`&lt;/span&gt;; &lt;span class="k"&gt;do &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &amp;gt;&amp;gt; ../gitlab53-gems; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The list contains gems in the format of &lt;code&gt;gem_name-1.0.0&lt;/code&gt; so I had to clean that
up a little. I used some string methods in the &lt;a href="https://github.com/axilleas/gsoc/blob/master/gemfile.py#L30"&gt;python script&lt;/a&gt; and stored those values
in a dictionary where key is the gem name and value its version. Then the names
list was easily retrievable. All I had to do is call the &lt;code&gt;keys()&lt;/code&gt; method on
the dictionary and store the result in a &lt;a href="https://github.com/axilleas/gsoc/blob/master/rubygems_gitlab"&gt;file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then, I had somehow to include in the list of already packaged gems, the ones that 
are submitted in bugzilla for review. No need to work on them if their specfile
is already submitted for review, right? For that I used the &lt;a href="https://fedorahosted.org/python-bugzilla/"&gt;python-bugzilla&lt;/a&gt;
tool that queries a Bugzilla instance and spits nice &lt;a href="https://github.com/axilleas/gsoc/blob/master/rubygems_bugzilla_raw"&gt;formated results&lt;/a&gt;.
The query is pretty much self explanatory. In the end I just sorted them according
to their bug status.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;bugzilla query --product&lt;span class="o"&gt;=&lt;/span&gt;fedora --bug_status&lt;span class="o"&gt;=&lt;/span&gt;new,assigned --component&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Package Review&amp;#39;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
--short_desc&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rubygem-&amp;#39;&lt;/span&gt; | sort -k2 -r &amp;gt; &lt;span class="nv"&gt;$bugzilla_gems_raw&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Below, using the same query methods and some sed/awk magic&lt;sup id="fnref:json"&gt;&lt;a class="footnote-ref" href="#fn:json" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;, we end up with a file
containing only the names of gems that are submitted for review in Bugzilla.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;bugzilla query --product&lt;span class="o"&gt;=&lt;/span&gt;fedora --bug_status&lt;span class="o"&gt;=&lt;/span&gt;new,assigned --component&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Package Review&amp;#39;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
--short_desc&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rubygem-&amp;#39;&lt;/span&gt; | awk &lt;span class="s1"&gt;&amp;#39;BEGIN { FS = &amp;quot; - &amp;quot; }; { print $3 }&amp;#39;&lt;/span&gt; | awk &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;BEGIN { FS = &amp;quot;:&amp;quot; }; { print $2 }&amp;#39;&lt;/span&gt; | sed -e &lt;span class="s1"&gt;&amp;#39;s/rubygem-//&amp;#39;&lt;/span&gt; | sort -k1 &amp;gt; &lt;span class="nv"&gt;$bugzilla_gems&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That list, combined with the query from the official repos, results in the &lt;a href="https://github.com/axilleas/gsoc/blob/master/rubygems_fedora"&gt;final&lt;/a&gt;
one which has all the Ruby gems already packaged or are to be packaged for Fedora.&lt;/p&gt;
&lt;p&gt;I also wrote a method to store those values in a &lt;a href="https://github.com/axilleas/gsoc/blob/master/gemfile.py#L95"&gt;dictionary&lt;/a&gt; in the format
of &lt;code&gt;dict = { gem_name: [bug_id, status, assignee, description] }&lt;/code&gt;. It might come
in handy in the future, who knows!&lt;/p&gt;
&lt;p&gt;Next step was to find the missing gems that I will have to package for Fedora.
Comparing those two lists we end up with this &lt;a href="https://github.com/axilleas/gsoc/blob/master/rubygems_missing"&gt;list&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And the new results are:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Gitlab uses &lt;strong&gt;143&lt;/strong&gt; runtime gems.&lt;/p&gt;
&lt;p&gt;Fedora has packaged &lt;strong&gt;461&lt;/strong&gt; gems.&lt;/p&gt;
&lt;p&gt;There are &lt;strong&gt;73&lt;/strong&gt; common gems.&lt;/p&gt;
&lt;p&gt;There should be packaged &lt;strong&gt;70&lt;/strong&gt; gems.&lt;/p&gt;
&lt;p&gt;Fedora will have &lt;strong&gt;15.18 %&lt;/strong&gt; more ruby packages, that is &lt;strong&gt;531&lt;/strong&gt; gems in total.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="gem-tree-dependencies"&gt;Gem tree dependencies&lt;/h3&gt;
&lt;p&gt;There are a lot of gems that depend on each other which means one has to
be picky as to what to package first. The best way would be: given a package,
find its dependency tree and start packaging first the leafs that have no children
going all the way up until you reach to the root.&lt;/p&gt;
&lt;p&gt;I started writing a &lt;a href="https://github.com/axilleas/fedora/tree/master/gitlab-deps/gemtree"&gt;script&lt;/a&gt; in ruby as a way to better learn the language,
but I have yet to iplement the DFS algorithm which will traverse through all
dependencies. Any comments on how to best approach this are welcomed!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Update!!&lt;/em&gt;&lt;/strong&gt; I just found out this reaaally cool site: &lt;a href="https://gemlou.pe"&gt;https://gemlou.pe&lt;/a&gt;
which parses rubygems.org and lists the runtime tree dependencies of a gem through 
javascript!&lt;/p&gt;
&lt;h3 id="article-about-gem-packaging"&gt;Article about gem packaging&lt;/h3&gt;
&lt;p&gt;I started writing an article about packaging a Ruby gem in Fedora. I want to
note down the whole process, beginning from the use of gem2rpm to the review process.
At first I wanted to have it finished by this week, but the information is so vast
that I will take my time and write it piece by piece. You can follow the process &lt;a href="https://github.com/axilleas/axilleas.github.io/blob/source/src/posts/en/2013-06-12-fedora-rubygem-packaging.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="todo"&gt;TODO&lt;/h2&gt;
&lt;p&gt;Some TODOs for this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Continue writing the article about Rubygem packaging&lt;/li&gt;
&lt;li&gt;Make some unofficial package reviews in order to get &lt;a href="https://fedoraproject.org/wiki/Join_the_package_collection_maintainers#Get_Sponsored"&gt;sponsored&lt;/a&gt; as a packager&lt;/li&gt;
&lt;li&gt;Make more package submissions (I have some specfiles ready)&lt;/li&gt;
&lt;li&gt;Start wikifying the process (like the &lt;a href="https://fedoraproject.org/wiki/User:Ktdreyer/Gitorious"&gt;Gitorious&lt;/a&gt; page)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="extras"&gt;Extras&lt;/h2&gt;
&lt;p&gt;Apart from the GSoC program that is an awesome experience, there are some other
cool stuff going on this summer. &lt;/p&gt;
&lt;p&gt;First one is &lt;a href="http://euruko2013.org/"&gt;Euruko&lt;/a&gt; which will take place in
Athens, so it will be easy to attend. I have already purchased a ticket. I am sure
that it's gonna be awesome and I'll get to meet the GitLab devs as well :)&lt;/p&gt;
&lt;p&gt;The other one is a MOOC by UC Berkley and is a course about agile development and SaaS.
It has two parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/uc-berkeley/cs-169-1x/software-service/993"&gt;CS169.1x&lt;/a&gt; starts on July 2nd and is lasting 5 weeks&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/uc-berkeley/cs-169-2x/software-service/1005"&gt;CS169.2x&lt;/a&gt; starts on August 13th and is lasting 6 weeks&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The language they use is Ruby and the framework on which they build the apps is
Rails. I am going to attend both courses as it is strictly related to GitLab and
my GSoC involvement. Actually, I already bought the accompanying &lt;a href="http://www.saasbook.info/"&gt;book&lt;/a&gt; (not mandatory)
and started reading it :)&lt;/p&gt;
&lt;p&gt;I will try to be more on schedule next time and post about my progress at the end
of each week.&lt;/p&gt;
&lt;p&gt;Cheers!&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:json"&gt;
&lt;p&gt;It would make matters easier if the query returned a json file. I haven't
seen anything in the man page about json support.&amp;#160;&lt;a class="footnote-backref" href="#fnref:json" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Tue, 25 Jun 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.github.io,2013-06-25:en/blog/2013/gsoc-weekly-update-1</guid><category>gsoc</category><category>fedora</category><category>gitlab</category></item><item><title>Accepted for GSoC 2013</title><link>http://axilleas.github.io/en/blog/2013/accepted-for-gsoc-2013</link><description>&lt;p&gt;&lt;img alt="gsoc-logo" src="https://1-ps.googleusercontent.com/sx/s.google-melange.appspot.com/www.google-melange.com/soc/content/2-1-20130521/images/gsoc/logo/924x156xbanner-gsoc2013.png.pagespeed.ic.Z9V_lgyiqp.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Sooo, I am happy to announce that I got accepted to this year's Google Summer of Code!
Couldn't be more happy right now :)&lt;/p&gt;
&lt;p&gt;For those that have no idea, here is my &lt;a href="https://fedoraproject.org/wiki/GSOC_2013/Student_Application_Axilleas/Gitlab%28463%29"&gt;proposal&lt;/a&gt; on Fedora's wiki (&lt;a href="https://fedoraproject.org/wiki/User:Axilleas"&gt;my user&lt;/a&gt;). 
I have in mind to make a follow post on how I dealt with all this the past three months.&lt;/p&gt;
&lt;p&gt;Special thanks to &lt;a href="https://github.com/johngian"&gt;John Giannelos&lt;/a&gt; for pressuring me to apply :p&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Mon, 27 May 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.github.io,2013-05-27:en/blog/2013/accepted-for-gsoc-2013</guid><category>gsoc</category><category>fedora</category><category>gitlab</category><category>superexcited</category></item><item><title>Bringing GitLab to Fedora</title><link>http://axilleas.github.io/en/blog/2013/bringing-gitlab-in-fedora</link><description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;Update&lt;/em&gt;&lt;/strong&gt;: I just got a confirmation mail that my proposal got accepted! &lt;a href="http://axilleas.github.io/en/blog/2013/accepted-for-gsoc-2013"&gt;Read here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So, I decided to write some info regarding my involvement for this year's
&lt;a href="http://www.google-melange.com/gsoc/homepage/google/gsoc2013" title="Google Summer of Code 2013"&gt;Google Summer of Code&lt;/a&gt;. I have been using/testing GitLab since
version 2.0 (almost a year now) and I am thrilled to see how much it has
growed since. This year I got a little more involved into this and
I made &lt;a href="https://github.com/gitlabhq/gitlabhq/commits/master/doc/install/installation.md?author=axilleas"&gt;two&lt;/a&gt; &lt;a href="https://github.com/gitlabhq/gitlabhq/commits/master/lib/tasks/gitlab/check.rake?author=axilleas"&gt;commits&lt;/a&gt; upstream. Nothing fancy, but I hope to
contribute more as time passes by.&lt;/p&gt;
&lt;p&gt;In the rest of this article I will try to explain what GitLab is,
how Fedora is involved into all this and what are the benefits of this involvement.
This is the first of many follow-up posts I intend to write, so keep tight!&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-gitlab"&gt;What is GitLab?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fedoras-involvement-so-far"&gt;Fedora's involvement so far&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-are-the-benefits"&gt;What are the benefits&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#get-more-ruby-packages-in-the-repos"&gt;Get more ruby packages in the repos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#a-new-service-for-fedorahostedorg"&gt;A new service for fedorahosted.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#next-steps-and-things-to-overcome"&gt;Next steps and things to overcome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="what-is-gitlab"&gt;What is GitLab?&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://blog.gitlab.com" title="GitLab home page"&gt;GitLab&lt;/a&gt; is an &lt;a href="https://github.com/gitlabhq/gitlabhq" title="GitLab on Github :p"&gt;open source&lt;/a&gt; MIT licenced &lt;a href="http://git-scm.com" title="git home page"&gt;git&lt;/a&gt; repository
management application. It is built on &lt;a href="http://rubyonrails.org/" title="Ruby on Rails"&gt;Ruby on Rails&lt;/a&gt; and is
one of the most &lt;a href="https://github.com/popular/starred" title="GitLab featured in Github's most popular repos"&gt;popular&lt;/a&gt; projects featured on Github.
It is used by many companies as their internal git management repository.
The reason it gained so much popularity is that it bares a strong resemblance
to github's &lt;a href="http://gitlab.org/screenshots/" title="GitLab screenshots"&gt;looks&lt;/a&gt; and &lt;a href="http://blog.gitlab.com/features/" title="GitLab features"&gt;feels&lt;/a&gt;.
It is a project with great potential, under heavy development with a release
cycle every month. That makes it possible to apply bug fixes quite regularly
and test new features. And since a picture is worth a thousand words, here is
a &lt;a href="http://demo.gitlab.com/users/sign_in" title="GitLab demo site"&gt;demo site&lt;/a&gt; where you can test all the latest features.&lt;/p&gt;
&lt;h1 id="fedoras-involvement-so-far"&gt;Fedora's involvement so far&lt;/h1&gt;
&lt;p&gt;The thought of GitLab being packaged and deployed for &lt;a href="http://fedorahosted.org"&gt;Fedora Hosted&lt;/a&gt; isn't new.
It all started last March when &lt;a href="https://fedoraproject.org/wiki/User:Mojavelinux"&gt;Dan Allen&lt;/a&gt; &lt;a href="https://lists.fedoraproject.org/pipermail/infrastructure/2012-March/011463.html"&gt;proposed&lt;/a&gt; GitLab 
to be used as a service for Fedora Hosted. If you follow the conversation 
it summarizes to some key points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Projects pages should be ideally hosted as &lt;code&gt;$projectname.fedorahosted.org&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;GitLab and its dependencies should be packaged for Fedora and EPEL 6.&lt;/li&gt;
&lt;li&gt;Puppetize the whole thing up. &lt;a href="https://forge.puppetlabs.com/sbadia/gitlab"&gt;There&lt;/a&gt; are &lt;a href="https://forge.puppetlabs.com/lboynton/gitlab"&gt;some&lt;/a&gt; configs, but they'll sure need some adjustment.&lt;/li&gt;
&lt;li&gt;We need to form a team of maintainers for longterm support even after GSoC is over.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There was even a &lt;a href="https://groups.google.com/forum/?fromgroups=#!topic/gitlabhq/SQMDi-yyXmU"&gt;post&lt;/a&gt; in GitLab's list, also by Dan Allen,
bringing the project to the attention of the GitLab community.
The most interesting thing was that the &lt;a href="https://github.com/randx"&gt;lead developer&lt;/a&gt; of GitLab 
was more than willing to help. In the end, there was an &lt;a href="https://fedoraproject.org/wiki/GSOC_2012/Student_Application_babakb/GitlabSetup" title="Student application for GitLab at GSoC 2012"&gt;application&lt;/a&gt; but 
unfortunately that was the last anyone heard about the project.&lt;/p&gt;
&lt;p&gt;So, here we are a year after with me applying for the project. To be exact
there is &lt;a href="https://lists.fedoraproject.org/pipermail/summer-coding/2013-March/000286.html"&gt;another&lt;/a&gt; sudent interested in this as well, so that makes it two of us.
I have already expressed my interest in &lt;a href="https://lists.fedoraproject.org/pipermail/ruby-sig/2013-March/001270.html"&gt;RubySIG&lt;/a&gt; and in the &lt;a href="https://lists.fedoraproject.org/pipermail/infrastructure/2013-March/012631.html"&gt;infrastructure&lt;/a&gt; mailing list.
I was glad to see that there was a positive response from Dan Allen,
as well as some valuable advice from user &lt;a href="https://fedoraproject.org/wiki/User:Ktdreyer"&gt;Ken Dreyer&lt;/a&gt; who currently 
tries to deal with &lt;a href="https://fedoraproject.org/wiki/User:Ktdreyer/Gitorious"&gt;Gitorious&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="what-are-the-benefits"&gt;What are the benefits&lt;/h1&gt;
&lt;p&gt;There are two major benefits for Fedora.&lt;/p&gt;
&lt;h2 id="get-more-ruby-packages-in-the-repos"&gt;Get more ruby packages in the repos&lt;/h2&gt;
&lt;p&gt;Prior to addressing my interest in the mailing lists, I approached &lt;a href="https://fedoraproject.org/wiki/User:Vondruch"&gt;Vít Ondruch&lt;/a&gt; to get some feedback about this task.
He was very helpful and pointed me to what should be done as a first step.
That is&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;identify which gems are missing in Fedora and package them,&lt;/li&gt;
&lt;li&gt;compile a list of gems GitLab is using, including all their dependencies (and possibly bundled dependencies).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For the first task, I used a hackish bash script which first accumulates 
all rubygems in a file and then removes the duplicate packages and the ones
that are documentation.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nv"&gt;file_raw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/home/axil/tools/fedora-gitlab/rubygems_fedora_raw&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;file_new&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/home/axil/tools/fedora-gitlab/rubygems_fedora&amp;#39;&lt;/span&gt;

yum search all rubygem | awk &lt;span class="s1"&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt; &amp;gt; &lt;span class="nv"&gt;$file_raw&lt;/span&gt;

sed -e &lt;span class="s1"&gt;&amp;#39;s/rubygem-//g&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;s/.noarch//g&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;s/.x86_64//g&amp;#39;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
-e &lt;span class="s1"&gt;&amp;#39;/i686/d&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;/==/d&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;/:/d&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;/-doc/d&amp;#39;&lt;/span&gt; &amp;lt; &lt;span class="nv"&gt;$file_raw&lt;/span&gt; &amp;gt; &lt;span class="nv"&gt;$file_new&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In order to find what gems GitLab depends on, I used the &lt;a href="https://github.com/gitlabhq/gitlabhq/blob/master/Gemfile.lock"&gt;Gemfile.lock&lt;/a&gt; 
and wrote a simple python &lt;a href="https://github.com/axilleas/gsoc/blob/master/gemfile.py"&gt;script&lt;/a&gt;&lt;sup id="fnref:python-script"&gt;&lt;a class="footnote-ref" href="#fn:python-script" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; that computes how many and which gems 
Fedora and GitLab have in common. Below are some draft&lt;sup id="fnref:draft_numbers"&gt;&lt;a class="footnote-ref" href="#fn:draft_numbers" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; numbers and a bar chart.&lt;/p&gt;
&lt;div id="rubygems_chart"&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;Gitlab uses: &lt;strong&gt;203&lt;/strong&gt; gems.&lt;/p&gt;
&lt;p&gt;Fedora has packaged: &lt;strong&gt;385&lt;/strong&gt; gems.&lt;/p&gt;
&lt;p&gt;There are &lt;strong&gt;97&lt;/strong&gt; common gems.&lt;/p&gt;
&lt;p&gt;There should be packaged: &lt;strong&gt;106&lt;/strong&gt; gems.&lt;/p&gt;
&lt;p&gt;Fedora will have &lt;strong&gt;27.53 %&lt;/strong&gt; more ruby packages, that is &lt;strong&gt;482&lt;/strong&gt; gems in total.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Not bad, &lt;strong&gt;106&lt;/strong&gt; more ruby packages! That is a plus now that Fedora is considered 
one of &lt;a href="https://bugs.ruby-lang.org/projects/ruby-trunk/wiki/20SupportedPlatforms"&gt;Ruby's supported platforms&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; I just found out about the &lt;a href="http://isitfedoraruby.com/stats/gemfile_tool"&gt;gemfile tool&lt;/a&gt; that isitfedoraruby.com&lt;sup id="fnref:isitfedruby"&gt;&lt;a class="footnote-ref" href="#fn:isitfedruby" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;
is using. This will come in handy. &lt;/p&gt;
&lt;h2 id="a-new-service-for-fedorahostedorg"&gt;A new service for fedorahosted.org&lt;/h2&gt;
&lt;p&gt;After the packaging is done, the next big thing is the deployment process on 
&lt;a href="http://fedorahosted.org"&gt;Fedora Hosted&lt;/a&gt; as a new service. Quoting Dan Allen's &lt;a href="https://lists.fedoraproject.org/pipermail/infrastructure/2013-March/012680.html"&gt;thought&lt;/a&gt;: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the key reasons I've been pushing for GitLab is because I see the
potential it has for drastically improving the discoverability of the
Fedora code base and encourage participation. I've been involved with a lot
of projects on GitHub and I'm amazed by how simple it is to submit changes
(to both code and documentation). In fact, it's often easier to send a
patch with a description of the change than to create an issue...flipping
the normal bug submitting process on its head.&lt;/p&gt;
&lt;p&gt;GitHub also works because it enables collaboration over coordination. You
don't have to ask for permission on GitHub. You just do it. Then you can
easily track when they get pulled in or changes are requested. (the same is
true of GitLab).&lt;/p&gt;
&lt;p&gt;With GitLab, we can bring that experience to the Fedora community. It's a
large enough community (esp in terms of repositories), that I'm positive
we'd see that collaboration kindle within the Fedora instance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So yeah, this is a big deal from this point of view :)&lt;/p&gt;
&lt;h1 id="next-steps-and-things-to-overcome"&gt;Next steps and things to overcome&lt;/h1&gt;
&lt;p&gt;There is certainly a lot more to do. For starters, as a Fedora newbie, 
I have to run through the &lt;a href="https://fedoraproject.org/wiki/Packaging:Ruby"&gt;Ruby guidelines&lt;/a&gt; and learn 
about the philosophy of rpm. Luckily, I am not a linux newbie (I've been 
using Archlinux for 5 years) and I am adopting rapidly.
Then, I need to learn some Ruby. I have already printed &lt;em&gt;&lt;a href="http://mislav.uniqpath.com/poignant-guide"&gt;why's (poignant) Guide to Ruby&lt;/a&gt;&lt;/em&gt;
which is considered a must read, and believe me it is! (download the pdf from &lt;a href="https://github.com/downloads/mislav/poignant-guide/whys-poignant-guide-to-ruby.pdf"&gt;here&lt;/a&gt;). 
&lt;a href="http://ruby.learncodethehardway.org/book/"&gt;Learn Ruby the hard way&lt;/a&gt; is also a good starting point. Ι think I'm on the right track.&lt;/p&gt;
&lt;p&gt;Now, as far as the packaging process is concerned, here is what more needs to be done:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MariaDB support. Since MariaDB will be the &lt;a href="https://lists.fedoraproject.org/pipermail/devel/2013-January/176584.html" title="Proposed F19 Feature: Replace MySQL with MariaDB"&gt;default&lt;/a&gt; &lt;a href="https://fedoraproject.org/wiki/Features/ReplaceMySQLwithMariaDB" title="Features/ReplaceMySQLwithMariaDB"&gt;implementation&lt;/a&gt; of MySQL in Fedora 19, GitLab will need to support it.&lt;/li&gt;
&lt;li&gt;Write systemd service files. I had made an &lt;a href="https://github.com/axilleas/gitlab-recipes/tree/master/systemd"&gt;attempt&lt;/a&gt; two months ago when I was trying to set up GitLab on Archlinux, but it is far from perfect.&lt;/li&gt;
&lt;li&gt;Packages to be EPEL compatible. A great advantage if GitLab gets packaged for Fedora, is that it would make it as easy as pie to install on a server running Red Hat, Centos, or some other rpm based distro.&lt;/li&gt;
&lt;li&gt;Ruby 2.0 compatibility. I don't think that'll be much of a stopper since GitLab is in the &lt;a href="https://github.com/gitlabhq/gitlabhq/commit/52cd655f71c6a5393b71640c13cd95e35e8d2624"&gt;process&lt;/a&gt; of supporting it, but I put it here just in case.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's all for now. If you read through here you should have a good understanding
of this project's goal. More posts to come!&lt;/p&gt;
&lt;!--Load the AJAX API--&gt;

&lt;script type="text/javascript" src="https://www.google.com/jsapi"&gt;&lt;/script&gt;

&lt;script type="text/javascript"&gt;

  // Load the Visualization API and the piechart package.
  google.load('visualization', '1.0', {'packages':['corechart']});

  // Set a callback to run when the Google Visualization API is loaded.
  google.setOnLoadCallback(drawChart);

  // Callback that creates and populates a data table,  
  // instantiates the pie chart, passes in the data and
  // draws it.
  function drawChart() {

  // Create the data table.
  var data = new google.visualization.DataTable();
  data.addColumn('string', '');
  data.addColumn('number', 'rubygems');
  data.addRows([
    ['GitLab', 203],
    ['Fedora', 385],
    ['Common', 97],
    ['To be packaged', 106],
    ['Total after packaging', 482]
    ]);

  // Set chart options
  var options = {'title':'Numbers calculated on 08-04-2013', 'width':600, 'height':500};

  // Instantiate and draw our chart, passing in some options.
  var chart = new google.visualization.BarChart(document.getElementById('rubygems_chart'));
  chart.draw(data, options);
  }
&lt;/script&gt;

&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:python-script"&gt;
&lt;p&gt;I should write it in ruby, I know :p&amp;#160;&lt;a class="footnote-backref" href="#fnref:python-script" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:draft_numbers"&gt;
&lt;p&gt;I say draft, mainly because that is a raw calculation of GitLab's dependencies. One has to take into account the different/old versions that may exist between Fedora and GtiLab. There are also some packages GitLab pulls from git and not rubygems.org. &amp;#160;&lt;a class="footnote-backref" href="#fnref:draft_numbers" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:isitfedruby"&gt;
&lt;p&gt;&lt;a href="http://isitfedoraruby.com"&gt;isitfedoraruby.com&lt;/a&gt; is a cool web app that was the result of &lt;a href="https://fedoraproject.org/wiki/GSOC_2012/Student_Application_Zuhao/IsItFedoraRuby"&gt;last year's GSoC&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:isitfedruby" rev="footnote" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Sun, 07 Apr 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.github.io,2013-04-07:en/blog/2013/bringing-gitlab-in-fedora</guid><category>fedora</category><category>gitlab</category><category>gscoc</category><category>ruby</category><category>rails</category></item></channel></rss>