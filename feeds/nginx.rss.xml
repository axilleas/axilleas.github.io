<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Over the line</title><link>http://axilleas.me/</link><description></description><atom:link href="http://axilleas.me/feeds/nginx.rss.xml" rel="self"></atom:link><lastBuildDate>Wed, 04 Mar 2015 00:00:00 +0200</lastBuildDate><item><title>How to install Diaspora on CentOS 7</title><link>http://axilleas.me/en/blog/2015/how-to-install-diaspora-on-centos-seven</link><description>&lt;p&gt;The tutorial isn't really hosted on my blog but on DigitalOcean's community
page, but I thought I could give some background regarding this decision.&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Last November, me, &lt;a href="http://www.roussos.cc/" title="Nikos Roussos blog"&gt;Nikos&lt;/a&gt; and &lt;a href="http://pierros.papadeas.gr/" title="Pierros Papadeas blog"&gt;Pierros&lt;/a&gt; decided to run a &lt;a href="https://diasporafoundation.org/" title="Diaspora foundation"&gt;Diaspora&lt;/a&gt; pod to
accomodate the needs of the Greek community and also increase the number of
active pods around the world. Right now we have 662 registered users and the
number keeps growing :)&lt;/p&gt;
&lt;p&gt;I had some experience in deploying Rails apps during my involvement with GitLab
and so I decided to share my findings in order that others could benefit as well.
This was also the first time I looked into Ansible so that we could easily
deploy our changes.&lt;/p&gt;
&lt;p&gt;Our customizations are &lt;a href="https://github.com/librenet/librenet.gr" title="librenet.gr on GitHub"&gt;free for everyone to see&lt;/a&gt; and so is our
&lt;a href="https://github.com/librenet/ansible" title="librenet.gr ansible repo"&gt;ansible code&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="tutorial"&gt;Tutorial&lt;/h2&gt;
&lt;p&gt;Instead of publishing this on my blog, I decided to go bigger and contacted
Digital Ocean to see if they were interested in hosting an article on Diaspora
installation. After several weeks of email exchanging, testing and rearranging
bits of the tutorial, &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-run-an-open-source-distributed-social-network-with-diaspora-on-centos-7" title="How To Run an Open-Source Distributed Social Network with Diaspora on CentOS 7"&gt;it is finally live&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Bare in mind that it is highly opinionated, based on the facts I gathered
during &lt;a href="https://librenet.gr"&gt;librenet.gr&lt;/a&gt; deployment.&lt;/p&gt;
&lt;p&gt;The reasoning behind this, is that DigitalOcean is viewed by way more people than
this little blog spot :p&lt;/p&gt;
&lt;p&gt;Also it is no secret that DigitalOcean pays to write, so that way I can put
some money on server costs :)&lt;/p&gt;
&lt;h3 id="bits-to-be-careful-about"&gt;Bits to be careful about&lt;/h3&gt;
&lt;p&gt;After I posted the link to &lt;code&gt;#diaspora&lt;/code&gt; on freenode, &lt;a href="http://jhass.eu/"&gt;jhass&lt;/a&gt;, one of the core
contributors of Diaspora raised some concerns, so this post is also partially
trying to explain the desicions behind the steps I included in the tutorial.&lt;/p&gt;
&lt;p&gt;First of all, do &lt;strong&gt;NOT&lt;/strong&gt; run Diaspora on production with a self-signed certificate.
This will cause future problems, like your pod not being able to talk effectively
to other pods. I already sent my concerns to DO, so I expect it to change any
time soon.&lt;/p&gt;
&lt;p&gt;Secondly, the guide relies on current stable version of Diaspora (&lt;code&gt;v0.4.1.2&lt;/code&gt;)
and the article will be deprecated in many areas starting with version 0.5.
Among others, future versions of Diaspora:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;will create the database automatically with &lt;code&gt;rake db:create&lt;/code&gt; asking for root
  password if it doesn't have permissions to create the DB&lt;/li&gt;
&lt;li&gt;will change the database collation from &lt;code&gt;utf8 -&amp;gt; utf8mb4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ruby 2.0.0p353&lt;/code&gt; which is in current CentOS repos, will be likely dropped
  in Diaspora 0.6 since it will be EOL'd in 2016&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, the next version of Diaspora will have chat support which adds a whole
other level of complexity to set up.&lt;/p&gt;
&lt;p&gt;Having said that, I will do my best to keep the current tutorial on par with
future Diaspora releases.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Wed, 04 Mar 2015 00:00:00 +0200</pubDate><guid>tag:axilleas.me,2015-03-04:en/blog/2015/how-to-install-diaspora-on-centos-seven</guid><category>diaspora</category><category>centos</category><category>nginx</category><category>rails</category><category>ruby</category><category>fedoraplanet</category></item><item><title>SELinux policy for nginx and GitLab unix socket in Fedora 19</title><link>http://axilleas.me/en/blog/2013/selinux-policy-for-nginx-and-gitlab-unix-socket-in-fedora-19</link><description>&lt;p&gt;The installation of GitLab in Fedora 19 went fine. I followed the official installation
guide with some deviations where necessary, mostly taken from the CentOS guide in
&lt;a href="https://github.com/gitlabhq/gitlab-recipes"&gt;gitlab-recipes&lt;/a&gt;. I setup nginx using the ssl &lt;a href="https://github.com/gitlabhq/gitlab-recipes/blob/master/web-server/nginx/gitlab-ssl"&gt;config&lt;/a&gt;, and poked some holes
in &lt;a href="https://github.com/gitlabhq/gitlab-recipes/tree/master/install/centos#8-configure-the-firewall"&gt;iptables&lt;/a&gt;. For systemd services I used &lt;a href="https://github.com/gitlabhq/gitlab-recipes/tree/master/init/systemd"&gt;these files&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, everything is set, configuration tests pass, services are started, nginx is started
and I finally point firefox to my FQDN (which by the way is fedora.axilleas.me, no secret)
just to see a big fat &lt;strong&gt;502 Bad Gateway&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;As wikipedia &lt;a href="http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#5xx_Server_Error"&gt;suggests&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;502 Bad Gateway&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The server was acting as a gateway or proxy and received an invalid response from the upstream server.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Spot on! The server (nginx) is acting as a proxy and received an invalid response from the upstream server (unicorn).
But what was that invalid response?&lt;/p&gt;
&lt;p&gt;I could reach &lt;code&gt;ip_addr:8080&lt;/code&gt; at which unicorn was listening, but not through my fqdn which
nginx was serving. So there clearly was something wrong with nginx.&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#error-hunting"&gt;Error hunting&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#nginx"&gt;Nginx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#selinux-you-crafty-little-blocker"&gt;SELinux you crafty little blocker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-a-custom-selinux-policy-module"&gt;Create a custom SELinux policy module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#add-nginx-to-git-group"&gt;Add nginx to git group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tldr"&gt;TL;DR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#integration-of-selinux-error-messages-with-journald"&gt;Integration of SELinux error messages with journald&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="error-hunting"&gt;Error hunting&lt;/h2&gt;
&lt;p&gt;So the first thing when such an error occurs is to look through the logs.&lt;/p&gt;
&lt;h3 id="nginx"&gt;Nginx&lt;/h3&gt;
&lt;p&gt;In &lt;code&gt;/var/log/nginx/gitlab_error.log&lt;/code&gt; I could see this error repeating:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;2013/08/26 21:43:01 [crit] 2597#0: *50 connect() to unix:/home/git/gitlab/tmp/sockets/gitlab.socket failed (13: Permission denied) while connecting to upstream, client 12.34.56.78, server: fedora.axilleas.me, request: &amp;quot;GET /users/sign_in HTTP/1.1&amp;quot;, upstream: &amp;quot;http://unix:/home/git/gitlab/tmp/sockets/gitlab.socket:/users/sign_in&amp;quot;, host: &amp;quot;fedora.axilleas.me&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So we got a permission denied while nginx is trying to connect to the unix socket of GitLab.
After some hours searching and reading answers in stackoverflow, it sroke to me to check
whether SELinux is to blame. I set it to permissive mode with &lt;code&gt;setenforce 0&lt;/code&gt; and voila,
nginx was suddenly recieving requests.&lt;/p&gt;
&lt;h3 id="selinux-you-crafty-little-blocker"&gt;SELinux you crafty little blocker&lt;/h3&gt;
&lt;p&gt;I remembered the awesome introductory guide of &lt;a href="http://wiki.centos.org/HowTos/SELinux"&gt;SELinux&lt;/a&gt; at CentOS wiki,
which I had used when rewriting the &lt;a href="https://github.com/gitlabhq/gitlab-recipes/blob/master/install/centos/README.md"&gt;CentOS installation guide&lt;/a&gt; for GitLab
and immediately started reading.&lt;/p&gt;
&lt;p&gt;By default, SELinux log messages are written to &lt;code&gt;/var/log/audit/audit.log&lt;/code&gt; via the Linux Auditing System &lt;code&gt;auditd&lt;/code&gt;.
If the &lt;code&gt;auditd&lt;/code&gt; daemon is not running, then messages are written to &lt;code&gt;/var/log/messages&lt;/code&gt;. 
SELinux log messages are labeled with the &lt;em&gt;AVC&lt;/em&gt; keyword so that they might be easily filtered from other messages, as with &lt;code&gt;grep&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;So, by greping nginx in &lt;code&gt;/var/log/audit/audit.log&lt;/code&gt; I found those relative AVC messages, which indicate indeed
a denial of nginx connection to &lt;code&gt;gitlab.socket&lt;/code&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;type=AVC msg=audit(1377542938.307:248364): avc:  denied  { write } for  pid=2597 comm=&amp;quot;nginx&amp;quot; name=&amp;quot;gitlab.socket&amp;quot; dev=&amp;quot;vda1&amp;quot; ino=1180273 scontext=system_u:system_r:httpd_t:s0 tcontext=system_u:object_r:httpd_sys_content_t:s0 tclass=sock_file
type=AVC msg=audit(1377542938.307:248364): avc:  denied  { connectto } for  pid=2597 comm=&amp;quot;nginx&amp;quot; path=&amp;quot;/home/git/gitlab/tmp/sockets/gitlab.socket&amp;quot; scontext=system_u:system_r:httpd_t:s0 tcontext=system_u:system_r:initrc_t:s0 tclass=unix_stream_socket
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using a tool called &lt;code&gt;audit2allow&lt;/code&gt; we are able to clear the AVC messages. If you haven't got it
installed, it is shipped with the &lt;code&gt;policycoreutils-devel&lt;/code&gt; package.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;grep nginx /var/log/audit/audit.log | audit2allow
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the result is:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;=============&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="o"&gt;==============&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;http_cache_port_t&lt;/span&gt;&lt;span class="nd"&gt;:tcp_socket&lt;/span&gt; &lt;span class="nt"&gt;name_connect&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;httpd_log_t&lt;/span&gt;&lt;span class="nd"&gt;:file&lt;/span&gt; &lt;span class="nt"&gt;setattr&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;httpd_sys_content_t&lt;/span&gt;&lt;span class="nd"&gt;:sock_file&lt;/span&gt; &lt;span class="nt"&gt;write&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;initrc_t&lt;/span&gt;&lt;span class="nd"&gt;:unix_stream_socket&lt;/span&gt; &lt;span class="nt"&gt;connectto&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;user_home_dir_t&lt;/span&gt;&lt;span class="nd"&gt;:dir&lt;/span&gt; &lt;span class="nt"&gt;search&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;user_home_t&lt;/span&gt;&lt;span class="nd"&gt;:dir&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="n"&gt;getattr&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;user_home_t&lt;/span&gt;&lt;span class="nd"&gt;:sock_file&lt;/span&gt; &lt;span class="nt"&gt;write&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;var_run_t&lt;/span&gt;&lt;span class="nd"&gt;:file&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;These are the policies that should be used with SELinux. Notice that &lt;code&gt;user_home&lt;/code&gt; is essential
since GitLab's &lt;code&gt;APP_ROOT&lt;/code&gt; is in &lt;code&gt;/home/git/&lt;/code&gt;. Similarly, you notice a policy related to 
the denied socket connection: &lt;code&gt;unix_stream_socket connectto&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="create-a-custom-selinux-policy-module"&gt;Create a custom SELinux policy module&lt;/h2&gt;
&lt;p&gt;After all the investigation we are closer to the solution. All we have to do is use &lt;code&gt;audit2allow&lt;/code&gt;
to generate a set of policy rules that would allow the required actions. We can generate
a local nginx Type Enforcement policy file (nginx.te): &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;grep&lt;/span&gt; &lt;span class="nt"&gt;nginx&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;audit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;audit&lt;/span&gt;&lt;span class="nc"&gt;.log&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;audit2allow&lt;/span&gt; &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="nt"&gt;nginx&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;nginx&lt;/span&gt;&lt;span class="nc"&gt;.te&lt;/span&gt;
&lt;span class="nt"&gt;cat&lt;/span&gt; &lt;span class="nt"&gt;nginx&lt;/span&gt;&lt;span class="nc"&gt;.te&lt;/span&gt;


&lt;span class="nt"&gt;module&lt;/span&gt; &lt;span class="nt"&gt;nginx&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nt"&gt;require&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;var_run_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;user_home_dir_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;httpd_log_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;httpd_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;user_home_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;httpd_sys_content_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;initrc_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;http_cache_port_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;sock_file&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;unix_stream_socket&lt;/span&gt; &lt;span class="n"&gt;connectto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="n"&gt;getattr&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;class&lt;/span&gt; &lt;span class="nt"&gt;file&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;setattr&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;class&lt;/span&gt; &lt;span class="nt"&gt;tcp_socket&lt;/span&gt; &lt;span class="nt"&gt;name_connect&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;=============&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="o"&gt;==============&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;http_cache_port_t&lt;/span&gt;&lt;span class="nd"&gt;:tcp_socket&lt;/span&gt; &lt;span class="nt"&gt;name_connect&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;httpd_log_t&lt;/span&gt;&lt;span class="nd"&gt;:file&lt;/span&gt; &lt;span class="nt"&gt;setattr&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;httpd_sys_content_t&lt;/span&gt;&lt;span class="nd"&gt;:sock_file&lt;/span&gt; &lt;span class="nt"&gt;write&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;initrc_t&lt;/span&gt;&lt;span class="nd"&gt;:unix_stream_socket&lt;/span&gt; &lt;span class="nt"&gt;connectto&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;user_home_dir_t&lt;/span&gt;&lt;span class="nd"&gt;:dir&lt;/span&gt; &lt;span class="nt"&gt;search&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;user_home_t&lt;/span&gt;&lt;span class="nd"&gt;:dir&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="n"&gt;getattr&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;user_home_t&lt;/span&gt;&lt;span class="nd"&gt;:sock_file&lt;/span&gt; &lt;span class="nt"&gt;write&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;var_run_t&lt;/span&gt;&lt;span class="nd"&gt;:file&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We are not done yet, as this is a file for review only. We can then go ahead and use audit2allow 
to make a custom policy module to allow these actions: &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;grep nginx /var/log/audit/audit.log | audit2allow -M nginx
semodule -i nginx.pp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can check the policy module loaded correctly by listing loaded modules with &lt;code&gt;semodule -l&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After that, remember to enable SELinux again with &lt;code&gt;setenforce 1&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="add-nginx-to-git-group"&gt;Add nginx to git group&lt;/h2&gt;
&lt;p&gt;Unrelated to this article, but it is also needed for nginx to access the unix socket.
First we add nginx to git group, and then we make sure the group that owns &lt;code&gt;/home/git/&lt;/code&gt;
has read and execute permissions:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;usermod -a -G git nginx
chmod g+rx /home/git/
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="tldr"&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;To fix all nginx 502 issues, as root run:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;yum install -y policycoreutils-{python,devel}
grep nginx /var/log/audit/audit.log | audit2allow -M nginx
semodule -i nginx.pp
usermod -a -G git nginx
chmod g+rx /home/git/
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="integration-of-selinux-error-messages-with-journald"&gt;Integration of SELinux error messages with journald&lt;/h2&gt;
&lt;p&gt;In a very &lt;a href="http://danwalsh.livejournal.com/65777.html"&gt;interesting article&lt;/a&gt;, Dan Walsh explains how this whole process of error
hunting will be much easier with Fedora 20. I urge you to read it.&lt;/p&gt;
&lt;p&gt;With the upcoming changes, the error would have appeared at systemd's status log:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;systemctl status nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the possible solutions with:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;journalctl  -r -o verbose -u nginx.service
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pretty cool, huh?&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Tue, 27 Aug 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.me,2013-08-27:en/blog/2013/selinux-policy-for-nginx-and-gitlab-unix-socket-in-fedora-19</guid><category>selinux</category><category>fedora</category><category>gitlab</category><category>unixsocket</category><category>nginx</category></item></channel></rss>