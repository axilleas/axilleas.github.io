<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Over the line</title><link>http://axilleas.me/</link><description></description><atom:link href="http://axilleas.me/feeds/linux.rss.xml" rel="self"></atom:link><lastBuildDate>Thu, 12 Sep 2013 00:00:00 +0300</lastBuildDate><item><title>GSoC - Weekly update 11 and 12</title><link>http://axilleas.me/en/blog/2013/gsoc-weekly-update-11-and-12</link><description>&lt;p&gt;So far, I managed to &lt;a href="https://fedora.axilleas.me"&gt;deploy GitLab&lt;/a&gt; on a Fedora 19 machine using only packaged gems either from
the official repos or a &lt;a href="http://repos.fedorapeople.org/repos/axilleas/gitlab/fedora-19/"&gt;custom&lt;/a&gt; one I have created.&lt;/p&gt;
&lt;p&gt;Below you will find some more info as well as the url of the testing environment. 
You can use/test it and report any issues &lt;a href="https://github.com/axilleas/gsoc/issues"&gt;here&lt;/a&gt;. If anyone needs an admin account 
for further testing just let me know. Just bare in mind that you might see some 500 errors as I will be trying some things.&lt;/p&gt;
&lt;p&gt;More or less, here is the workflow I followed:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Set up GitLab in a VM following the official installation guide and test everything works&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm -rf /vendor/bundle&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Test with &lt;code&gt;bundle install --local RAILS_ENV=production&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;See the dependency differences&lt;/li&gt;
&lt;li&gt;Install with &lt;code&gt;yum&lt;/code&gt; the gems in Gemfile&lt;/li&gt;
&lt;li&gt;Replace in Gemfile/Gemfile.lock with Fedora versions&lt;/li&gt;
&lt;li&gt;Repeat steps 3,4,5,6&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For details on what is replaced see this &lt;a href="https://github.com/axilleas/gsoc/blob/master/Gemfile.lock.diff"&gt;Gemfile.lock.diff&lt;/a&gt;.
The systemd services I used can be found &lt;a href="https://github.com/axilleas/gsoc/tree/master/systemd"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are a lot to be done yet until this reaches to the official repos but that's a start.&lt;/p&gt;
&lt;h2 id="todo"&gt;TODO&lt;/h2&gt;
&lt;h3 id="short-term"&gt;Short term&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Write the gitlab.spec that will glue all the dependencies together&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="long-term"&gt;Long term&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Commit as many specs as  possible to BZ.&lt;/li&gt;
&lt;li&gt;GitLab forks: one option is to patch upstream with GitLab's changes. Second but rather avoided is to to ask FPC for an exception and package the forks as they are.&lt;/li&gt;
&lt;li&gt;Coordinate efforts with Debian ruby team (&lt;a href="http://debian.2.n7.nabble.com/Regarding-gitlab-td2843993.html"&gt;related discussion&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Deploy on rawhide: when GitLab supports rails 4. That depends on many dependencies gems as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="longer-term"&gt;Longer term&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;port to EPEL&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Thu, 12 Sep 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.me,2013-09-12:en/blog/2013/gsoc-weekly-update-11-and-12</guid><category>gsoc</category><category>fedora</category><category>gitlab</category><category>packaging</category></item><item><title>GitLab gem install benchmarking with bundler 1.4</title><link>http://axilleas.me/en/blog/2013/gitlab-gem-install-benchmarking-with-bundler-14</link><description>&lt;p&gt;It appears that the new &lt;code&gt;bundler 1.4.0&lt;/code&gt; will &lt;a href="https://github.com/bundler/bundler/pull/2481"&gt;support&lt;/a&gt; parallel gem installation. Thanks to &lt;a href="http://robots.thoughtbot.com/post/59584648154/parallel-gem-installing-using-bundler"&gt;thoughtbot's post&lt;/a&gt;
that brought that to my attention :)&lt;/p&gt;
&lt;p&gt;Now, since I've been dealing daily with GitLab for the past four months, I thought it would be a good candidate for testing.&lt;/p&gt;
&lt;p&gt;I tried it on my production server which is a QEMU VM machine. Here are the specs&lt;sup id="fnref:cpuinfo"&gt;&lt;a class="footnote-ref" href="#fn:cpuinfo" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;Operating System  : Debian 7
Linux kernel      : 3.2.0-4-amd64
RAM               : 4GB
CPU               : 4-cores
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On to the installation of bundler's &lt;code&gt;pre&lt;/code&gt; version:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;gem install bundler --pre
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next step the actual benchmarking. Make sure you either perform a new GitLab installation or
remove the &lt;code&gt;vendor/bundle/&lt;/code&gt; directory. I used the same command the official installation suggests:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;RAILS_ENV=production bundle install --without postgres development test aws
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and I kept track of the output of four different numbers of jobs to run in parallel.
As you'll see, the recommended option is to use as many jobs as your cpu cores.&lt;/p&gt;
&lt;p&gt;Next table depicts the difference in gem installation time which is pretty impressive.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#jobs&lt;/th&gt;
&lt;th align="left"&gt;time&lt;/th&gt;
&lt;th align="center"&gt;% difference&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1 (default)&lt;/td&gt;
&lt;td align="left"&gt;281.91s user 47.21s system 39% cpu &lt;strong&gt;13:43.34&lt;/strong&gt; total&lt;/td&gt;
&lt;td align="center"&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td align="left"&gt;286.28s user 48.60s system 104% cpu &lt;strong&gt;5:20.65&lt;/strong&gt; total&lt;/td&gt;
&lt;td align="center"&gt;61 %&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td align="left"&gt;267.65s user 43.41s system 128% cpu &lt;strong&gt;4:01.71&lt;/strong&gt; total&lt;/td&gt;
&lt;td align="center"&gt;71 %&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td align="left"&gt;262.71s user 42.90s system 136% cpu &lt;strong&gt;3:43.31&lt;/strong&gt; total&lt;/td&gt;
&lt;td align="center"&gt;73 %&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td align="left"&gt;256.37s user 41.47s system 139% cpu &lt;strong&gt;3:34.05&lt;/strong&gt; total&lt;/td&gt;
&lt;td align="center"&gt;74 %&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:cpuinfo"&gt;
&lt;p&gt;See full &lt;code&gt;/proc/cpuinfo&lt;/code&gt; in this &lt;a href="https://gist.github.com/axilleas/6399274"&gt;gist&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:cpuinfo" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Sat, 31 Aug 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.me,2013-08-31:en/blog/2013/gitlab-gem-install-benchmarking-with-bundler-14</guid></item><item><title>GSoC - Weekly update 9 and 10</title><link>http://axilleas.me/en/blog/2013/gsoc-weekly-update-9-and-10</link><description>&lt;p&gt;I've been busy the past two weeks with some personal stuff so I got a little behind.
Here's what happened in the GitLab front.&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#finish-packaging-remaining-gems"&gt;Finish packaging remaining gems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gitlab-deploy"&gt;GitLab deploy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coordinate-packaging-with-debian"&gt;Coordinate packaging with Debian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#todo"&gt;TODO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="finish-packaging-remaining-gems"&gt;Finish packaging remaining gems&lt;/h2&gt;
&lt;p&gt;Now, all (hopefully) runtime dependencies are packaged and pushed in my public &lt;a href="http://repos.fedorapeople.org/repos/axilleas/gitlab/fedora-19/"&gt;gitlab-repo&lt;/a&gt;.
The majority of them are not ready for official submission in Bugzilla, but I kept track
of those that pass the standards in order to be submitted. Unfortunately they are only 5...&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;escape_utils
http_parser.rb
modernizr
yajl-ruby (already submitted https://bugzilla.redhat.com/show_bug.cgi?id=823351)
settingslogic
stamp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For now I have also packaged the forks as they need some more work to be accepted in Fedora.
&lt;a href="https://github.com/axilleas/gsoc/blob/master/packaging.md#gem-packaging-on-gitlab-forks"&gt;Here&lt;/a&gt; I have pointed out their differences with original gems.&lt;/p&gt;
&lt;h2 id="gitlab-deploy"&gt;GitLab deploy&lt;/h2&gt;
&lt;p&gt;I deployed &lt;a href="https://fedora.axilleas.me"&gt;GitLab in Fedora 19&lt;/a&gt; on a VPS following the standard installation, meaning all gems
are bundled under &lt;code&gt;vendor/bundle/&lt;/code&gt;. You can visit it, but it may not be functional as I am now in the
process of replacing the bundled gems with the system ones. Expect more info on this in a following post.&lt;/p&gt;
&lt;h2 id="coordinate-packaging-with-debian"&gt;Coordinate packaging with Debian&lt;/h2&gt;
&lt;p&gt;In other news, I found out that Debian is also in the process of packaging GitLab, so I contacted them through
their &lt;a href="http://debian.2.n7.nabble.com/Regarding-gitlab-td2843993.html"&gt;Ruby ML&lt;/a&gt; regarding this. If you follow the discussion you will understand that the main
problem for them is also how to package the forked gems. Hopefully we will come to a solution.&lt;/p&gt;
&lt;h2 id="todo"&gt;TODO&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Build dummy &lt;code&gt;gitlab.spec&lt;/code&gt; with all runtime &lt;code&gt;Requires&lt;/code&gt; for easy test install&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;bundle install --local&lt;/code&gt; and progressively test the required gems&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Thu, 29 Aug 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.me,2013-08-29:en/blog/2013/gsoc-weekly-update-9-and-10</guid><category>gsoc</category><category>fedora</category><category>gitlab</category><category>packaging</category></item><item><title>SELinux policy for nginx and GitLab unix socket in Fedora 19</title><link>http://axilleas.me/en/blog/2013/selinux-policy-for-nginx-and-gitlab-unix-socket-in-fedora-19</link><description>&lt;p&gt;The installation of GitLab in Fedora 19 went fine. I followed the official installation
guide with some deviations where necessary, mostly taken from the CentOS guide in
&lt;a href="https://github.com/gitlabhq/gitlab-recipes"&gt;gitlab-recipes&lt;/a&gt;. I setup nginx using the ssl &lt;a href="https://github.com/gitlabhq/gitlab-recipes/blob/master/web-server/nginx/gitlab-ssl"&gt;config&lt;/a&gt;, and poked some holes
in &lt;a href="https://github.com/gitlabhq/gitlab-recipes/tree/master/install/centos#8-configure-the-firewall"&gt;iptables&lt;/a&gt;. For systemd services I used &lt;a href="https://github.com/gitlabhq/gitlab-recipes/tree/master/init/systemd"&gt;these files&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, everything is set, configuration tests pass, services are started, nginx is started
and I finally point firefox to my FQDN (which by the way is fedora.axilleas.me, no secret)
just to see a big fat &lt;strong&gt;502 Bad Gateway&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;As wikipedia &lt;a href="http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#5xx_Server_Error"&gt;suggests&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;502 Bad Gateway&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The server was acting as a gateway or proxy and received an invalid response from the upstream server.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Spot on! The server (nginx) is acting as a proxy and received an invalid response from the upstream server (unicorn).
But what was that invalid response?&lt;/p&gt;
&lt;p&gt;I could reach &lt;code&gt;ip_addr:8080&lt;/code&gt; at which unicorn was listening, but not through my fqdn which
nginx was serving. So there clearly was something wrong with nginx.&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#error-hunting"&gt;Error hunting&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#nginx"&gt;Nginx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#selinux-you-crafty-little-blocker"&gt;SELinux you crafty little blocker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-a-custom-selinux-policy-module"&gt;Create a custom SELinux policy module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#add-nginx-to-git-group"&gt;Add nginx to git group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tldr"&gt;TL;DR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#integration-of-selinux-error-messages-with-journald"&gt;Integration of SELinux error messages with journald&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="error-hunting"&gt;Error hunting&lt;/h2&gt;
&lt;p&gt;So the first thing when such an error occurs is to look through the logs.&lt;/p&gt;
&lt;h3 id="nginx"&gt;Nginx&lt;/h3&gt;
&lt;p&gt;In &lt;code&gt;/var/log/nginx/gitlab_error.log&lt;/code&gt; I could see this error repeating:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;2013/08/26 21:43:01 [crit] 2597#0: *50 connect() to unix:/home/git/gitlab/tmp/sockets/gitlab.socket failed (13: Permission denied) while connecting to upstream, client 12.34.56.78, server: fedora.axilleas.me, request: &amp;quot;GET /users/sign_in HTTP/1.1&amp;quot;, upstream: &amp;quot;http://unix:/home/git/gitlab/tmp/sockets/gitlab.socket:/users/sign_in&amp;quot;, host: &amp;quot;fedora.axilleas.me&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So we got a permission denied while nginx is trying to connect to the unix socket of GitLab.
After some hours searching and reading answers in stackoverflow, it sroke to me to check
whether SELinux is to blame. I set it to permissive mode with &lt;code&gt;setenforce 0&lt;/code&gt; and voila,
nginx was suddenly recieving requests.&lt;/p&gt;
&lt;h3 id="selinux-you-crafty-little-blocker"&gt;SELinux you crafty little blocker&lt;/h3&gt;
&lt;p&gt;I remembered the awesome introductory guide of &lt;a href="http://wiki.centos.org/HowTos/SELinux"&gt;SELinux&lt;/a&gt; at CentOS wiki,
which I had used when rewriting the &lt;a href="https://github.com/gitlabhq/gitlab-recipes/blob/master/install/centos/README.md"&gt;CentOS installation guide&lt;/a&gt; for GitLab
and immediately started reading.&lt;/p&gt;
&lt;p&gt;By default, SELinux log messages are written to &lt;code&gt;/var/log/audit/audit.log&lt;/code&gt; via the Linux Auditing System &lt;code&gt;auditd&lt;/code&gt;.
If the &lt;code&gt;auditd&lt;/code&gt; daemon is not running, then messages are written to &lt;code&gt;/var/log/messages&lt;/code&gt;. 
SELinux log messages are labeled with the &lt;em&gt;AVC&lt;/em&gt; keyword so that they might be easily filtered from other messages, as with &lt;code&gt;grep&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;So, by greping nginx in &lt;code&gt;/var/log/audit/audit.log&lt;/code&gt; I found those relative AVC messages, which indicate indeed
a denial of nginx connection to &lt;code&gt;gitlab.socket&lt;/code&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;type=AVC msg=audit(1377542938.307:248364): avc:  denied  { write } for  pid=2597 comm=&amp;quot;nginx&amp;quot; name=&amp;quot;gitlab.socket&amp;quot; dev=&amp;quot;vda1&amp;quot; ino=1180273 scontext=system_u:system_r:httpd_t:s0 tcontext=system_u:object_r:httpd_sys_content_t:s0 tclass=sock_file
type=AVC msg=audit(1377542938.307:248364): avc:  denied  { connectto } for  pid=2597 comm=&amp;quot;nginx&amp;quot; path=&amp;quot;/home/git/gitlab/tmp/sockets/gitlab.socket&amp;quot; scontext=system_u:system_r:httpd_t:s0 tcontext=system_u:system_r:initrc_t:s0 tclass=unix_stream_socket
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using a tool called &lt;code&gt;audit2allow&lt;/code&gt; we are able to clear the AVC messages. If you haven't got it
installed, it is shipped with the &lt;code&gt;policycoreutils-devel&lt;/code&gt; package.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;grep nginx /var/log/audit/audit.log | audit2allow
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the result is:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;=============&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="o"&gt;==============&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;http_cache_port_t&lt;/span&gt;&lt;span class="nd"&gt;:tcp_socket&lt;/span&gt; &lt;span class="nt"&gt;name_connect&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;httpd_log_t&lt;/span&gt;&lt;span class="nd"&gt;:file&lt;/span&gt; &lt;span class="nt"&gt;setattr&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;httpd_sys_content_t&lt;/span&gt;&lt;span class="nd"&gt;:sock_file&lt;/span&gt; &lt;span class="nt"&gt;write&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;initrc_t&lt;/span&gt;&lt;span class="nd"&gt;:unix_stream_socket&lt;/span&gt; &lt;span class="nt"&gt;connectto&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;user_home_dir_t&lt;/span&gt;&lt;span class="nd"&gt;:dir&lt;/span&gt; &lt;span class="nt"&gt;search&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;user_home_t&lt;/span&gt;&lt;span class="nd"&gt;:dir&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="n"&gt;getattr&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;user_home_t&lt;/span&gt;&lt;span class="nd"&gt;:sock_file&lt;/span&gt; &lt;span class="nt"&gt;write&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;var_run_t&lt;/span&gt;&lt;span class="nd"&gt;:file&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;These are the policies that should be used with SELinux. Notice that &lt;code&gt;user_home&lt;/code&gt; is essential
since GitLab's &lt;code&gt;APP_ROOT&lt;/code&gt; is in &lt;code&gt;/home/git/&lt;/code&gt;. Similarly, you notice a policy related to 
the denied socket connection: &lt;code&gt;unix_stream_socket connectto&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="create-a-custom-selinux-policy-module"&gt;Create a custom SELinux policy module&lt;/h2&gt;
&lt;p&gt;After all the investigation we are closer to the solution. All we have to do is use &lt;code&gt;audit2allow&lt;/code&gt;
to generate a set of policy rules that would allow the required actions. We can generate
a local nginx Type Enforcement policy file (nginx.te): &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;grep&lt;/span&gt; &lt;span class="nt"&gt;nginx&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;audit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;audit&lt;/span&gt;&lt;span class="nc"&gt;.log&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;audit2allow&lt;/span&gt; &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="nt"&gt;nginx&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;nginx&lt;/span&gt;&lt;span class="nc"&gt;.te&lt;/span&gt;
&lt;span class="nt"&gt;cat&lt;/span&gt; &lt;span class="nt"&gt;nginx&lt;/span&gt;&lt;span class="nc"&gt;.te&lt;/span&gt;


&lt;span class="nt"&gt;module&lt;/span&gt; &lt;span class="nt"&gt;nginx&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="nc"&gt;.0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nt"&gt;require&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;var_run_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;user_home_dir_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;httpd_log_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;httpd_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;user_home_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;httpd_sys_content_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;initrc_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;http_cache_port_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;sock_file&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;unix_stream_socket&lt;/span&gt; &lt;span class="n"&gt;connectto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="n"&gt;getattr&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;class&lt;/span&gt; &lt;span class="nt"&gt;file&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;setattr&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;class&lt;/span&gt; &lt;span class="nt"&gt;tcp_socket&lt;/span&gt; &lt;span class="nt"&gt;name_connect&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;=============&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="o"&gt;==============&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;http_cache_port_t&lt;/span&gt;&lt;span class="nd"&gt;:tcp_socket&lt;/span&gt; &lt;span class="nt"&gt;name_connect&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;httpd_log_t&lt;/span&gt;&lt;span class="nd"&gt;:file&lt;/span&gt; &lt;span class="nt"&gt;setattr&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;httpd_sys_content_t&lt;/span&gt;&lt;span class="nd"&gt;:sock_file&lt;/span&gt; &lt;span class="nt"&gt;write&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;initrc_t&lt;/span&gt;&lt;span class="nd"&gt;:unix_stream_socket&lt;/span&gt; &lt;span class="nt"&gt;connectto&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;user_home_dir_t&lt;/span&gt;&lt;span class="nd"&gt;:dir&lt;/span&gt; &lt;span class="nt"&gt;search&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;!!!!&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;avc&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;allowed&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;policy&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;user_home_t&lt;/span&gt;&lt;span class="nd"&gt;:dir&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="n"&gt;getattr&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;user_home_t&lt;/span&gt;&lt;span class="nd"&gt;:sock_file&lt;/span&gt; &lt;span class="nt"&gt;write&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;allow&lt;/span&gt; &lt;span class="nt"&gt;httpd_t&lt;/span&gt; &lt;span class="nt"&gt;var_run_t&lt;/span&gt;&lt;span class="nd"&gt;:file&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We are not done yet, as this is a file for review only. We can then go ahead and use audit2allow 
to make a custom policy module to allow these actions: &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;grep nginx /var/log/audit/audit.log | audit2allow -M nginx
semodule -i nginx.pp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can check the policy module loaded correctly by listing loaded modules with &lt;code&gt;semodule -l&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After that, remember to enable SELinux again with &lt;code&gt;setenforce 1&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="add-nginx-to-git-group"&gt;Add nginx to git group&lt;/h2&gt;
&lt;p&gt;Unrelated to this article, but it is also needed for nginx to access the unix socket.
First we add nginx to git group, and then we make sure the group that owns &lt;code&gt;/home/git/&lt;/code&gt;
has read and execute permissions:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;usermod -a -G git nginx
chmod g+rx /home/git/
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="tldr"&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;To fix all nginx 502 issues, as root run:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;yum install -y policycoreutils-{python,devel}
grep nginx /var/log/audit/audit.log | audit2allow -M nginx
semodule -i nginx.pp
usermod -a -G git nginx
chmod g+rx /home/git/
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="integration-of-selinux-error-messages-with-journald"&gt;Integration of SELinux error messages with journald&lt;/h2&gt;
&lt;p&gt;In a very &lt;a href="http://danwalsh.livejournal.com/65777.html"&gt;interesting article&lt;/a&gt;, Dan Walsh explains how this whole process of error
hunting will be much easier with Fedora 20. I urge you to read it.&lt;/p&gt;
&lt;p&gt;With the upcoming changes, the error would have appeared at systemd's status log:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;systemctl status nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the possible solutions with:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;journalctl  -r -o verbose -u nginx.service
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pretty cool, huh?&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Tue, 27 Aug 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.me,2013-08-27:en/blog/2013/selinux-policy-for-nginx-and-gitlab-unix-socket-in-fedora-19</guid><category>selinux</category><category>fedora</category><category>gitlab</category><category>unixsocket</category><category>nginx</category></item><item><title>GSoC - Weekly update 7 and 8</title><link>http://axilleas.me/en/blog/2013/gsoc-weekly-update-7-and-8</link><description>&lt;p&gt;The past week or so, I have been trying to package every gem GitLab needs, in Fedora 19.
This is something I should have done from the start, but better late than never.
Now that I have quite learnt the rubygem packaging process, I follow a certain
workflow that gets the job done pretty quickly (described below).&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://repos.fedorapeople.org/repos/axilleas/gitlab/fedora-19/"&gt;repo&lt;/a&gt; I had setup, now includes the majority of the gems needed for a working
GitLab instance.&lt;/p&gt;
&lt;p&gt;Of course many of them do not pass the standards in order to submit to Bugzilla,
meaning there are some gems missing the license file, the tests are not shipped or
fail, etc. The only thing that is correct in all of them is the declaration of files
to be incuded in the final packaged gem, that is the &lt;code&gt;%files&lt;/code&gt; and &lt;code&gt;%files doc&lt;/code&gt; macros.&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#workflow-of-quick-packaging"&gt;Workflow of quick packaging&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#notes"&gt;Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#difficulties-in-gem-versions"&gt;Difficulties in gem versions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#todo"&gt;TODO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="workflow-of-quick-packaging"&gt;Workflow of quick packaging&lt;/h2&gt;
&lt;p&gt;For the whole time I've been packaging gems, I use a VPS running Fedora 19. Luckily it is
a pretty strong machine (4GB RAM, 4 cpu) and building a rubygem in mock takes 1-3 minutes&lt;sup id="fnref:cloud"&gt;&lt;a class="footnote-ref" href="#fn:cloud" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;In general, I first check in the &lt;a href="https://fedoraproject.org/wiki/User:Axilleas/GitLab#Packages"&gt;wiki table&lt;/a&gt; what's missing, and then build the next gem in line.
I have 2 screen windows open (among others): one pointing in &lt;code&gt;~/rpmbuild/SPECS/&lt;/code&gt;
and the other to &lt;code&gt;~/rpmbuild/SRPMS/&lt;/code&gt;. Here are the steps onwards.&lt;/p&gt;
&lt;p&gt;On the first screen I run a simple &lt;a href="https://github.com/axilleas/gsoc/blob/master/gemget"&gt;script&lt;/a&gt; that downloads the gem file 
in &lt;code&gt;~/rpmbuild/SOURCES/&lt;/code&gt; and then runs gem2rpm on it with the resulting spec 
saved in &lt;code&gt;~/rpmbuild/SPECS/&lt;/code&gt;. I then open the spec with vim, open the url and 
check if the license tag is filled. If not, I check in the url for the license file. &lt;/p&gt;
&lt;p&gt;Inside vim, I save the changes with &lt;code&gt;:w&lt;/code&gt; and run &lt;code&gt;:!rpmbuild -ba %&lt;/code&gt;. Normally,
this will fail, which is good. We need the info provided by the &lt;code&gt;error: Installed (but unpackaged) file(s) found:&lt;/code&gt;
I copy all these stuff in a temp file (I have geany open) and then I fix the
&lt;code&gt;%files&lt;/code&gt; and &lt;code&gt;%files doc&lt;/code&gt; macro accordingly. Save and run &lt;code&gt;:!rpmbuild -ba %&lt;/code&gt;
again to check everything is in order. If the build exits with no error, I try
to make the tests work. I give myself 10-15 minutes topfor each gem, as I am
targeting to test the GitLab installation and not submit them to Bugzilla.
Of course during the whole process, I keep track what fails and what not, so
that I can come back later. You can see &lt;a href="https://github.com/axilleas/gsoc/blob/master/packaging.md"&gt;here&lt;/a&gt; my progress.&lt;/p&gt;
&lt;p&gt;After the build runs fine, I use &lt;code&gt;mock&lt;/code&gt; to test that a package is not missing
from the BuildRequires. Exit the &lt;code&gt;rpmbuild&lt;/code&gt; screen, enter &lt;code&gt;mock&lt;/code&gt;, which is in
&lt;code&gt;~/rpmbuild/SRPMS/&lt;/code&gt;, so with a simple &lt;code&gt;mock rubygem-foo-1.0-1.src.rpm&lt;/code&gt; begins
the packaging process. If something breaks, back to &lt;code&gt;rpmbuild&lt;/code&gt; screen, adjust
the spec, save it, run &lt;code&gt;:!rpmbuild -bs %&lt;/code&gt; to just produce the srpm, exit screen,
enter &lt;code&gt;mock&lt;/code&gt; screen, run &lt;code&gt;mock rubygem-foo-1.0-1.src.rpm&lt;/code&gt; again. And the circle
goes on until I have a working rpm.&lt;/p&gt;
&lt;p&gt;When the package builds fine in mock, I copy the produced rpms in &lt;code&gt;~/repo/gitlab/fedora-19/&lt;/code&gt;
with &lt;code&gt;cp /var/lib/mock/fedora-19-x86_64/result/*rpm ~/repos/gitlab/fedora-19&lt;/code&gt;.
From there, I move each package to its destined folder and using a modified &lt;a href="https://github.com/axilleas/gsoc/blob/master/repo-update"&gt;script&lt;/a&gt;
of &lt;a href="https://fedoraproject.org/wiki/Fedorapeople_Repos#Script_for_easy_repo_update"&gt;repo_update&lt;/a&gt; I sync the packages to my repo hosted on fedorapeople.org.&lt;/p&gt;
&lt;h3 id="notes"&gt;Notes&lt;/h3&gt;
&lt;p&gt;Using of mock is of utter importance. Building in a clean chrooted environment,
you ensure that a package builds and installs cleanly without any dependencies missing,
on other machines as well.&lt;/p&gt;
&lt;p&gt;The use of the repository is two-fold. Other than the default nature of the repo 
where you could easily install and test GitLab, it also serves as a building point 
where you have packages needed by other packages and so on, that are not yet in Fedora. 
Sure you could use &lt;code&gt;mock --init&lt;/code&gt; as described &lt;a href="https://fedoraproject.org/wiki/Using_Mock_to_test_package_builds#Building_packages_that_depend_on_packages_not_in_a_repository"&gt;here&lt;/a&gt;, but that is quite
a burden when there is a multiple dependency issue. For that purpose I made my 
mock default config being a copy of the &lt;code&gt;fedora-19-x86_64.cfg&lt;/code&gt; plus the information of the
&lt;a href="http://repos.fedorapeople.org/repos/axilleas/gitlab/fedora-gitlab.repo"&gt;fedora-gitlab.repo&lt;/a&gt;. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sudo cp /etc/mock/fedora-19-x86_64 /etc/mock/gitlab-x86_64.cfg&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo vim /etc/mock/gitlab-x86_64.cfg&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Append the info of &lt;a href="http://repos.fedorapeople.org/repos/axilleas/gitlab/fedora-gitlab.repo"&gt;fedora-gitlab.repo&lt;/a&gt; (be carefull of the &lt;code&gt;"""&lt;/code&gt;, they must be last)&lt;/li&gt;
&lt;li&gt;Repeat 1-3 for a &lt;code&gt;i686&lt;/code&gt; config.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ln -s /etc/mock/gitlab-x86_64 /etc/mock/default.cfg&lt;/code&gt; so that I don't have to
    repeatedly invoking the mock configs with the &lt;code&gt;-r&lt;/code&gt; flag.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ultimately, &lt;code&gt;gitlab-x86_64.cfg&lt;/code&gt; looks like this:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="x"&gt;config_opts[&amp;#39;root&amp;#39;] = &amp;#39;fedora-19-x86_64&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;config_opts[&amp;#39;target_arch&amp;#39;] = &amp;#39;x86_64&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;config_opts[&amp;#39;legal_host_arches&amp;#39;] = (&amp;#39;x86_64&amp;#39;,)&lt;/span&gt;
&lt;span class="x"&gt;config_opts[&amp;#39;chroot_setup_cmd&amp;#39;] = &amp;#39;groupinstall buildsys-build&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt;config_opts[&amp;#39;dist&amp;#39;] = &amp;#39;fc19&amp;#39;  &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; only useful for --resultdir variable subst&lt;/span&gt;

&lt;span class="x"&gt;config_opts[&amp;#39;yum.conf&amp;#39;] = &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;[main]&lt;/span&gt;
&lt;span class="x"&gt;cachedir=/var/cache/yum&lt;/span&gt;
&lt;span class="x"&gt;debuglevel=1&lt;/span&gt;
&lt;span class="x"&gt;reposdir=/dev/null&lt;/span&gt;
&lt;span class="x"&gt;logfile=/var/log/yum.log&lt;/span&gt;
&lt;span class="x"&gt;retries=20&lt;/span&gt;
&lt;span class="x"&gt;obsoletes=1&lt;/span&gt;
&lt;span class="x"&gt;gpgcheck=0&lt;/span&gt;
&lt;span class="x"&gt;assumeyes=1&lt;/span&gt;
&lt;span class="x"&gt;syslog_ident=mock&lt;/span&gt;
&lt;span class="x"&gt;syslog_device=&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; repos&lt;/span&gt;

&lt;span class="x"&gt;[fedora]&lt;/span&gt;
&lt;span class="x"&gt;name=fedora&lt;/span&gt;
&lt;span class="x"&gt;mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=fedora-19&amp;amp;arch=x86_64&lt;/span&gt;
&lt;span class="x"&gt;failovermethod=priority&lt;/span&gt;

&lt;span class="x"&gt;[updates]&lt;/span&gt;
&lt;span class="x"&gt;name=updates&lt;/span&gt;
&lt;span class="x"&gt;mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=updates-released-f19&amp;amp;arch=x86_64&lt;/span&gt;
&lt;span class="x"&gt;failovermethod=priority&lt;/span&gt;

&lt;span class="x"&gt;[updates-testing]&lt;/span&gt;
&lt;span class="x"&gt;name=updates-testing&lt;/span&gt;
&lt;span class="x"&gt;mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=updates-testing-f19&amp;amp;arch=x86_64&lt;/span&gt;
&lt;span class="x"&gt;failovermethod=priority&lt;/span&gt;
&lt;span class="x"&gt;enabled=0&lt;/span&gt;

&lt;span class="x"&gt;[local]&lt;/span&gt;
&lt;span class="x"&gt;name=local&lt;/span&gt;
&lt;span class="x"&gt;baseurl=http://kojipkgs.fedoraproject.org/repos/f19-build/latest/x86_64/&lt;/span&gt;
&lt;span class="x"&gt;cost=2000&lt;/span&gt;
&lt;span class="x"&gt;enabled=0&lt;/span&gt;

&lt;span class="x"&gt;[fedora-debuginfo]&lt;/span&gt;
&lt;span class="x"&gt;name=fedora-debuginfo&lt;/span&gt;
&lt;span class="x"&gt;mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=fedora-debug-19&amp;amp;arch=x86_64&lt;/span&gt;
&lt;span class="x"&gt;failovermethod=priority&lt;/span&gt;
&lt;span class="x"&gt;enabled=0&lt;/span&gt;

&lt;span class="x"&gt;[updates-debuginfo]&lt;/span&gt;
&lt;span class="x"&gt;name=updates-debuginfo&lt;/span&gt;
&lt;span class="x"&gt;mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=updates-released-debug-f19&amp;amp;arch=x86_64&lt;/span&gt;
&lt;span class="x"&gt;failovermethod=priority&lt;/span&gt;
&lt;span class="x"&gt;enabled=0&lt;/span&gt;

&lt;span class="x"&gt;[updates-testing-debuginfo]&lt;/span&gt;
&lt;span class="x"&gt;name=updates-testing-debuginfo&lt;/span&gt;
&lt;span class="x"&gt;mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=updates-testing-debug-f19&amp;amp;arch=x86_64&lt;/span&gt;
&lt;span class="x"&gt;failovermethod=priority&lt;/span&gt;
&lt;span class="x"&gt;enabled=0&lt;/span&gt;

&lt;span class="x"&gt;[fedora-gitlab]&lt;/span&gt;
&lt;span class="x"&gt;name=Unofficial GitLab repository for Fedora&lt;/span&gt;
&lt;span class="x"&gt;baseurl=http://repos.fedorapeople.org/repos/axilleas/gitlab/fedora-&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;releasever&lt;/span&gt;&lt;span class="x"&gt;/&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;basearch&lt;/span&gt;&lt;span class="x"&gt;/&lt;/span&gt;
&lt;span class="x"&gt;enabled=1&lt;/span&gt;
&lt;span class="x"&gt;skip_if_unavailable=1&lt;/span&gt;
&lt;span class="x"&gt;gpgcheck=0&lt;/span&gt;

&lt;span class="x"&gt;[fedora-gitlab-noarch]&lt;/span&gt;
&lt;span class="x"&gt;name=Unofficial GitLab repository for Fedora&lt;/span&gt;
&lt;span class="x"&gt;baseurl=http://repos.fedorapeople.org/repos/axilleas/gitlab/fedora-&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;releasever&lt;/span&gt;&lt;span class="x"&gt;/noarch/&lt;/span&gt;
&lt;span class="x"&gt;enabled=1&lt;/span&gt;
&lt;span class="x"&gt;skip_if_unavailable=1&lt;/span&gt;
&lt;span class="x"&gt;gpgcheck=0&lt;/span&gt;

&lt;span class="x"&gt;[fedora-gitlab-source]&lt;/span&gt;
&lt;span class="x"&gt;name=Unofficial GitLab repository for Fedora - Source&lt;/span&gt;
&lt;span class="x"&gt;baseurl=http://repos.fedorapeople.org/repos/axilleas/gitlab/fedora-&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;releasever&lt;/span&gt;&lt;span class="x"&gt;/SRPMS&lt;/span&gt;
&lt;span class="x"&gt;enabled=0&lt;/span&gt;
&lt;span class="x"&gt;skip_if_unavailable=1&lt;/span&gt;
&lt;span class="x"&gt;gpgcheck=0&lt;/span&gt;

&lt;span class="x"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="difficulties-in-gem-versions"&gt;Difficulties in gem versions&lt;/h2&gt;
&lt;p&gt;The most challenging aspect of my whole GSoC project is not how to package the 
~ 80 gems needed for GitLab at runtime, but how to coordinate GitLab-Fedora-Upstream
and their different versions of gems.&lt;/p&gt;
&lt;p&gt;In this process, there are two key stoppers that need to be resolved.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;For gems with versions: GitLab &amp;lt; Fedora, I will have to test if they properly work.
    Else, a gem with lower version should be packaged for Fedora.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For gems with versions: GitLab &amp;gt; Fedora, if GitLab == Upstream, it is easy to update by asking the maintainer to update, 
    BUT if Fedora &amp;lt; GitLab &amp;lt; Upstream , it is &lt;em&gt;hard&lt;/em&gt;, as it is needed a version lower than the
    current upstream, and in Fedora we try to have the latest version. Of course
    that is debatable and if really needed, a gem with lower version than upstream
    could be submitted.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="todo"&gt;TODO&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;There are about 15 more gems to package&lt;/li&gt;
&lt;li&gt;Somehow deal with GitLab's forks&lt;/li&gt;
&lt;li&gt;Commit to github the specs i have built so far with propper commit messages&lt;/li&gt;
&lt;li&gt;Test in a gitlab-vagrant VM some new gem versions I built and submit PR with updated Gemfile&lt;/li&gt;
&lt;li&gt;Start packaging the GitLab app itself (get a clue from Gitorious)&lt;/li&gt;
&lt;li&gt;Check which gems are ok so far to submit to Bugzilla&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:cloud"&gt;
&lt;p&gt;All that thanks to &lt;a href="https://okeanos.grnet.gr/home/"&gt;okeanos&lt;/a&gt;, a &lt;a href="https://www.grnet.gr/en/"&gt;GRNET&lt;/a&gt;'s public cloud service which provides cloud services to the whole Greek research and academic community. More info &lt;a href="http://www.synnefo.org/"&gt;here&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:cloud" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Tue, 13 Aug 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.me,2013-08-13:en/blog/2013/gsoc-weekly-update-7-and-8</guid><category>gsoc</category><category>fedora</category><category>gitlab</category><category>packaging</category></item><item><title>GSoC - Weekly update 6</title><link>http://axilleas.me/en/blog/2013/gsoc-weekly-update-6</link><description>&lt;p&gt;Here is what I have been doing the past week.&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#packages"&gt;Packages&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#charlock_holmes"&gt;charlock_holmes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#omniauth"&gt;omniauth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sanitize"&gt;sanitize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orm_adapter"&gt;orm_adapter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#update-to-gitlab-54"&gt;Update to GitLab 5.4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="packages"&gt;Packages&lt;/h2&gt;
&lt;h3 id="charlock_holmes"&gt;charlock_holmes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=989143"&gt;Pending review&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This one gave me some headaches as it is a gem with c extensions and as it turned
out I didn't ship the soname in the right directory. It took me some time but I
finally understood how that works. Here are the steps I follow when packaging gems
with c extensions.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;From the initial spec file that gem2rpm creates, comment the line below:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mv %&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;%&lt;span class="o"&gt;{&lt;/span&gt;gem_instdir&lt;span class="o"&gt;}&lt;/span&gt;/lib/shared_object.so %&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;%&lt;span class="o"&gt;{&lt;/span&gt;gem_extdir_mri&lt;span class="o"&gt;}&lt;/span&gt;/lib/
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;rpmbuild -bi rubygem-charlock_holmes.spec&lt;/code&gt; in order not to remove the
  &lt;em&gt;BUILDROOT&lt;/em&gt; directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find the soname files that get created:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;find ~/rpmbuild/BUILDROOT/rubygem-charlock_holmes-0.6.9.4-1.fc19.x86_64/ -name &lt;span class="s1"&gt;&amp;#39;*.so&amp;#39;&lt;/span&gt;

Output
------
~/rpmbuild/BUILDROOT/rubygem-charlock_holmes-0.6.9.4-1.fc19.x86_64/usr/share/gems/gems/charlock_holmes-0.6.9.4/ext/charlock_holmes/charlock_holmes.so
~/rpmbuild/BUILDROOT/rubygem-charlock_holmes-0.6.9.4-1.fc19.x86_64/usr/share/gems/gems/charlock_holmes-0.6.9.4/lib/charlock_holmes/charlock_holmes.so
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There are 2 files, one in &lt;code&gt;lib/&lt;/code&gt; dir and one in &lt;code&gt;ext/&lt;/code&gt; dir. We should ship the one in
&lt;code&gt;lib/&lt;/code&gt; dir, so in our spec file we replace the line that we commented before with:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mkdir -p %&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;%&lt;span class="o"&gt;{&lt;/span&gt;gem_extdir_mri&lt;span class="o"&gt;}&lt;/span&gt;/lib/%&lt;span class="o"&gt;{&lt;/span&gt;gem_name&lt;span class="o"&gt;}&lt;/span&gt;/
mv %&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;%&lt;span class="o"&gt;{&lt;/span&gt;gem_libdir&lt;span class="o"&gt;}&lt;/span&gt;/%&lt;span class="o"&gt;{&lt;/span&gt;gem_name&lt;span class="o"&gt;}&lt;/span&gt;/%&lt;span class="o"&gt;{&lt;/span&gt;gem_name&lt;span class="o"&gt;}&lt;/span&gt;.so %&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;%&lt;span class="o"&gt;{&lt;/span&gt;gem_extdir_mri&lt;span class="o"&gt;}&lt;/span&gt;/lib/%&lt;span class="o"&gt;{&lt;/span&gt;gem_name&lt;span class="o"&gt;}&lt;/span&gt;/

&lt;span class="c"&gt;# Remove the binary extension sources and build leftovers.&lt;/span&gt;
rm -rf %&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;/%&lt;span class="o"&gt;{&lt;/span&gt;gem_instdir&lt;span class="o"&gt;}&lt;/span&gt;/ext/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;See what I did there? The lib dir when I used find was:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;~/rpmbuild/BUILDROOT/rubygem-charlock_holmes-0.6.9.4-1.fc19.x86_64/usr/share/gems/gems/charlock_holmes-0.6.9.4/lib/charlock_holmes/charlock_holmes.so
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which when written with macros translates to:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;%{buildroot}%{gem_libdir}/%{gem_name}/%{gem_name}.so&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which in turn gets copied to:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;%&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;%&lt;span class="o"&gt;{&lt;/span&gt;gem_extdir_mri&lt;span class="o"&gt;}&lt;/span&gt;/lib/%&lt;span class="o"&gt;{&lt;/span&gt;gem_name&lt;span class="o"&gt;}&lt;/span&gt;/
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Tl;dr;
Follow the directory structure of &lt;code&gt;lib/&lt;/code&gt; where the soname resides and remove the
&lt;code&gt;ext/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Beware that there are cases where this structure is not the same and the soname
is found right in &lt;code&gt;lib/&lt;/code&gt; dir and not in &lt;code&gt;lib/%{gem_name}/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Take for example &lt;a href="http://pkgs.fedoraproject.org/cgit/rubygem-pg.git/tree/rubygem-pg.spec#n61"&gt;rubygem-pg&lt;/a&gt; compared to &lt;a href="https://github.com/axilleas/fedora/blob/master/packages/rubygem-charlock_holmes/rubygem-charlock_holmes.spec#L54"&gt;rubygem-charlock_holmes&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="omniauth"&gt;omniauth&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=989775"&gt;Pending review&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I had some hard time with this too as it was failing the test suite. It turned out
I was missing a BuildRequires dependency. A huge thanks to &lt;a href="https://fedoraproject.org/wiki/User:Ktdreyer"&gt;Ken Dreyer&lt;/a&gt; who
pointed me out to the right direction in the &lt;a href="https://lists.fedoraproject.org/pipermail/ruby-sig/2013-July/001393.html"&gt;mailing list&lt;/a&gt; as well as giving
some nice tips about the packaging workflow.&lt;/p&gt;
&lt;h3 id="sanitize"&gt;sanitize&lt;/h3&gt;
&lt;p&gt;This was an easy one and was immediately accepted when &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=989132"&gt;reviewed&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="orm_adapter"&gt;orm_adapter&lt;/h3&gt;
&lt;p&gt;This is pending a &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=988938"&gt;review&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="update-to-gitlab-54"&gt;Update to GitLab 5.4&lt;/h2&gt;
&lt;p&gt;I updated the dependencies to version 5.4. Overall nothing changed except for the
addition of unicorn, which is already submitted for &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=786636"&gt;review&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Tue, 30 Jul 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.me,2013-07-30:en/blog/2013/gsoc-weekly-update-6</guid><category>gsoc</category><category>fedora</category><category>gitlab</category><category>packaging</category></item><item><title>GSoC - Weekly update 5</title><link>http://axilleas.me/en/blog/2013/gsoc-weekly-update-5</link><description>&lt;p&gt;I can't believe that a month has already passed! I keep learning new things, mostly
on packaging, and the cool fact is that many of them are through my Review Requests.
The discussion between the reviewer and the reviewee can sometimes be very productive
leading to learning new things I previously ignored.&lt;/p&gt;
&lt;p&gt;This post would be a long one but I decided to split it up, because some sections
deserved there own space.&lt;/p&gt;
&lt;p&gt;The first split is named &lt;a href="http://axilleas.me/en/blog/2013/i-got-approved-as-a-packager-now-what"&gt;I got approved as a packager, now what?&lt;/a&gt;
and it refers to all new Fedora packagers :)&lt;/p&gt;
&lt;p&gt;The second one is going to talk about maintaining an unofficial repo and I will
describe my workflow and the potential scripts that facilitate the whole process.&lt;/p&gt;
&lt;p&gt;And here is the rest of my progress during the fifth week. &lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#packages"&gt;Packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-to-package-a-ruby-gem-blog-post-status"&gt;How to package a Ruby gem - blog post status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#todo-next-week"&gt;TODO next week&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="packages"&gt;Packages&lt;/h2&gt;
&lt;p&gt;This is the first time that some packages of mine got approved:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=985358"&gt;hashie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=982679"&gt;bootstrap-sass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=969877"&gt;timers&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I am also working on &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=927374"&gt;rubygem-rugged&lt;/a&gt; as a reviewer this time. This is much more
difficult than being the reviewee, since it needs a lot testing from your side
and a good understanding of the guidelines.&lt;/p&gt;
&lt;p&gt;And of course there is a bunch of other gems I am working on but not ready to
submit yet. As always, my progress is noted in this &lt;a href="https://trello.com/c/IOzzF6MQ/16-gem-packaging-phase-1"&gt;trello board&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="how-to-package-a-ruby-gem-blog-post-status"&gt;How to package a Ruby gem - blog post status&lt;/h2&gt;
&lt;p&gt;As you may know, I am in the process of writing an article on how to package Ruby
gems in Fedora. This is the only type of package I have been dealing with for the
past months, so I am far from an avid packager in general. But, as a structure
and wiki freak I like to have everything in order, even understandable by completely
newbies, so this is going to be very comprehensive. Progress is being made :)&lt;/p&gt;
&lt;p&gt;You can now watch the progress &lt;a href="https://trello.com/c/oGOKkvBn/6-weekly-blog-posts"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="todo-next-week"&gt;TODO next week&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Submit more packages&lt;/li&gt;
&lt;li&gt;Set up GitLab on a Fedora machine and check if packaged bundler works&lt;/li&gt;
&lt;li&gt;Take on reviews of packages concerning the gsoc project&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Mon, 22 Jul 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.me,2013-07-22:en/blog/2013/gsoc-weekly-update-5</guid><category>gsoc</category><category>fedora</category><category>gitlab</category><category>packaging</category></item></channel></rss>