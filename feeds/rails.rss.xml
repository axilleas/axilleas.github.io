<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Over the line</title><link>http://axilleas.me/</link><description></description><atom:link href="http://axilleas.me/feeds/rails.rss.xml" rel="self"></atom:link><lastBuildDate>Wed, 04 Mar 2015 00:00:00 +0200</lastBuildDate><item><title>How to install Diaspora on CentOS 7</title><link>http://axilleas.me/en/blog/2015/how-to-install-diaspora-on-centos-seven</link><description>&lt;p&gt;The tutorial isn't really hosted on my blog but on DigitalOcean's community
page, but I thought I could give some background regarding this decision.&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Last November, me, &lt;a href="http://www.roussos.cc/" title="Nikos Roussos blog"&gt;Nikos&lt;/a&gt; and &lt;a href="http://pierros.papadeas.gr/" title="Pierros Papadeas blog"&gt;Pierros&lt;/a&gt; decided to run a &lt;a href="https://diasporafoundation.org/" title="Diaspora foundation"&gt;Diaspora&lt;/a&gt; pod to
accomodate the needs of the Greek community and also increase the number of
active pods around the world. Right now we have 662 registered users and the
number keeps growing :)&lt;/p&gt;
&lt;p&gt;I had some experience in deploying Rails apps during my involvement with GitLab
and so I decided to share my findings in order that others could benefit as well.
This was also the first time I looked into Ansible so that we could easily
deploy our changes.&lt;/p&gt;
&lt;p&gt;Our customizations are &lt;a href="https://github.com/librenet/librenet.gr" title="librenet.gr on GitHub"&gt;free for everyone to see&lt;/a&gt; and so is our
&lt;a href="https://github.com/librenet/ansible" title="librenet.gr ansible repo"&gt;ansible code&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="tutorial"&gt;Tutorial&lt;/h2&gt;
&lt;p&gt;Instead of publishing this on my blog, I decided to go bigger and contacted
Digital Ocean to see if they were interested in hosting an article on Diaspora
installation. After several weeks of email exchanging, testing and rearranging
bits of the tutorial, &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-run-an-open-source-distributed-social-network-with-diaspora-on-centos-7" title="How To Run an Open-Source Distributed Social Network with Diaspora on CentOS 7"&gt;it is finally live&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Bare in mind that it is highly opinionated, based on the facts I gathered
during &lt;a href="https://librenet.gr"&gt;librenet.gr&lt;/a&gt; deployment.&lt;/p&gt;
&lt;p&gt;The reasoning behind this, is that DigitalOcean is viewed by way more people than
this little blog spot :p&lt;/p&gt;
&lt;p&gt;Also it is no secret that DigitalOcean pays to write, so that way I can put
some money on server costs :)&lt;/p&gt;
&lt;h3 id="bits-to-be-careful-about"&gt;Bits to be careful about&lt;/h3&gt;
&lt;p&gt;After I posted the link to &lt;code&gt;#diaspora&lt;/code&gt; on freenode, &lt;a href="http://jhass.eu/"&gt;jhass&lt;/a&gt;, one of the core
contributors of Diaspora raised some concerns, so this post is also partially
trying to explain the desicions behind the steps I included in the tutorial.&lt;/p&gt;
&lt;p&gt;First of all, do &lt;strong&gt;NOT&lt;/strong&gt; run Diaspora on production with a self-signed certificate.
This will cause future problems, like your pod not being able to talk effectively
to other pods. I already sent my concerns to DO, so I expect it to change any
time soon.&lt;/p&gt;
&lt;p&gt;Secondly, the guide relies on current stable version of Diaspora (&lt;code&gt;v0.4.1.2&lt;/code&gt;)
and the article will be deprecated in many areas starting with version 0.5.
Among others, future versions of Diaspora:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;will create the database automatically with &lt;code&gt;rake db:create&lt;/code&gt; asking for root
  password if it doesn't have permissions to create the DB&lt;/li&gt;
&lt;li&gt;will change the database collation from &lt;code&gt;utf8 -&amp;gt; utf8mb4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ruby 2.0.0p353&lt;/code&gt; which is in current CentOS repos, will be likely dropped
  in Diaspora 0.6 since it will be EOL'd in 2016&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, the next version of Diaspora will have chat support which adds a whole
other level of complexity to set up.&lt;/p&gt;
&lt;p&gt;Having said that, I will do my best to keep the current tutorial on par with
future Diaspora releases.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Wed, 04 Mar 2015 00:00:00 +0200</pubDate><guid>tag:axilleas.me,2015-03-04:en/blog/2015/how-to-install-diaspora-on-centos-seven</guid><category>diaspora</category><category>centos</category><category>nginx</category><category>rails</category><category>ruby</category><category>fedoraplanet</category></item><item><title>IsItFedoraRuby new design</title><link>http://axilleas.me/en/blog/2014/isitfedoraruby-new-design</link><description>&lt;p&gt;The past week I tried to do something about the looks of isitfedoraruby.
It was fun using bootstrap (my first time) and I think the outcome is cool.
I tried to use Fedora like colors and the font is &lt;em&gt;Liberation Sans&lt;/em&gt;,
same as &lt;a href="https://admin.fedoraproject.org/pkgdb," title="Fedora Package Database"&gt;Fedora pkgdb&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can check the overall changes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Before: &lt;a href="http://www.isitfedoraruby.com/"&gt;http://www.isitfedoraruby.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;After:  &lt;a href="http://fedoraruby.axilleas.me/"&gt;http://fedoraruby.axilleas.me/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#tables"&gt;Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fedorarpms"&gt;fedorarpms&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#index-page"&gt;index page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#show-page"&gt;show page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#rubygems-show-page"&gt;rubygems show page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#owner-page"&gt;owner page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#navigation-bar"&gt;Navigation bar&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#active-links"&gt;Active links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#navbar-header"&gt;Navbar header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dropdown-menu"&gt;Dropdown menu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#search-field"&gt;Search field&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#responsive-design"&gt;Responsive design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="tables"&gt;Tables&lt;/h2&gt;
&lt;p&gt;They are now borderless, with highlighted headings. They are also responsive
which means if the table is bigger than the page it gets its own sidebar
without breaking the rest of the site.&lt;/p&gt;
&lt;h2 id="fedorarpms"&gt;fedorarpms&lt;/h2&gt;
&lt;h3 id="index-page"&gt;index page&lt;/h3&gt;
&lt;p&gt;The index page show all packaged rubygems along with some interesting info.
You can see if a package is out of date if is highlighted with a red color.
On the other hand green means is up to date with latest upstream.&lt;/p&gt;
&lt;p&gt;The code that does that is pretty simple. Bootstrap provides some css classes
for coloring. So I wanted to use &lt;code&gt;warning&lt;/code&gt; for outdated and &lt;code&gt;success&lt;/code&gt; for up to
date packages. I highlighted the whole table row so I used:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;%tr&lt;span class="o"&gt;{&lt;/span&gt;class: rpm.up_to_date? ? &lt;span class="s1"&gt;&amp;#39;success&amp;#39;&lt;/span&gt; : &lt;span class="s1"&gt;&amp;#39;danger&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In particular check &lt;a href="https://github.com/axilleas/isitfedoraruby/blob/master/app/views/fedorarpms/index.html.haml#L19"&gt;line 19&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="show-page"&gt;show page&lt;/h3&gt;
&lt;p&gt;Previously there was a ton of information all in one page. Now, the info is
still there but I have devided it into tab sections.&lt;/p&gt;
&lt;p&gt;Currently there are 5 tabs.&lt;/p&gt;
&lt;p&gt;The main tab has a gem's basic info:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Up to date badge (green yes or red no)&lt;/li&gt;
&lt;li&gt;Gitweb repository url&lt;/li&gt;
&lt;li&gt;SPEC file url&lt;/li&gt;
&lt;li&gt;Upstream url&lt;/li&gt;
&lt;li&gt;Maintainer FAS name&lt;/li&gt;
&lt;li&gt;Number of git commits&lt;/li&gt;
&lt;li&gt;Last packager (in case a package is co-maintained)&lt;/li&gt;
&lt;li&gt;Last commit message&lt;/li&gt;
&lt;li&gt;Last commit date&lt;/li&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Basic Info" src="http://axilleas.me/images/isitfedoraruby-fedorarpm-basic-info.png" /&gt;&lt;/p&gt;
&lt;p&gt;Then there is a tab about version information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Table with gem versions across supported Fedora versions (rawhide, 21, 20)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Versions" src="http://axilleas.me/images/isitfedoraruby-fedorarpm-versions.png" /&gt;&lt;/p&gt;
&lt;p&gt;Another important tab is a list with a packages's dependencies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;One table with dependencies with column whether they are runtime/development deps&lt;/li&gt;
&lt;li&gt;One table with dependents packages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Dependencies" src="http://axilleas.me/images/isitfedoraruby-fedorarpm-deps.png" /&gt;&lt;/p&gt;
&lt;p&gt;The bugs tab depicts all of package's open bugs for Fedora in a table.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bugs" src="http://axilleas.me/images/isitfedoraruby-fedorarpm-bugs.png" /&gt;&lt;/p&gt;
&lt;p&gt;And lastly koji builds for only the supported Fedora versions.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Builds" src="http://axilleas.me/images/isitfedoraruby-fedorarpm-builds.png" /&gt;&lt;/p&gt;
&lt;h2 id="rubygems-show-page"&gt;rubygems show page&lt;/h2&gt;
&lt;p&gt;The description is now on top of the page. Instead of one column, the new look
has two columns, one for basic info and one for the depdendencies table.&lt;/p&gt;
&lt;p&gt;Compare rake:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Before  : &lt;a href="http://www.isitfedoraruby.com/rubygems/rake"&gt;http://www.isitfedoraruby.com/rubygems/rake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;After   : &lt;a href="http://fedoraruby.axilleas.me/rubygems/rake"&gt;http://fedoraruby.axilleas.me/rubygems/rake&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="owner-page"&gt;owner page&lt;/h2&gt;
&lt;p&gt;I added some info on top of the page about the number of the packages a user owns:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Total&lt;/li&gt;
&lt;li&gt;Up to date&lt;/li&gt;
&lt;li&gt;Outdated&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The table that has an owner's packages is also highlighted to depict outdated
and up to date packages.&lt;/p&gt;
&lt;p&gt;Here's an embarassing screenshot which reminds me I have to update my packages...&lt;/p&gt;
&lt;p&gt;&lt;img alt="Owner page" src="http://axilleas.me/images/isitfedoraruby-owner-page.png" /&gt;&lt;/p&gt;
&lt;h2 id="navigation-bar"&gt;Navigation bar&lt;/h2&gt;
&lt;p&gt;The navigation bar was a PITA to configure and make as responsive as possible.
There were a lot of bits and pieces needed to fit together, here are some of
them.&lt;/p&gt;
&lt;h3 id="active-links"&gt;Active links&lt;/h3&gt;
&lt;p&gt;I used a helper method which I found in this &lt;a href="http://stackoverflow.com/a/17482101/2137281" title="Dynamically add active class to bootstrap li in Rails"&gt;so answer&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/axilleas/isitfedoraruby/blob/master/app/helpers/application_helper.rb#L8"&gt;Helper method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/axilleas/isitfedoraruby/blob/master/app/views/layouts/_header.html.haml#L14"&gt;View implementation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="navbar-header"&gt;Navbar header&lt;/h3&gt;
&lt;p&gt;I used the same colors of &lt;a href="https://admin.fedoraproject.org/pkgdb," title="Fedora Package Database"&gt;Fedora pkgdb&lt;/a&gt;. With the help of a firefox
extension named &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/colorpicker/" title="Colorpicker firefox extension"&gt;colorpicker&lt;/a&gt; and &lt;a href="http://twbscolor.smarchal.com/"&gt;http://twbscolor.smarchal.com/&lt;/a&gt; I gave
the navbar the color it has now. twbscolor is a cool site that extracts your
chosen color even in scss, &lt;a href="https://github.com/axilleas/isitfedoraruby/blob/master/app/assets/stylesheets/custom.css.scss#L33"&gt;which I used&lt;/a&gt; along with some minor
tweaks.&lt;/p&gt;
&lt;h3 id="dropdown-menu"&gt;Dropdown menu&lt;/h3&gt;
&lt;p&gt;In responsive mode there is a dropdown menu. That requires some javascript and
the steps are:&lt;/p&gt;
&lt;p&gt;1.Add &lt;code&gt;*= require bootstrap&lt;/code&gt; in &lt;code&gt;app/assets/stylesheets/application.css&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2.Add &lt;code&gt;//= require bootstrap&lt;/code&gt; in &lt;code&gt;app/assets/javascripts/application.js&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;3.Add in &lt;code&gt;app/assets/javascripts/application.js&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#header-collapse&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;.collapse&lt;span class="o"&gt;({&lt;/span&gt;
  toggle: &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4.Add bootstrap classes to header view:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nf"&gt;%header&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;navbar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;navbar&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;navbar&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fixed&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;container&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;navbar&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;header&lt;/span&gt;
      &lt;span class="nf"&gt;%button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;navbar&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;collapse&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;#header&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;collapse&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="nf"&gt;%span&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sr&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Toggle&lt;/span&gt; &lt;span class="n"&gt;navigation&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
        &lt;span class="nf"&gt;%span&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;
        &lt;span class="nf"&gt;%span&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;
        &lt;span class="nf"&gt;%span&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;
        &lt;span class="nf"&gt;%span&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;
      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;FedoraRuby&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;root_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;navbar&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;brand&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;

    &lt;span class="nf"&gt;%nav&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;collapse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;navbar&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;collapse&lt;/span&gt;&lt;span class="cp"&gt;#header&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;collapse&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;role&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;navigation&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nf"&gt;%ul&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;navbar&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nav&lt;/span&gt;
        &lt;span class="nf"&gt;%li&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;is_active&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root_path&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Home&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;root_path&lt;/span&gt;
        &lt;span class="nf"&gt;%li&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;is_active&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rubygems_path&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Ruby&lt;/span&gt; &lt;span class="n"&gt;Gems&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;rubygems_path&lt;/span&gt;
        &lt;span class="nf"&gt;%li&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;is_active&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fedorarpms_path&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Fedora&lt;/span&gt; &lt;span class="n"&gt;Rpms&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;fedorarpms_path&lt;/span&gt;
        &lt;span class="nf"&gt;%li&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;is_active&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;about_path&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;About&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;about_path&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="search-field"&gt;Search field&lt;/h3&gt;
&lt;p&gt;I wanted the search field to be together with the search button. In bootstrap
this is accomplished with &lt;a href="http://getbootstrap.com/components/#input-groups-buttons"&gt;input-group-buttons&lt;/a&gt;. The final code was:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;%ul.nav.navbar-nav.navbar-right
  %li
    &lt;span class="o"&gt;=&lt;/span&gt; form_tag&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; :controller &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s1"&gt;&amp;#39;searches&amp;#39;&lt;/span&gt;, :action &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s1"&gt;&amp;#39;redirect&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;,
    :class &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s1"&gt;&amp;#39;navbar-form&amp;#39;&lt;/span&gt;, :method &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s1"&gt;&amp;#39;post&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      .input-group
        &lt;span class="o"&gt;=&lt;/span&gt; text_field_tag :search, params&lt;span class="o"&gt;[&lt;/span&gt;:search&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
            class: &lt;span class="s1"&gt;&amp;#39;search-query form-control&amp;#39;&lt;/span&gt;,
            placeholder: &lt;span class="s1"&gt;&amp;#39;Search&amp;#39;&lt;/span&gt;
        %span.input-group-btn
          &lt;span class="o"&gt;=&lt;/span&gt; button_tag raw&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;span class=&amp;quot;glyphicon glyphicon-search&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;, name: nil, class: &lt;span class="s1"&gt;&amp;#39;btn btn-default&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Instead for a search button with text, I used an icon.&lt;/p&gt;
&lt;p&gt;There was also another problem regarding responsiveness. In different page sizes
the header looked ugly and the search bar was getting under the menu.&lt;/p&gt;
&lt;p&gt;I fixed it by adding a media query in &lt;code&gt;custom.css.scss&lt;/code&gt; that disappears the
logo in certain widths.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;@media (min-width: 768px) and (max-width: 993px) {
  .navbar-brand {
    display: none
  }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here are before/after screenshots to better understand it.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Before" src="http://axilleas.me/images/isitfedoraruby-search-before.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="After" src="http://axilleas.me/images/isitfedoraruby-search-after.png" /&gt;&lt;/p&gt;
&lt;h2 id="responsive-design"&gt;Responsive design&lt;/h2&gt;
&lt;p&gt;Bootstrap comes with responsiveness by default. In order to activate it you have
to add a viewport meta tag in the head of your html, so in
&lt;code&gt;app/views/layouts/application.html.haml&lt;/code&gt; add:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;%meta&lt;span class="o"&gt;{&lt;/span&gt; :content &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;width=device-width, initial-scale=1, maximum-scale=1&amp;quot;&lt;/span&gt;, :name &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;See full &lt;a href="https://github.com/axilleas/isitfedoraruby/blob/master/app/views/layouts/application.html.haml"&gt;application.html.haml&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;It sure was fun and I learned a lot during the process of searching and fixing
stuff :)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Wed, 30 Jul 2014 00:00:00 +0300</pubDate><guid>tag:axilleas.me,2014-07-30:en/blog/2014/isitfedoraruby-new-design</guid><category>fedora</category><category>gsoc</category><category>ruby</category><category>rails</category><category>webdev</category><category>isitfedoraruby</category></item><item><title>Custom GitLab login page</title><link>http://axilleas.me/en/blog/2014/custom-gitlab-login-page</link><description>&lt;p&gt;With the &lt;a href="https://about.gitlab.com/2014/07/22/gitlab-7-dot-1-released/" title="Blog post: GitLab 7.1 released"&gt;release of GitLab 7.1&lt;/a&gt;, the login page now looks like the
default Enterprise Edition. Although in EE customizing the page should be
easier to configure, we can do the same with Community Edition following
some simple steps. If you are familiar with &lt;a href="http://haml.info/docs/yardoc/file.REFERENCE.html" title="haml yardoc files"&gt;haml&lt;/a&gt; and &lt;a href="http://getbootstrap.com" title="Bootstrap framework"&gt;bootstrap&lt;/a&gt;
this should be fairly easy for you. Again, prerequisite is to have at least
GitLab 7.1. You can see the final changes in this &lt;a href="https://github.com/axilleas/gitlabhq/commit/953a8bc25f1cb5366026e6489c2716d0db69265c"&gt;commit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is a before/after screenshot that we will gradually change.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Before" src="http://axilleas.me/images/gitlab_custom_login_before.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="After" src="http://axilleas.me/images/gitlab_custom_login_after.png" /&gt;&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introductory-steps"&gt;Introductory steps&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#haml-identation"&gt;haml identation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#git-branch"&gt;git branch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#change-brand-logo"&gt;Change brand logo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#change-text"&gt;Change text&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#brand-title"&gt;Brand title&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#body-description"&gt;Body description&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#change-footer-links"&gt;Change footer links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#change-font"&gt;Change font&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#commit-changes"&gt;Commit changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#updating-gitlab"&gt;Updating GitLab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reverting-changes"&gt;Reverting changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-about-omnibus"&gt;What about omnibus?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="introductory-steps"&gt;Introductory steps&lt;/h2&gt;
&lt;h3 id="haml-identation"&gt;haml identation&lt;/h3&gt;
&lt;p&gt;It is important to use an editor that has set a tab to two spaces.
Haml depends on indentation so any mistake will yield errors. If you see
any 500 errors, it means something went wrong. Either check the unicorn logs
or better, run &lt;code&gt;git diff&lt;/code&gt; to see if there are any indentation errors.&lt;/p&gt;
&lt;p&gt;If you are using vim, create/open &lt;code&gt;/home/git/.vimrc&lt;/code&gt; and place the following
lines:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;set tabstop=2
set shiftwidth=2
set expandtab
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That will ensure proper indentation handling.&lt;/p&gt;
&lt;h3 id="git-branch"&gt;git branch&lt;/h3&gt;
&lt;p&gt;In order to have more seamless future updates, let's create a separate git
branch:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;su - git
&lt;span class="nb"&gt;cd&lt;/span&gt; /home/git/gitlab/
git checkout -b custom_login_page
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All changes we make from now on, will be on that branch without creating
any mess in future updates. Read below on how to update.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;The main file we need to change is &lt;code&gt;app/views/layouts/devise.html.haml&lt;/code&gt;,
relative to where GitLab is installed.&lt;/p&gt;
&lt;h2 id="change-brand-logo"&gt;Change brand logo&lt;/h2&gt;
&lt;p&gt;Choose the image you want to appear in the login page and place it in
&lt;code&gt;/home/git/gitlab/app/assets/images/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Next, open &lt;code&gt;app/views/layouts/devise.html.haml&lt;/code&gt; with an editor and change
&lt;a href="https://gitlab.com/gitlab-org/gitlab-ce/blob/master/app/views/layouts/devise.html.haml#L22"&gt;line 22&lt;/a&gt; replacing &lt;code&gt;brand_logo.png&lt;/code&gt; with your image name including
its extension.&lt;/p&gt;
&lt;p&gt;Since we alter the production server, remember to recompile the assets so
that the &lt;a href="http://guides.rubyonrails.org/asset_pipeline.html" title="Rails asset pipeline"&gt;Rails asset pipeline&lt;/a&gt; picks the new image (do that every
time you put a new file or change something in &lt;code&gt;app/assets/&lt;/code&gt;):&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /home/git/gitlab/
sudo -u git &lt;span class="nv"&gt;RAILS_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;production bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rake assets:precompile
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, restart the GitLab service to see the changes.&lt;/p&gt;
&lt;h2 id="change-text"&gt;Change text&lt;/h2&gt;
&lt;p&gt;Apart from the logo, there is a lot more we can change. Let's try changing
the text.&lt;/p&gt;
&lt;h3 id="brand-title"&gt;Brand title&lt;/h3&gt;
&lt;p&gt;In order to change the text reading &lt;em&gt;GitLab Community Edition&lt;/em&gt;, open
&lt;code&gt;devise.html.haml&lt;/code&gt; and change &lt;code&gt;%h1= brand_title&lt;/code&gt; in line 9 into
&lt;code&gt;%h1 My custom brand title&lt;/code&gt;. Here, we removed the equal sign because it
is used by haml to evaluate and print ruby code (&lt;code&gt;brand_title&lt;/code&gt; is a helper
method).&lt;/p&gt;
&lt;p&gt;If you want an image instead, you can replace &lt;code&gt;%h1= brand_title&lt;/code&gt; with
&lt;code&gt;= image_tag 'my_banner.png'&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id="body-description"&gt;Body description&lt;/h3&gt;
&lt;p&gt;As you'd imagine, changing the body headline would require to replace
&lt;code&gt;%h2 Open source software to collaborate on code&lt;/code&gt; with our own text, or
even remove it completely.&lt;/p&gt;
&lt;p&gt;The main body can be changed by altering the text that lies below &lt;code&gt;%p.lead&lt;/code&gt;.
Remember to indent correctly.&lt;/p&gt;
&lt;p&gt;The text can also contain links. Place each link in its own line.&lt;/p&gt;
&lt;p&gt;An example would be:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;Accounts are temporarily created manually, you can ask one in our
= link_to &amp;quot;forum discussion&amp;quot;, &amp;quot;https://forum.example.com/gitlab-reg&amp;quot;
You can find more info in the
= link_to &amp;quot;Wiki.&amp;quot;, &amp;quot;https://example.com/wiki/index.php/GitLab&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A link can also have a &lt;code&gt;target = "_blank"&lt;/code&gt; to open in a new window.
The &lt;a href="http://api.rubyonrails.org/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to" title="link_to definition"&gt;format&lt;/a&gt; is:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;= link_to &amp;quot;text&amp;quot;, &amp;quot;http://example.com&amp;quot;, target: &amp;quot;blank&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="change-footer-links"&gt;Change footer links&lt;/h2&gt;
&lt;p&gt;Footer links are in &lt;a href="https://gitlab.com/gitlab-org/gitlab-ce/blob/master/app/views/layouts/devise.html.haml#L35"&gt;line 35&lt;/a&gt;. Just change their content or add new
ones like we talked above.&lt;/p&gt;
&lt;h2 id="change-font"&gt;Change font&lt;/h2&gt;
&lt;p&gt;The text I used was in Greek, so it looked aweful since the default font
is &lt;em&gt;Helvetica Neue&lt;/em&gt;. I decided to change it and use a webfont that supports
my language. I went with &lt;em&gt;Open Sans&lt;/em&gt; from &lt;a href="https://www.google.com/fonts"&gt;https://www.google.com/fonts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now, there are 3 changes we need to do:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create our custom css file which imports the font and sets the classes&lt;/li&gt;
&lt;li&gt;Change &lt;code&gt;devise.html.haml&lt;/code&gt; and include the new css classes.&lt;/li&gt;
&lt;li&gt;Include our custom css in &lt;code&gt;application.scss&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For the first step I created &lt;code&gt;app/assets/stylesheets/custom_login.scss&lt;/code&gt;
with contents:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@import&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;fonts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;googleapis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="n"&gt;family&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Sans&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;latin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;greek&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Open Sans&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sans&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here I used &lt;a href="http://sass-lang.com/guide"&gt;sass&lt;/a&gt;. These are nested values that will be picked by html.&lt;/p&gt;
&lt;p&gt;The second step is to change &lt;code&gt;devise.html.haml&lt;/code&gt; and include the new
&lt;code&gt;custom-login&lt;/code&gt; css class. There were 2 places where I needed to do that:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;- .brand_text.hidden-xs
+ .brand_text.hidden-xs.custom-login

- %p.lead
+ %p.lead.custom-login
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Third step is to include the custom css in &lt;code&gt;application.scss&lt;/code&gt;. I opened
&lt;code&gt;app/assets/stylesheets/application.scss&lt;/code&gt; and appended at the very end of
the file the following:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;* Styles for custom login page&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;span class="cp"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;custom_login.scss&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, in order for the new css to get included in the asset pipeline I
precompiled the assets one more time:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /home/git/gitlab/
sudo -u git &lt;span class="nv"&gt;RAILS_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;production bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rake assets:precompile
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And while I was trying to precompile the assets after adding my custom css,
it failed to do so because of a missing semicolon in &lt;code&gt;application.scss&lt;/code&gt;.
I immediately opened a &lt;a href="https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/157"&gt;Merge Request&lt;/a&gt;, so either wait for it to get
merged or add it yourself for now. You got to love open source :)&lt;/p&gt;
&lt;p&gt;Screenshots of before/after font change. You can see that before the changes
Greek and English words are using different fonts.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Before font change" src="http://axilleas.me/images/gitlab_custom_login_prefont.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="After font change" src="http://axilleas.me/images/gitlab_custom_login_afterfont.png" /&gt;&lt;/p&gt;
&lt;h2 id="commit-changes"&gt;Commit changes&lt;/h2&gt;
&lt;p&gt;The login page should now work correctly providing all the needed info for
our users. It's time to commit our changes. Check the diff with &lt;code&gt;git diff&lt;/code&gt;
one more time, and make sure you are on the right branch with &lt;code&gt;git branch&lt;/code&gt;.
It should show &lt;code&gt;* custom_login_page&lt;/code&gt;. Add and commit the changed files:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git add app/
git commit -m &amp;#39;Custom login page.&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="updating-gitlab"&gt;Updating GitLab&lt;/h2&gt;
&lt;p&gt;The trickiest part is to maintain the code through the updates and avoid as
many confilcts as possible.&lt;/p&gt;
&lt;p&gt;Before each update, these are the basic steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Stop gitlab service&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;git fetch --all&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;git branch 7-1-stable origin/7-1-stable&lt;/code&gt; (replace with appropriate version)&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;git rebase 7-1-stable custom_login&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Follow the rest of instructions (db:migrate, assets:precompile, etc.)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The trick here is rebase. This git command will replay our changes over the
new branch we fetched from upstream. If there are no conflicts, the custom
login changes will remain. Otherwise, git will inform you and then you'd
have to first resolve any issues before rebasing.&lt;/p&gt;
&lt;h2 id="reverting-changes"&gt;Reverting changes&lt;/h2&gt;
&lt;p&gt;In order to revert to the original login page, it's as simple as changing
branches and restarting the GitLab service.&lt;/p&gt;
&lt;h2 id="what-about-omnibus"&gt;What about omnibus?&lt;/h2&gt;
&lt;p&gt;If you have installed GitLab through the omnibus packages, the GitLab root
path will be &lt;code&gt;/opt/gitlab/embedded/service/gitlab-rails/&lt;/code&gt; so make any
changes relative to that path. I haven't tested it yet though, so I don't
know whether any changes get rewritten with package updates (probably that
is the case).&lt;/p&gt;
&lt;p&gt;On the other hand, if you work at a company that uses omnibus, consider
going for the Enterprise Edition where this process would be more easier
and at the same time you support the future development of GitLab :)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Mon, 28 Jul 2014 00:00:00 +0300</pubDate><guid>tag:axilleas.me,2014-07-28:en/blog/2014/custom-gitlab-login-page</guid><category>ruby</category><category>rails</category><category>webdev</category><category>gitlab</category><category>haml</category></item><item><title>isitfedoraruby gsoc midterm sum up</title><link>http://axilleas.me/en/blog/2014/isitfedoraruby-gsoc-midterm-sum-up</link><description>&lt;p&gt;This sums up my past month involvement with the project. A lot of reading in
between...&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#changelog"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#railsruby-style-guide"&gt;Rails/Ruby style guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tests"&gt;Tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bugs-fixed"&gt;Bugs fixed&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#wrong-owners"&gt;wrong owners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dependencies-shown-twice"&gt;dependencies shown twice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#duplicate-homepage-and-source-uri"&gt;duplicate homepage and source uri&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#enhancements"&gt;Enhancements&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#show-more-info-in-fedorarpm-show-page"&gt;Show more info in fedorarpm show page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rake-tasks"&gt;Rake tasks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="changelog"&gt;Changelog&lt;/h2&gt;
&lt;p&gt;I added a changelog so that the changes are easily seen, so here it is (this week is v 0.9.1):&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="mf"&gt;0.9&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Refactor&lt;/span&gt; &lt;span class="n"&gt;rake&lt;/span&gt; &lt;span class="n"&gt;tasks&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Source&lt;/span&gt; &lt;span class="n"&gt;Code&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fedorarpms&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;points&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;pkgs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;gitweb&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Add&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="n"&gt;integration&lt;/span&gt; &lt;span class="n"&gt;tests&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Retrieve&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;Pkgwat&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Show&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt; &lt;span class="n"&gt;packager&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fedorarpms&lt;/span&gt;&lt;span class="c"&gt;#show&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Show&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fedorarpms&lt;/span&gt;&lt;span class="c"&gt;#show&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Show&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fedorarpms&lt;/span&gt;&lt;span class="c"&gt;#show&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="n"&gt;api&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;fetch&lt;/span&gt; &lt;span class="n"&gt;rawhide&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;scrapping&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Retrieve&lt;/span&gt; &lt;span class="n"&gt;homepage&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;Pkgwat&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Fix&lt;/span&gt; &lt;span class="n"&gt;duplication&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;dependencies&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fedorarpms&lt;/span&gt;&lt;span class="c"&gt;#show&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Do&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;rubygems&lt;/span&gt;&lt;span class="c"&gt;#show if it is the same as the homepage&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Do&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fedorarpms&lt;/span&gt;&lt;span class="c"&gt;#show if it is the same as the homepage&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dependencies&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fedorarpm&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;New&lt;/span&gt; &lt;span class="n"&gt;rake&lt;/span&gt; &lt;span class="n"&gt;tasks&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;dependencies&lt;/span&gt; &lt;span class="nn"&gt;and&lt;/span&gt; &lt;span class="nn"&gt;commits&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Show&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt; &lt;span class="n"&gt;packager&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fedorarpms&lt;/span&gt;&lt;span class="c"&gt;#show&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Show&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fedorarpms&lt;/span&gt;&lt;span class="c"&gt;#show&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Show&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fedorarpms&lt;/span&gt;&lt;span class="c"&gt;#show&lt;/span&gt;

&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="mf"&gt;0.9&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Remove&lt;/span&gt; &lt;span class="n"&gt;unused&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Remove&lt;/span&gt; &lt;span class="n"&gt;HistoricalGems&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Remove&lt;/span&gt; &lt;span class="n"&gt;Build&lt;/span&gt; &lt;span class="n"&gt;controller&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Remove&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt; &lt;span class="n"&gt;related&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt; &lt;span class="n"&gt;spec&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="n"&gt;downloading&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Remove&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="n"&gt;helpers&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Cleaned&lt;/span&gt; &lt;span class="n"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;removed&lt;/span&gt; &lt;span class="n"&gt;unused&lt;/span&gt; &lt;span class="n"&gt;ones&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Conform&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ruby&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rails&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="n"&gt;guide&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Maintainer&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;packages&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;fas_name&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Automatically&lt;/span&gt; &lt;span class="n"&gt;fetch&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;Fedora&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;querying&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;pkgdb&lt;/span&gt; &lt;span class="n"&gt;api&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Addded&lt;/span&gt; &lt;span class="n"&gt;rake&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;fetch&lt;/span&gt; &lt;span class="n"&gt;rawhide&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="n"&gt;locally&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Show&lt;/span&gt; &lt;span class="n"&gt;koji&lt;/span&gt; &lt;span class="n"&gt;builds&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;supported&lt;/span&gt; &lt;span class="nn"&gt;Fedora&lt;/span&gt; &lt;span class="nn"&gt;versions&lt;/span&gt; &lt;span class="nn"&gt;only&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Bugs&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Query&lt;/span&gt; &lt;span class="n"&gt;bugs&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;api&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;pkgwat&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Drop&lt;/span&gt; &lt;span class="n"&gt;is_open&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bugs&lt;/span&gt; &lt;span class="nn"&gt;table&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Show&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt; &lt;span class="n"&gt;Fedora&lt;/span&gt; &lt;span class="n"&gt;bugs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exclude&lt;/span&gt; &lt;span class="n"&gt;EPEL&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Hover&lt;/span&gt; &lt;span class="n"&gt;over&lt;/span&gt; &lt;span class="n"&gt;links&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;see&lt;/span&gt; &lt;span class="n"&gt;full&lt;/span&gt; &lt;span class="n"&gt;titles&lt;/span&gt; &lt;span class="n"&gt;when&lt;/span&gt; &lt;span class="n"&gt;truncated&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Rename&lt;/span&gt; &lt;span class="n"&gt;builds&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;koji_builds&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Added&lt;/span&gt; &lt;span class="n"&gt;tests&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Unit&lt;/span&gt; &lt;span class="n"&gt;tests&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Added&lt;/span&gt; &lt;span class="n"&gt;Github&lt;/span&gt; &lt;span class="n"&gt;services&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;travis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ci&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;hound&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ci&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;coveralls&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;gemnasium&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Development&lt;/span&gt; &lt;span class="n"&gt;tools&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;shoulda&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;matchers&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rspec&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;capybara&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rack&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mini&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;profiler&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rubocop&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;factory_girl&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;annotate&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;railsroady&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should notice some version numbers. That's also a new addition and every
week I will deploy a new version, so eventually at some point in the end of the
summer, version 1.0.0 will be released.&lt;/p&gt;
&lt;p&gt;Here are some nice stats from git log.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/axilleas/isitfedoraruby/graphs/contributors"&gt;Git stats&lt;/a&gt;: 91 commits / 4,662 ++ / 2,874 --&lt;/p&gt;
&lt;h2 id="railsruby-style-guide"&gt;Rails/Ruby style guide&lt;/h2&gt;
&lt;p&gt;Fixed arround 500 warnings that rubocop yielded.&lt;/p&gt;
&lt;h2 id="tests"&gt;Tests&lt;/h2&gt;
&lt;p&gt;Added: unit tests for models.&lt;/p&gt;
&lt;p&gt;Missing:
A bunch of code still needs testing, rspec is not enough to properly test api
calls. I will use &lt;a href="https://github.com/vcr/vcr"&gt;vcr&lt;/a&gt; and &lt;a href="https://github.com/bblimke/webmock"&gt;webmock&lt;/a&gt; in the future to cover these tests.
Integration tests are also not complete yet.&lt;/p&gt;
&lt;h2 id="bugs-fixed"&gt;Bugs fixed&lt;/h2&gt;
&lt;h3 id="wrong-owners"&gt;wrong owners&lt;/h3&gt;
&lt;p&gt;Previously it parsed the spec file and checked the first email in the
changelog. Co-maintainers have also the ability to build a package and in
that case it shows wrong info. Another case is where a user changes their
email they are taken into account twice, so when hitting &lt;code&gt;/by_owner&lt;/code&gt; not all
packages are shown. I was hit by this bug.&lt;/p&gt;
&lt;p&gt;It now fetches the owner's fas name using &lt;a href="https://github.com/daviddavis/pkgwat"&gt;pkgwat&lt;/a&gt; which I use to sort
by owner.&lt;/p&gt;
&lt;h3 id="dependencies-shown-twice"&gt;dependencies shown twice&lt;/h3&gt;
&lt;p&gt;The current implementation scraps the SPEC file of a rubygem via the &lt;a href="http://pkgs.fedoraproject.org/cgit"&gt;gitweb&lt;/a&gt;
and then stores the dependencies. The problem is that when one uses gem2rpm,
&lt;code&gt;~&amp;gt;&lt;/code&gt; is expanded to &lt;code&gt;&amp;gt;=&lt;/code&gt; and &lt;code&gt;&amp;lt;=&lt;/code&gt;, which leads to list some dependencies twice.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Double dependencies" src="http://axilleas.me/images/fedoraruby_duplicate_entries.png" /&gt;&lt;/p&gt;
&lt;p&gt;The fix was quite easy. Here is the controller that is in charge for the show
action:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;
    &lt;span class="vi"&gt;@name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="vi"&gt;@rpm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;FedoraRpm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_by_name!&lt;/span&gt; &lt;span class="vi"&gt;@name&lt;/span&gt;
    &lt;span class="vi"&gt;@page_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@rpm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
    &lt;span class="vi"&gt;@dependencies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@rpm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dependency_packages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uniq&lt;/span&gt;
    &lt;span class="vi"&gt;@dependents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@rpm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dependent_packages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uniq&lt;/span&gt;
    &lt;span class="k"&gt;rescue&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;RecordNotFound&lt;/span&gt;
      &lt;span class="n"&gt;redirect_to&lt;/span&gt; &lt;span class="ss"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;not_found&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All I did was to add &lt;code&gt;uniq&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id="duplicate-homepage-and-source-uri"&gt;duplicate homepage and source uri&lt;/h3&gt;
&lt;p&gt;In a gem page you could see this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Double homepage" src="http://axilleas.me/images/fedoraruby_duplicate_homepage_gem.png" /&gt;&lt;/p&gt;
&lt;p&gt;The information is taken from the &lt;a href="https://rubygems.org"&gt;https://rubygems.org&lt;/a&gt; api. Some have the
same page for both gem's homepage and source uri. The secret was lying in the
[view][].&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;
  &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;h3&lt;/span&gt; &lt;span class="no"&gt;Gem&lt;/span&gt; &lt;span class="no"&gt;Information&lt;/span&gt;
  &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nb"&gt;p&lt;/span&gt;
    &lt;span class="ss"&gt;Homepage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="vi"&gt;@gem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;homepage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@gem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;homepage&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="vi"&gt;@gem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;source_uri&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;blank?&lt;/span&gt;
    &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nb"&gt;p&lt;/span&gt;
      &lt;span class="no"&gt;Source&lt;/span&gt; &lt;span class="ss"&gt;Code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="vi"&gt;@gem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;source_uri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@gem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;source_uri&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All I did was to change this from this:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="vi"&gt;@gem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;source_uri&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;blank?&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to this:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="vi"&gt;@gem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;source_uri&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;blank?&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="vi"&gt;@gem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;source_uri&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="vi"&gt;@gem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;homepage&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So now it skips showing the homepage if it is the same as the source uri.&lt;/p&gt;
&lt;h2 id="enhancements"&gt;Enhancements&lt;/h2&gt;
&lt;h3 id="show-more-info-in-fedorarpm-show-page"&gt;Show more info in fedorarpm show page&lt;/h3&gt;
&lt;p&gt;I added some more information at the fedorarpm page. Now it shows, last packager,
last commit message and last commit date. Useful if something is broken with
the latest release and you want to blame someone :p&lt;/p&gt;
&lt;p&gt;And since many times a package has many co-maintainers you get to see the real
last packager.&lt;/p&gt;
&lt;p&gt;Here's a shot of the page as it is now:&lt;/p&gt;
&lt;p&gt;&lt;img alt="More info" src="http://axilleas.me/images/fedoraruby_moreinfo.png" /&gt;&lt;/p&gt;
&lt;h3 id="rake-tasks"&gt;Rake tasks&lt;/h3&gt;
&lt;p&gt;As I have made some &lt;a href="https://github.com/axilleas/isitfedoraruby/pull/54"&gt;major refactoring&lt;/a&gt; in the fedorarpms model, I split
many methods to their own namespace. For example, previously there was a single
method for importing the versions and dependencies, now they are two separate.&lt;/p&gt;
&lt;p&gt;As a consequense, I added rake tasks that could be invoked for a single package.
Also the namespace is now more descriptive.&lt;/p&gt;
&lt;p&gt;The tasks are for now the following:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;rake fedora:gem:import:all_names               # FEDORA | Import a list of names of ALL gems from rubygems.org
rake fedora:gem:import:metadata[number,delay]  # FEDORA | Import gems metadata from rubygems.org
rake fedora:gem:update:gems[age]               # FEDORA | Update gems metadata from rubygems.org
rake fedora:rawhide:create                     # FEDORA | Create file containing Fedora rawhide(development) version
rake fedora:rawhide:version                    # FEDORA | Get Fedora rawhide(development) version
rake fedora:rpm:import:all[number,delay]       # FEDORA | Import ALL rpm metadata (time consuming)
rake fedora:rpm:import:bugs[rpm_name]          # FEDORA | Import bugs of a given rubygem package
rake fedora:rpm:import:commits[rpm_name]       # FEDORA | Import commits of a given rubygem package
rake fedora:rpm:import:deps[rpm_name]          # FEDORA | Import dependencies of a given rubygem package
rake fedora:rpm:import:gem[rpm_name]           # FEDORA | Import respective gem of a given rubygem package
rake fedora:rpm:import:koji_builds[rpm_name]   # FEDORA | Import koji builds of a given rubygem package
rake fedora:rpm:import:names                   # FEDORA | Import a list of names of all rubygems from apps.fedoraproject.org
rake fedora:rpm:import:versions[rpm_name]      # FEDORA | Import versions of a given rubygem package
rake fedora:rpm:update:oldest_rpms[number]     # FEDORA | Update oldest &amp;lt;n&amp;gt; rpms
rake fedora:rpm:update:rpms[age]               # FEDORA | Update rpms metadata
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That was it for now. For any changes be sure to check out the changelog regularly!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Sun, 13 Jul 2014 00:00:00 +0300</pubDate><guid>tag:axilleas.me,2014-07-13:en/blog/2014/isitfedoraruby-gsoc-midterm-sum-up</guid><category>fedora</category><category>gsoc</category><category>ruby</category><category>rails</category><category>webdev</category><category>isitfedoraruby</category></item><item><title>Rails development tools</title><link>http://axilleas.me/en/blog/2014/ruby-on-rails-development-tools</link><description>&lt;p&gt;During the past two months I have been reading constantly about Rails and
how I could get more productive when writing code and testing my apps.
There is a ton of information about those matters on the web and I'll try
to include as many articles as I could find useful to my knowledge building.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Disclaimer:&lt;/em&gt; This article is heavily inspired by Thoughtbot's
&lt;a href="https://learn.thoughtbot.com/products/2-vim-for-rails-developers" title="Vim for Rails Developers"&gt;Vim for Rails Developers&lt;/a&gt; which I stumbled upon during browsing the
screencasts of &lt;a href="https://codeschool.com" title="codeschool homepage"&gt;codeschool&lt;/a&gt;.&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#editor-of-choice-vim"&gt;Editor of choice (vim)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#vim-plugins"&gt;vim plugins&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#railsvim"&gt;rails.vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vim-snipmate"&gt;vim-snipmate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fugitivevim"&gt;fugitive.vim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#terminal-multiplexer-tmux"&gt;Terminal multiplexer (tmux)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#development-stack"&gt;Development stack&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#jazz_hands"&gt;jazz_hands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rubocop"&gt;rubocop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#railroady"&gt;railroady&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#annotate"&gt;annotate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing-stack"&gt;Testing stack&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#rspec"&gt;rspec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#capybara"&gt;capybara&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#guard"&gt;guard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-super-useful-tools"&gt;Other super useful tools&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#ctags"&gt;ctags&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#secret-power"&gt;Secret power&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#ack"&gt;ack&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#alternative-ag"&gt;alternative (ag)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="editor-of-choice-vim"&gt;Editor of choice (vim)&lt;/h1&gt;
&lt;p&gt;When you work from the command line and you use linux, your editor
preference comes down to two choices: vim and emacs. I started with vim
some time ago so I'll stick with it.&lt;/p&gt;
&lt;p&gt;If you are new to vim read this &lt;a href="http://www.viemu.com/vi-vim-cheat-sheet.gif" title="vim cheatsheet"&gt;cheatsheet&lt;/a&gt; to learn the basical
commands.&lt;/p&gt;
&lt;h2 id="vim-plugins"&gt;vim plugins&lt;/h2&gt;
&lt;p&gt;Start by installing &lt;a href="https://github.com/tpope/vim-pathogen" title="pathogen vim plugin"&gt;pathogen.vim&lt;/a&gt;, a vim plugin manager:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mkdir -p ~/.vim/autoload ~/.vim/bundle &amp;amp;&amp;amp; \
curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then add this to your vimrc:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;execute pathogen#infect()
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;From now on, every plugin that is compatible with pathogen can be simply
installed by cloning its repo at &lt;code&gt;~/.vim/bundle&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;An alternative for pathogen is &lt;a href="https://github.com/gmarik/Vundle.vim" title="vundle vim plugin"&gt;vundle&lt;/a&gt;. Haven't used it but it
behaves similarly.&lt;/p&gt;
&lt;h3 id="railsvim"&gt;rails.vim&lt;/h3&gt;
&lt;p&gt;Probably the one most useful plugin when dealing with Rails projects.&lt;/p&gt;
&lt;p&gt;Install it with:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git clone git://github.com/tpope/vim-rails.git ~/.vim/bundle/vim-rails
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Browsing through the app&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can use &lt;code&gt;:RController foos&lt;/code&gt; and it will take you straight
to the &lt;code&gt;app/controllers/foos_controller.rb&lt;/code&gt;. As you might guess, same
happens with &lt;code&gt;:RModel foo&lt;/code&gt;, etc. There is also tab completion so that
you can toggle between all models/controllers, etc.&lt;/p&gt;
&lt;p&gt;Another useful command is &lt;code&gt;:find&lt;/code&gt;. Invoking it with a name foo, it first
searches for a model named foo. Tab completion is also your friend.&lt;/p&gt;
&lt;p&gt;One other really cool feature is the go to file. Supposedly we have the
following model:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Blog&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;

  &lt;span class="n"&gt;has_many&lt;/span&gt; &lt;span class="ss"&gt;:articles&lt;/span&gt;

&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Placing the cursor on the articles word and pressing &lt;code&gt;gf&lt;/code&gt; vim opens
the article model. After saving your changes you can go back to the blog
model by pressing &lt;code&gt;Ctrl-o&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Run your tests through vim&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Running test is also a matter of a command. Say you are editing a specific
spec/test file. All you have to do is run &lt;code&gt;:Rake&lt;/code&gt; and the tests for that
particular file will be ran, without leaving your favorite editor :)&lt;/p&gt;
&lt;p&gt;The supported commands are a lot and your best bet is to invoke
&lt;code&gt;:help rails&lt;/code&gt; in vim and learn about them.&lt;/p&gt;
&lt;p&gt;Be sure to also check &lt;a href="https://github.com/tpope/vim-rails" title="vim-rails on github"&gt;vim-rails&lt;/a&gt; on github.&lt;/p&gt;
&lt;h3 id="vim-snipmate"&gt;vim-snipmate&lt;/h3&gt;
&lt;p&gt;SnipMate implements snippet features in Vim. A snippet is like a template,
reducing repetitive insertion of pieces of text. Snippets can contain
placeholders for modifying the text if necessary or interpolated code for
evaluation.&lt;/p&gt;
&lt;p&gt;Install it:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;cd ~/.vim/bundle
git clone https://github.com/tomtom/tlib_vim.git
git clone https://github.com/MarcWeber/vim-addon-mw-utils.git
git clone https://github.com/garbas/vim-snipmate.git
git clone https://github.com/honza/vim-snippets.git
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/honza/vim-snippets/blob/master/snippets/ruby.snippets" title="Ruby supported snippets"&gt;List of supported Ruby snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/honza/vim-snippets/blob/master/snippets/ruby.snippets#L598" title="Rails supported snippets"&gt;List of supported Rails snippets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Writing a method&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Reading the source code of snippets above let's see how we can create a
method. The snippet reads:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;snippet def
        def &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;method_name&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
                &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
        end
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, the snippet is named &lt;code&gt;def&lt;/code&gt; and in order to invoke it we must write
def and hit Tab. It then expands, placing the cursor in the highlited
&lt;code&gt;method_name&lt;/code&gt;. This is what it looks like:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;def method_name

end
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once you start typing, method_name gets replaced with what you type. When
you finish, hit Tab again to go to the method body.&lt;/p&gt;
&lt;p&gt;Now all you have to do is read the &lt;code&gt;ruby.snippet&lt;/code&gt; and find out what
snippets are supported.&lt;/p&gt;
&lt;h3 id="fugitivevim"&gt;fugitive.vim&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/tpope/vim-fugitive" title="vim-fugitive on github"&gt;vim-fugitive&lt;/a&gt; brings the power of git commands inside vim.&lt;/p&gt;
&lt;p&gt;Install it with:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git clone git://github.com/tpope/vim-fugitive.git ~/.vim/bundle/vim-fugitive
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check out the github page for a list of commands and some interesting
screencasts.&lt;/p&gt;
&lt;h1 id="terminal-multiplexer-tmux"&gt;Terminal multiplexer (tmux)&lt;/h1&gt;
&lt;p&gt;Again, here you have two options. &lt;code&gt;screen&lt;/code&gt; or &lt;code&gt;tmux&lt;/code&gt;. My first contact was
with screen but recently I decided to try tmux.&lt;/p&gt;
&lt;p&gt;I won't go into any details but I highly reccomend watching Chris Hunt's
presentation &lt;a href="https://www.youtube.com/watch?v=9jzWDr24UHQ" title="Chris Hunt - Impressive Ruby Productivity with Vim and Tmux - Ancient City Ruby 2013 "&gt;Impressive Ruby Productivity with Vim and Tmux&lt;/a&gt;.
It's an awesome talk.&lt;/p&gt;
&lt;h1 id="development-stack"&gt;Development stack&lt;/h1&gt;
&lt;p&gt;There is a great &lt;a href="http://www.codebeerstartups.com/2013/04/must-have-gems-for-development-machine-in-ruby-on-rails"&gt;article&lt;/a&gt; I stumbled upon yesterday about some must have gems
for development, some of which I haven't tested. Here is what I got so far.&lt;/p&gt;
&lt;h2 id="jazz_hands"&gt;jazz_hands&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/nixme/jazz_hands" title="jazz_hands on github"&gt;jazz_hands&lt;/a&gt; is basically a collection of gems that you get for free with
just one gem. It focuses on enhancing the rails console. It provides:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;- Pry for a powerful shell alternative to IRB.
- Awesome Print for stylish pretty print.
- Hirb for tabular collection output.
- Pry Rails for additional commands (show-routes, show-models, show-middleware) in the Rails console.
- Pry Doc to browse Ruby source, including C, directly from the console.
- Pry Git to teach the console about git. Diffs, blames, and commits on methods and classes, not just files.
- Pry Remote to connect remotely to a Pry console.
- Pry Debugger to turn the console into a simple debugger.
- Pry Stack Explorer to navigate the call stack and frames.
- Coolline and Coderay for syntax highlighting as you type. Optional. MRI 1.9.3/2.0.0 only
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Again, visiting the github page, you will get all the info you want.
There is an open &lt;a href="https://github.com/nixme/jazz_hands/pull/26"&gt;issue&lt;/a&gt; and installation on ruby 2.1.2 is failing for now.
For the time being you can put the following in your Gemfile:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;gem &amp;#39;jazz_hands&amp;#39;, github: &amp;#39;nixme/jazz_hands&amp;#39;, branch: &amp;#39;bring-your-own-debugger&amp;#39;
gem &amp;#39;pry-byebug&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="rubocop"&gt;rubocop&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/bbatsov/rubocop"&gt;rubocop&lt;/a&gt; is a tool which checks if your code conforms to the
&lt;a href="https://github.com/bbatsov/ruby-style-guide" title="Ruby style guide"&gt;ruby&lt;/a&gt;/&lt;a href="https://github.com/bbatsov/rails-style-guide" title="Rails style guide"&gt;rails&lt;/a&gt; community guidelines.&lt;/p&gt;
&lt;p&gt;You can check the article I &lt;a href="http://axilleas.me/en/blog/2014/rubocop-to-the-rescue"&gt;wrote&lt;/a&gt;
where I explain how to set it up and running.&lt;/p&gt;
&lt;h2 id="railroady"&gt;railroady&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/preston/railroady" title="railroady gem"&gt;railroady&lt;/a&gt; is a tool that lets you visualize how the models and the
controllers of your app are structured. Instructions on how to install it are
on the github page. You can &lt;a href="https://gitlab.com/fedora-ruby/isitfedoraruby/raw/master/doc/models_complete.svg"&gt;check&lt;/a&gt; how it looks like on the
fedoraruby project I'm currently working on.&lt;/p&gt;
&lt;h2 id="annotate"&gt;annotate&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/ctran/annotate_models" title="annotate on github"&gt;annotate&lt;/a&gt; generates a schema of the model and places it on top of the model.
It can also place it on top of your rspec files and the factories. It looks
like this:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;# == Schema Information
#
# Table name: bugs
#
#  id            :integer          not null, primary key
#  name          :string(255)
#  bz_id         :string(255)
#  fedora_rpm_id :integer
#  is_review     :boolean
#  created_at    :datetime
#  updated_at    :datetime
#  last_updated  :string(255)
#  is_open       :boolean
#
&lt;/pre&gt;&lt;/div&gt;


&lt;h1 id="testing-stack"&gt;Testing stack&lt;/h1&gt;
&lt;p&gt;There is a ton of useful tools out there and if you are new to rails
development you can easilly get lost. &lt;a href="http://words.steveklabnik.com/rails-has-two-default-stacks" title="Rails has Two Default Stacks"&gt;Rails has Two Default Stacks&lt;/a&gt; is
a nice read that sums it up. I will try to update this post as I find more
useful tools in my way.&lt;/p&gt;
&lt;h2 id="rspec"&gt;rspec&lt;/h2&gt;
&lt;p&gt;I am mostly in favor of rspec because of its descriptive language and the great
support by other complement testing tools.&lt;/p&gt;
&lt;h2 id="capybara"&gt;capybara&lt;/h2&gt;
&lt;p&gt;So, why capybara and not cucumber? I'm not an expert on neither of these tools
but from my understanding capybara is more focused on developers whereas
cucumber's human language mostly targets aplications where one talks to a
non-technical customer.&lt;/p&gt;
&lt;h2 id="guard"&gt;guard&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Guard watches files and runs a command after a file is modified. This allows
you to automatically run tests in the background, restart your development
server, reload the browser, and more.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It has nearly 200 plugins which provide different options as guard is not only
used for testing. The particular plugin for rspec is &lt;a href="https://github.com/guard/guard-rspec" title="guard-rspec on github"&gt;guard-rspec&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you make the smallest change to a test and you hit save, &lt;a href="https://github.com/guard/guard" title="guard on github"&gt;guard&lt;/a&gt; will
run that particular test group again to see if it still passes.&lt;/p&gt;
&lt;p&gt;I tend to invoke guard with &lt;code&gt;guard -c&lt;/code&gt; which runs the tests in a clear console
every time.&lt;/p&gt;
&lt;p&gt;Read the &lt;a href="https://github.com/guard/guard/wiki" title="guard wiki page"&gt;guard wiki page&lt;/a&gt; which is comprehensive and also watch the
[guard railscast][] to better understand it.&lt;/p&gt;
&lt;h1 id="other-super-useful-tools"&gt;Other super useful tools&lt;/h1&gt;
&lt;h2 id="ctags"&gt;ctags&lt;/h2&gt;
&lt;p&gt;Quoting from &lt;a href="http://ctags.sourceforge.net/whatis.html" title="What is ctags?"&gt;What is ctags?&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ctags generates an index (or tag) file of language objects found in
source files that allows these items to be quickly and easily located
by a text editor or other utility.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are a bunch of different tools to create a tags file, but the most
common implementation is &lt;a href="http://ctags.sourceforge.net/" title="Exuberant ctags homepage"&gt;exuberant ctags&lt;/a&gt; which we will use.&lt;/p&gt;
&lt;p&gt;It supports 41 programming languages and a handful of editors.
directories&lt;/p&gt;
&lt;h3 id="installation"&gt;Installation&lt;/h3&gt;
&lt;p&gt;Install ctags via your package manager. It should be supported in all
major ditributions.&lt;/p&gt;
&lt;h3 id="configuration"&gt;Configuration&lt;/h3&gt;
&lt;p&gt;For a rails project, in your application root directory you can run:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;ctags -R --exclude=.git --exclude=log *
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This searches recursively all files in the current directory, excludes
the &lt;code&gt;.git&lt;/code&gt; and &lt;code&gt;log&lt;/code&gt; directories and creates a &lt;code&gt;tags&lt;/code&gt; file under current
dir. You may want to add it to &lt;code&gt;.gitignore&lt;/code&gt; by the way.&lt;/p&gt;
&lt;p&gt;Next, adding the following line to &lt;code&gt;~/.vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;set tags=./tags;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;sets the location of the tags file, which is relative to the current
directory.&lt;/p&gt;
&lt;p&gt;You can move the above options in &lt;code&gt;~/.ctags&lt;/code&gt;, so in our case this will
be:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;--recurse=yes
--tag-relative=yes
--exclude=.git
--exclude=log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So in future runs of ctags all you need to do is &lt;code&gt;ctags *&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;ctags doesn't autogenerate, so each time you write code that is tagable,
you have to run the command again. If you are working in a git repository
be sure to checkout Tim Pope's &lt;a href="http://tbaggery.com/2011/08/08/effortless-ctags-with-git.html" title="Effortless Ctags with Git"&gt;Effortless Ctags with Git&lt;/a&gt;.
What this does is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Any new repositories you create or clone will be immediately indexed
with Ctags and set up to re-index every time you check out, commit,
merge, or rebase. Basically, you’ll never have to manually run Ctags
on a Git repository again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="usage"&gt;Usage&lt;/h3&gt;
&lt;p&gt;Say we have a file containing hundrends of lines. Inside a method you
see the below definition:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;contain_multiple_methods&lt;/span&gt;
  &lt;span class="n"&gt;method_one&lt;/span&gt;
  &lt;span class="n"&gt;method_two&lt;/span&gt;
  &lt;span class="n"&gt;method_three&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;While you could search for these methods, you can save a few keystrokes
by simply getting the cursor on the line of the method to search and in
vim normal mode press &lt;code&gt;Ctrl + ]&lt;/code&gt; (control and right square bracket).
This should get you where the method is. Go back to where you were by
pressing &lt;code&gt;Ctrl + t&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The usage of ctags isn't restricted only in the current file.
If a method in your file is inherited by another class, then searching
for it will jump in this particular file.&lt;/p&gt;
&lt;h3 id="secret-power"&gt;Secret power&lt;/h3&gt;
&lt;p&gt;Wouldn't it be cool if we could search for methods in the Rails source
code? Here is where the power of ctags really excels. All you have to do
is tell ctags to also tag the rails source code.&lt;/p&gt;
&lt;p&gt;First I cloned the rails repository into &lt;code&gt;vendor/rails&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git clone https://github.com/rails/rails.git vendor/rails
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It should take less than a minute to download. You wouldn't want
the rails source code to be included in your git tree, so you simply
exclude &lt;code&gt;vendor/rails&lt;/code&gt; by adding it to &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Lastly, create again the tags with &lt;code&gt;ctags *&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now navigate with vim to one of your models that has for example the
association &lt;code&gt;has_many&lt;/code&gt;, place the cursor on it (or just on the same line)
and hit &lt;code&gt;Ctrl + ]&lt;/code&gt;. Pretty cool huh? In case you forgot, go back to where
you were with &lt;code&gt;Ctrl + t&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="ack"&gt;ack&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://beyondgrep.com/" title="ack homepage"&gt;ack&lt;/a&gt; is like grep but on steroids.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Designed for programmers with large heterogeneous trees of source code,
ack is written purely in portable Perl 5 and takes advantage of the
power of Perl's regular expressions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It supports multiple types which you can see by typong &lt;code&gt;ack --help-types&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Of course there is a &lt;a href="https://github.com/mileszs/ack.vim" title="ack vim plugin"&gt;vim plugin&lt;/a&gt;!&lt;/p&gt;
&lt;h3 id="alternative-ag"&gt;alternative (ag)&lt;/h3&gt;
&lt;p&gt;While reading the &lt;a href="http://beyondgrep.com/more-tools/" title="ack: more tools"&gt;more-tools&lt;/a&gt; page of ack I found out about &lt;a href="https://github.com/ggreer/the_silver_searcher" title="ag at github"&gt;ag&lt;/a&gt;,
also called the_silver_searcher. It is said to search code about 3–5×
faster than ack, is written in C and have some more enhancements than ack.
You may want to give this a try to. And as you have guessed there is also
an &lt;a href="https://github.com/rking/ag.vim" title="ag vim plugin"&gt;ag vim plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="conclusion"&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;The editor of choice and the tools you use in web development play a great role
in one's productivity, so you have to choose wisely and spend some time to get
to know it. Personally, I learned a lot more these past days I was crafting
this post and I hope you got something out of it too :)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Tue, 01 Jul 2014 00:00:00 +0300</pubDate><guid>tag:axilleas.me,2014-07-01:en/blog/2014/ruby-on-rails-development-tools</guid><category>fedora</category><category>gsoc</category><category>ruby</category><category>rails</category><category>webdev</category></item><item><title>Rubocop to the rescue!</title><link>http://axilleas.me/en/blog/2014/rubocop-to-the-rescue</link><description>&lt;p&gt;&lt;em&gt;I decided to drop the GSoC related titles and focus on the things
that I work during the week. That means I'll probably blog more often :p&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This week I mostly focused on cleaning the code of &lt;a href="https://github.com/axilleas/isitfedoraruby" title="isitfedoraruby at github"&gt;fedoraruby&lt;/a&gt; and
conforming to the &lt;a href="https://github.com/bbatsov/ruby-style-guide" title="Ruby style guide"&gt;ruby&lt;/a&gt;/&lt;a href="https://github.com/bbatsov/rails-style-guide" title="Rails style guide"&gt;rails&lt;/a&gt; community
guidelines.&lt;/p&gt;
&lt;p&gt;The gem that helps you do that is &lt;a href="https://github.com/bbatsov/rubocop" title="rubocop at github"&gt;rubocop&lt;/a&gt; and is kind of the standard
method in the ruby world.&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#rubocop"&gt;RuboCop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#houndci"&gt;HoundCI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="rubocop"&gt;RuboCop&lt;/h1&gt;
&lt;p&gt;Rubocop refers to each check as a cop. There are a bunch and you can see
the supported ones by reading these [files][rubo-enabled].&lt;/p&gt;
&lt;p&gt;After installing rubocop, call it with the &lt;code&gt;rubocop&lt;/code&gt; command and it
will check all Ruby source files in the current directory.&lt;/p&gt;
&lt;p&gt;If working on a Rails project, you have to invoke it with the &lt;code&gt;-R&lt;/code&gt; flag.&lt;/p&gt;
&lt;p&gt;The first time I ran rubocop I was presented with no more or less
&lt;strong&gt;666&lt;/strong&gt; violations. Which meant if I wanted to clean up the code I'd had to
manually edit all 666 of them. Luckily, as you may have imagined, rubocop
provides the &lt;code&gt;-a/--auto-correct&lt;/code&gt; flag which does what it says. In the
documentation there is a note: &lt;em&gt;Experimental - use with caution&lt;/em&gt;. What the
heck, I had nothing to lose, I am under version control so I could go back
any time. It worked like a charm and this brought the violations to about
&lt;strong&gt;150&lt;/strong&gt;. Not bad at all.&lt;/p&gt;
&lt;p&gt;So what about the rest? Well, you have to do it manually and so I began.
If you run rubocop without any flags, it uses the &lt;a href="https://github.com/bbatsov/rubocop/tree/master/config" title="Default configuration files for rubocop"&gt;default config&lt;/a&gt; that
ships with the gem. If you want to use your config you can do so by defining
it with the &lt;code&gt;-c&lt;/code&gt; flag.&lt;/p&gt;
&lt;p&gt;Now, there is another cool feature rubocop provides. It can create a config
file for you containing all the violations found so far. Run rubocop with
the &lt;code&gt;--auto-gen-config&lt;/code&gt; flag and that will create &lt;code&gt;.rubocop_todo_yml&lt;/code&gt; in
the current dir. Then you can check against that file with
&lt;code&gt;rubocop -R -c .rubocop_todo_yml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;All cops in this yaml file are set to false, which means they won't be taken
into account, not unless you explicitly set them to true. That way you can
work your way up in fixing all violations by enabling one cop at a time.
Basically what is included in this file, overrides the default values.&lt;/p&gt;
&lt;p&gt;If you want to omit calling on &lt;code&gt;.rubocop_todo_yml&lt;/code&gt; every single time, place
this in &lt;code&gt;.rubocop.yml&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;inherit_from: .rubocop_todo.yml
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Form now on you can just call it with &lt;code&gt;rubocop -R&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To sum up, run &lt;code&gt;rubocop -R&lt;/code&gt; see that there is no violation, edit
&lt;code&gt;.rubocop_todo_yml&lt;/code&gt;, set one of the cops to true, run rubocop again, fix
the errors and work your way up until there is no violation.&lt;/p&gt;
&lt;p&gt;Of course all of these are optional steps. Ruby's interpreter doesn't care
about identation, it won't complain if you run a method 20 lines long and
it won't throw an error if you have chain 16 methods spanning to 300 chars.
All these are conventions among the Ruby community and you are not compelled
to follow them. BUT, it provides much cleaner code and when you find yourself
contributing to a project, all these will probably matter.&lt;/p&gt;
&lt;p&gt;In my case, you can see through &lt;a href="https://github.com/axilleas/isitfedoraruby/commit/0a39c2b1a3d3aa47433c52147fe9ecb443e3ea98" title="Commit fixing most of rubocops errors"&gt;this commit&lt;/a&gt; what changed and in
this &lt;a href="https://gist.github.com/axilleas/b65a909a5d0b73fcb2a8" title="gist with before/after violations"&gt;gist&lt;/a&gt; you can see the difference from before/after running rubocop.
Dropped to 73 violations from 666.&lt;/p&gt;
&lt;p&gt;I've skipped some of them as I didn't see fit, like commenting above every
class what it does. I'm not saying this isn't good to have it's just it
also includes migrations and I'd like to avoid that. Also some code will
be deprecated/rewritten any time soon so it doesn't make sense to fix the
violations if I'm to remove the code afterwards.&lt;/p&gt;
&lt;h1 id="houndci"&gt;HoundCI&lt;/h1&gt;
&lt;p&gt;Rubocop is good to test locally, but what about the code you host remotely?
Enter &lt;a href="https://houndci.com/" title="HoundCI website"&gt;Houndci&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Houndci is a web app written in Rails by &lt;a href="http://robots.thoughtbot.com/" title="Thoughtbot website"&gt;Thoughtbot&lt;/a&gt; that integrates with
your github account. It checks for violations every time a Pull Request is
submited against your repository. It relies on the rubocop gem, but it
may follow &lt;a href="https://github.com/thoughtbot/guides/tree/master/style" title="Thoughtbot style guide"&gt;different&lt;/a&gt; approaches than rubocop.&lt;/p&gt;
&lt;p&gt;I almost spent a day to find this out. I'll tell you what I mean since there
was a particular error that made me search for many hours.&lt;/p&gt;
&lt;p&gt;Let's start by saying that it is common practice to not have lines spanning
on more that 80 characters. &lt;a href="http://legacy.python.org/dev/peps/pep-0008/#maximum-line-length" title="Python PEP8 maximum line length"&gt;Python&lt;/a&gt; has it pinned to 79.&lt;/p&gt;
&lt;p&gt;In rubocop, there is a cop that checks for method chaining. When the line
is too long you should break it down, so this cop checks whether the 
dot(&lt;strong&gt;.&lt;/strong&gt;) that chains two methods is placed before or after the methods.
Here's an example to better visualize it:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;method_with_arguments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argument_one&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argument_two&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;a_really_long_line_that_is_broken_up_over_multiple_lines_and&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="n"&gt;subsequent_lines_are_indented_and&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="n"&gt;each_method_lives_on_its_own_line&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When I ran rubocop locally it complained with &lt;em&gt;Place the . on the next line, together with the method name.&lt;/em&gt;
Ok I did that and pushed. Then why was houndci told me &lt;a href="https://github.com/axilleas/isitfedoraruby/pull/1#discussion-diff-13786984" title="HoundCI complaining on dot"&gt;otherwise&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;Digging in rubocop's default &lt;a href="https://github.com/bbatsov/rubocop/blob/master/config/default.yml#L187" title="Default configuration about the dot position cop"&gt;config&lt;/a&gt; file I found that this particular
cop was invoking an additional parameter: &lt;code&gt;EnforcedStyle: leading&lt;/code&gt;.
Interesting, so why houndci was telling me the opposite? Digging some more,
this time in rubocop's source code, I found the responsible &lt;a href="https://github.com/bbatsov/rubocop/blob/master/lib/rubocop/cop/style/dot_position.rb#L22" title="cop that checks the . position in multi-line method calls."&gt;method&lt;/a&gt;.
It seems rubocop gives you the option to decide which style fits you better
and from what I've seen so far, houndci prefered the trailing dot. Ok let's
fix that.&lt;/p&gt;
&lt;p&gt;Reading the &lt;a href="https://houndci.com/configuration" title="Hound configuration"&gt;configuration&lt;/a&gt; guide, and since houndci uses rubocop, I
copied &lt;code&gt;.rubocop_todo_yml&lt;/code&gt; to &lt;code&gt;.hound.yml&lt;/code&gt;. There, following the &lt;a href="https://github.com/bbatsov/rubocop/blob/master/config/default.yml#L187" title="Default configuration about the dot position cop"&gt;config&lt;/a&gt;
file I appended&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;Style/DotPosition:
  EnforcedStyle: leading
  Enabled: true
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;in &lt;code&gt;.hound.yml&lt;/code&gt;, pushed the change to my repo and created a test pull request
to check if it worked. No... but whyyyy??&lt;/p&gt;
&lt;p&gt;After some more more digging, this time at the issue tracker of houndci,
I finally found the &lt;a href="https://github.com/thoughtbot/hound/issues/288" title="Hound not picking up changes in .hound.yml"&gt;culprit&lt;/a&gt;. The latest version of rubocop &lt;a href="https://github.com/bbatsov/rubocop/blob/master/relnotes/v0.23.0.md" title="Rubocop 0.23.0 release notes"&gt;changed&lt;/a&gt;
the way cops are presented and that broke compatibility with houndci.
Back to &lt;code&gt;.hound.yml&lt;/code&gt; I removed &lt;code&gt;Style/&lt;/code&gt; and pushed to github. Finally,
this time it was fixed.&lt;/p&gt;
&lt;p&gt;Not much of a story, probably you already got bored or didn't make it this
far, but anyway. Onto more interesting stuff, until next time it is.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Mon, 16 Jun 2014 00:00:00 +0300</pubDate><guid>tag:axilleas.me,2014-06-16:en/blog/2014/rubocop-to-the-rescue</guid><category>fedora</category><category>isitfedoraruby</category><category>gsoc</category><category>ruby</category><category>rails</category><category>webdev</category><category>rubocop</category></item><item><title>GSoC-2014 isitfedoraruby - Week 3</title><link>http://axilleas.me/en/blog/2014/gsoc2014-week-three</link><description>&lt;p&gt;Testing, testing, testing.
Diving into BDD for the first time can be a little tedious but you sure learn
a lot. In the ruby/rails world there is a ton of excellent tools to help you
test your app. Some more popular than the others. I'm no exception so I
picked what the majority of the community dictated.&lt;/p&gt;
&lt;h1 id="testing-tools"&gt;Testing tools&lt;/h1&gt;
&lt;h2 id="rspec"&gt;Rspec&lt;/h2&gt;
&lt;p&gt;The Rspec test suite is well established among ruby developers and has a big
community to support it. You can also find many good books about it. One that
I highly recommend is &lt;a href="https://leanpub.com/everydayrailsrspec" title="Everyday Rails Testing with RSpec"&gt;Everyday Rails Testing with RSpec&lt;/a&gt;. It
basically includes all the tools I'll be using, I'm a little biased I admit it
but it is really worth it.&lt;/p&gt;
&lt;p&gt;Here are the specs that will be populated with tests over time.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;models
├── bug_spec.rb
├── build_spec.rb
├── dependency_spec.rb
├── fedora_rpm_spec.rb
├── rpm_version_spec.rb
└── ruby_gem_spec.rb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Currently, I have worked only on &lt;code&gt;bug_spec.rb&lt;/code&gt; which is finished for the time
being.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# app/spec/models/bug_spec.rb&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# == Schema Information&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Table name: bugs&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;#  id            :integer          not null, primary key&lt;/span&gt;
&lt;span class="c1"&gt;#  name          :string(255)&lt;/span&gt;
&lt;span class="c1"&gt;#  bz_id         :string(255)&lt;/span&gt;
&lt;span class="c1"&gt;#  fedora_rpm_id :integer&lt;/span&gt;
&lt;span class="c1"&gt;#  is_review     :boolean&lt;/span&gt;
&lt;span class="c1"&gt;#  created_at    :datetime&lt;/span&gt;
&lt;span class="c1"&gt;#  updated_at    :datetime&lt;/span&gt;
&lt;span class="c1"&gt;#  last_updated  :string(255)&lt;/span&gt;
&lt;span class="c1"&gt;#  is_open       :boolean&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rails_helper&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="no"&gt;Bug&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;has valid factory&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:bug&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be_valid&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;before&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:all&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="vi"&gt;@bug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:bug&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@bugzilla_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://bugzilla.redhat.com/show_bug.cgi?id=&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;has valid bugzilla url&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@bug&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;Regexp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@bugzilla_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;\d+/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;is a Review Request&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@bug&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_review&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;is open&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@bug&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_open&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;is closed&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="vi"&gt;@bug&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_open&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@bug&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_open&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here I'm using the new rspec method &lt;code&gt;expect(object).to&lt;/code&gt; instead of the old one
&lt;code&gt;object.should&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;In the validation of the bugzilla url I wanted to test against a regular
expression that would return the bug url and bug number. At first I used
&lt;code&gt;/#{@bugzilla_url}\d+/&lt;/code&gt; but that was interpreted into
&lt;code&gt;/https:\/\/bugzilla.redhat.com\/show_bug.cgi?id=\d+/&lt;/code&gt;. So, the slashes where
treated as regexp wildcards. The trick I &lt;a href="http://stackoverflow.com/a/150598/2137281" title="Interpolating a string into a regex"&gt;learned&lt;/a&gt; is to enclose
the string into &lt;code&gt;Regexp.quote(str)&lt;/code&gt;. This method escapes any characters that
would otherwise have special meaning&lt;sup id="fnref:ruby-doc"&gt;&lt;a class="footnote-ref" href="#fn:ruby-doc" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;h2 id="factorygirl"&gt;FactoryGirl&lt;/h2&gt;
&lt;p&gt;FactoryGirl is a replacement for fixtures, Rails' default way of creating test
data. In my first attempt I used it to create a Bug object.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# app/spec/factories/bugs.rb&lt;/span&gt;

&lt;span class="no"&gt;FactoryGirl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;define&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;factory&lt;/span&gt; &lt;span class="ss"&gt;:bug&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bz_id&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;12345&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_review&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_open&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt; 
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, when I call &lt;code&gt;create(:bug)&lt;/code&gt; in my &lt;code&gt;bug_spec.rb&lt;/code&gt; it automatically creates
a new Bug object in the database with the predefined attributes I gave it
in the factory file. I could probably use &lt;code&gt;build(:bug)&lt;/code&gt; instead of &lt;code&gt;create&lt;/code&gt;
and that would simply create the object but not save it in the database.
This could get a lot better since it takes 2.2 seconds to just run 5 tests.
Refactoring will come later, I'll primarily focus on making enough tests to
cover as many edge cases as I can find.&lt;/p&gt;
&lt;h2 id="cucumbercapybara"&gt;Cucumber/capybara&lt;/h2&gt;
&lt;p&gt;So far I talked about unit testing. When it comes to integration testing,
that is how the application as a whole behaves, there is &lt;code&gt;cucumber&lt;/code&gt; and &lt;code&gt;capybara&lt;/code&gt;.
I haven't actually used any of these two yet. Cucumber is known for its
descriptive language and better used when one works with a non-programmer
product owner that doesn't want to look at a lot of code&lt;sup id="fnref:quote"&gt;&lt;a class="footnote-ref" href="#fn:quote" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;. I'll probably
just go with capybara.&lt;/p&gt;
&lt;h1 id="setting-a-rails-development-environment"&gt;Setting a Rails development environment&lt;/h1&gt;
&lt;p&gt;I spent quite a lot of time to find the proper gems and configuration to
have a nice setup. This will do for an article of its own so I won't go into
details.&lt;/p&gt;
&lt;h1 id="todos"&gt;TODOs&lt;/h1&gt;
&lt;p&gt;Except for preparing the test suite, I'm also into cleaning the code where
possible and necessary. There are some functions that need removing, but I
have to do it carefully, don't want to break anything and without tests I
cannot be 100% sure. So far I have used the &lt;a href="https://github.com/bbatsov/rubocop" title="A Ruby static code analyzer, based on the community Ruby style guide"&gt;rubocop&lt;/a&gt; gem with some
interesting findings (exactly 666 warnings/errors). I will talk about it next week.
Now go and watch the &lt;a href="https://www.youtube.com/watch?v=CamAhPeYoC8" title="Six six six"&gt;Number of the beast&lt;/a&gt;.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:ruby-doc"&gt;
&lt;p&gt;&lt;a href="http://ruby-doc.org/core-2.1.2/Regexp.html#method-c-quote"&gt;http://ruby-doc.org/core-2.1.2/Regexp.html#method-c-quote&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:ruby-doc" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:quote"&gt;
&lt;p&gt;Quote taken from Everyday Rails Testing with RSpec&amp;#160;&lt;a class="footnote-backref" href="#fnref:quote" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Mon, 09 Jun 2014 00:00:00 +0300</pubDate><guid>tag:axilleas.me,2014-06-09:en/blog/2014/gsoc2014-week-three</guid><category>fedora</category><category>isitfedoraruby</category><category>gsoc</category><category>ruby</category><category>rails</category><category>webdev</category></item><item><title>GSoC-2014 isitfedoraruby - Week 2</title><link>http://axilleas.me/en/blog/2014/gsoc2014-week-two</link><description>&lt;p&gt;Here's what I've been doing last week.&lt;/p&gt;
&lt;h1 id="previous-week"&gt;Previous week&lt;/h1&gt;
&lt;h2 id="architecture-analysis"&gt;Architecture analysis&lt;/h2&gt;
&lt;p&gt;Getting to know an app from the ground up takes some time, especially if that's
a framework you are not too familiar with. Luckilly, I found the &lt;a href="http://railroady.prestonlee.com/" title="railroady home page"&gt;railroady&lt;/a&gt; gem
that helped me visualize how the app is structured, you can find the results
&lt;a href="https://gitlab.com/fedora-ruby/isitfedoraruby/tree/deploy/doc" title="Models/Controllers visualization"&gt;here&lt;/a&gt; (click on one of them and see them as raw).&lt;/p&gt;
&lt;h2 id="deploy-to-a-testing-server"&gt;Deploy to a testing server&lt;/h2&gt;
&lt;p&gt;Heroku might be a nice option, but their plans were limiting the database rows.
Instead, I spawned a Fedora 20 droplet in digitalocean and &lt;a href="http://fedoraruby.axilleas.me" title="Testing instance of isitfedoraruby app"&gt;deployed&lt;/a&gt; it there.
I used postgres as a database backend, unicorn serving the app and nginx as
a reverse proxy.&lt;/p&gt;
&lt;p&gt;First of all, I had to &lt;a href="https://docs.fedoraproject.org/en-US/Fedora/13/html/Security-Enhanced_Linux/sect-Security-Enhanced_Linux-Working_with_SELinux-Enabling_and_Disabling_SELinux.html" title="Enabling and Disabling SELinux"&gt;enable SELinux&lt;/a&gt;, I &lt;a href="http://stopdisablingselinux.com/" title="Seriously, stop disabling SELinux"&gt;had&lt;/a&gt; to,
it was off by default. Then I changed a boolean to make nginx work:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;setsebool -P httpd_can_network_connect on
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="started-fixing-bugs"&gt;Started fixing bugs&lt;/h2&gt;
&lt;p&gt;I keep finding small bugs that I currently keep track in my &lt;a href="https://trello.com/b/4aOmUpEC/fedora-ruby" title="trello board for my progress"&gt;trello&lt;/a&gt; board.
There is currently a &lt;a href="https://github.com/zuhao/isitfedoraruby/issues/50" title="GitHub discussion: Move repo to general namespace"&gt;discussion&lt;/a&gt; to move isitfedoraruby to a more general
namespace, so until then I'm working on my fork and the trello board.&lt;/p&gt;
&lt;h1 id="this-week"&gt;This week&lt;/h1&gt;
&lt;h2 id="setting-up-rspec"&gt;Setting up rspec&lt;/h2&gt;
&lt;p&gt;As this is the primary testing tool, I have started writing the first scenarios
and along the way I'll be adding the actual tests.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Tue, 03 Jun 2014 00:00:00 +0300</pubDate><guid>tag:axilleas.me,2014-06-03:en/blog/2014/gsoc2014-week-two</guid><category>fedora</category><category>isitfedoraruby</category><category>gsoc</category><category>ruby</category><category>rails</category><category>webdev</category></item><item><title>GSoC-2014 isitfedoraruby - Week 1</title><link>http://axilleas.me/en/blog/2014/gsoc2014-week-one</link><description>&lt;p&gt;In case you haven't heard, I have been accepted again this year
for Google Summer of Code :) This time I will be working on enhancing
a Rails app that provides information about the state of rubygem
packaging in Fedora.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://isitfedoraruby.com" title="Rubygem packaging state in Fedora"&gt;isitfedoraruby&lt;/a&gt; is a project that was crafted in GSoC 2012 by
&lt;a href="https://github.com/zuhao" title="zuhao's github profile"&gt;Zuhao Wan&lt;/a&gt;. I will pick it where he left off and add some
new features that will hopefully make us packagers' life easier.&lt;/p&gt;
&lt;p&gt;You can read my proposal &lt;a href="https://fedoraproject.org/wiki/GSOC_2014/Student_Application_Axilleas/Isitfedoraruby" title="GSoC 2014 proposal"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#why-i-got-involved-in-this-project"&gt;Why I got involved in this project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#project-details"&gt;Project details&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-we-have-so-far"&gt;What we have so far&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#general-info-pages"&gt;General info pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#single-rubygem-page"&gt;Single rubygem page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#singe-fedorarpm-page"&gt;Singe fedorarpm page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#features-to-be-added-and-bugs-fixed"&gt;Features to be added and bugs fixed&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#test-suite"&gt;Test suite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#enhance-the-gemfile-tool"&gt;Enhance the gemfile tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#show-the-packaging-progress-of-a-gem"&gt;Show the packaging progress of a gem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#enhance-dependency-checker"&gt;Enhance dependency checker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uiux-enhancements"&gt;UI/UX enhancements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#add-pages-providing-more-general-info"&gt;Add pages providing more general info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentation-on-contributing"&gt;Documentation on contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#progress-of-previous-week"&gt;Progress of previous week&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#deploy-on-staging-server"&gt;Deploy on staging server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#note-bugs-that-need-fixing"&gt;Note bugs that need fixing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#whats-on-this-week"&gt;What's on this week&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#architecture-analysis"&gt;Architecture analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setup-a-proper-devtest-environment"&gt;Setup a proper dev/test environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fix-bugs-found-in-first-week"&gt;Fix bugs found in first week&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-end-for-now"&gt;The end (for now)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="why-i-got-involved-in-this-project"&gt;Why I got involved in this project&lt;/h1&gt;
&lt;p&gt;Last year was the first time I took part in GSoC, first time I got involved in
Fedora, first time I started contributing to GitLab. I am now a packager, still
trying to &lt;a href="https://fedoraproject.org/wiki/GitLab" title="GitLab on Fedora wiki"&gt;package GitLab&lt;/a&gt; for Fedora/RHEL (help needed!) and a member
of GitLab's community &lt;a href="https://www.gitlab.com/core-team/" title="GitLab core team"&gt;core-team&lt;/a&gt;. I even became an apprentice to Fedora's
infra team (although I haven't dedicated much time admittedly).&lt;/p&gt;
&lt;p&gt;So, having packaged a bunch of rubygems already, I have stumbled upon many
cases where my packager's life would be easier if I had some tools to work
with. And this is where isitfedoraruby comes in. As a rails app, it looked like
the perfect opportunity to learn about the framework and make something that
the Fedora Ruby community could use on a daily basis when packaging.&lt;/p&gt;
&lt;h1 id="project-details"&gt;Project details&lt;/h1&gt;
&lt;p&gt;As I wrote earlier &lt;a href="http://isitfedoraruby.com" title="Rubygem packaging state in Fedora"&gt;isitfedoraruby&lt;/a&gt; is a rails app used mostly internally
in Fedora by ruby packagers. The source code is hosted on &lt;a href="https://github.com/zuhao/isitfedoraruby" title="isitfedoraruby on github"&gt;github&lt;/a&gt;,
deployed on &lt;a href="https://www.openshift.com/" title="Openshift PaaS"&gt;Openshift&lt;/a&gt; and all the info is imported using a &lt;a href="https://github.com/zuhao/isitfedoraruby/blob/master/lib/tasks/database.rake" title="Import gems rake task"&gt;rake task&lt;/a&gt;
using a &lt;a href="https://github.com/zuhao/isitfedoraruby/tree/master/.openshift/cron" title="Cron job to import gems"&gt;cron job&lt;/a&gt; every hour.&lt;/p&gt;
&lt;p&gt;What you see in production is using Rails 3 and ruby 1.9.3. Zuhao has already
worked in porting it to &lt;a href="https://github.com/zuhao/isitfedoraruby/tree/rails4" title="Rails 4 branch"&gt;Rails 4&lt;/a&gt; so I'll be working on that branch.&lt;/p&gt;
&lt;p&gt;The same project was also picked by some high school students during Google's Code In
program in 2012. You can read more in Mo Morsi's &lt;a href="http://mo.morsi.org/blog/node/378" title="Google Code In additions to isitfedoraruby"&gt;blog post&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="what-we-have-so-far"&gt;What we have so far&lt;/h2&gt;
&lt;p&gt;Here is a brief list of the pages there are so far.&lt;/p&gt;
&lt;h3 id="general-info-pages"&gt;General info pages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Home page&lt;/li&gt;
&lt;li&gt;All rubygems&lt;/li&gt;
&lt;li&gt;All fedorarpms&lt;/li&gt;
&lt;li&gt;Contribute&lt;/li&gt;
&lt;li&gt;About&lt;/li&gt;
&lt;li&gt;Gemfile Tool&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="single-rubygem-page"&gt;Single rubygem page&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Link to fedorarpm&lt;/li&gt;
&lt;li&gt;Homepage url&lt;/li&gt;
&lt;li&gt;Source code url&lt;/li&gt;
&lt;li&gt;Version&lt;/li&gt;
&lt;li&gt;Total downloads&lt;/li&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;li&gt;Dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="singe-fedorarpm-page"&gt;Singe fedorarpm page&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Header links&lt;ul&gt;
&lt;li&gt;Dependency Tree (using D3 js library)&lt;/li&gt;
&lt;li&gt;Timeline (chronological visualization of the bugs &amp;amp; version releases)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Link to rubygem&lt;/li&gt;
&lt;li&gt;Link to source code url on &lt;a href="http://pkgs.fedoraproject.org/cgit"&gt;http://pkgs.fedoraproject.org/cgit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Number of git commits&lt;/li&gt;
&lt;li&gt;Up to date (yes/no)&lt;/li&gt;
&lt;li&gt;Link to maintainer&lt;ul&gt;
&lt;li&gt;link_to bubble chart page showing the packages a user owns&lt;/li&gt;
&lt;li&gt;Table of rpms owned by user&lt;ul&gt;
&lt;li&gt;link_to rpm&lt;/li&gt;
&lt;li&gt;Upstream version&lt;/li&gt;
&lt;li&gt;Rawhide version&lt;/li&gt;
&lt;li&gt;Number of git commits&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;li&gt;Versions table&lt;ul&gt;
&lt;li&gt;rawhide&lt;/li&gt;
&lt;li&gt;fedora 20&lt;/li&gt;
&lt;li&gt;fedora 19&lt;/li&gt;
&lt;li&gt;gem version&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dependencies table&lt;ul&gt;
&lt;li&gt;package name (link_to fedorarpm)&lt;/li&gt;
&lt;li&gt;rawhide version&lt;/li&gt;
&lt;li&gt;f20 version&lt;/li&gt;
&lt;li&gt;f19 version&lt;/li&gt;
&lt;li&gt;upstream version&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dependents table&lt;ul&gt;
&lt;li&gt;package name (link_to fedorarpm)&lt;/li&gt;
&lt;li&gt;rawhide version&lt;/li&gt;
&lt;li&gt;f20 version&lt;/li&gt;
&lt;li&gt;f19 version&lt;/li&gt;
&lt;li&gt;upstream version&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bugs table&lt;ul&gt;
&lt;li&gt;ID (link_to bugzilla, striked if resolved)&lt;/li&gt;
&lt;li&gt;Bug title&lt;/li&gt;
&lt;li&gt;Review status&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Builds table&lt;ul&gt;
&lt;li&gt;Build ID (link_to koji url)&lt;/li&gt;
&lt;li&gt;Title (package name)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="features-to-be-added-and-bugs-fixed"&gt;Features to be added and bugs fixed&lt;/h2&gt;
&lt;h3 id="test-suite"&gt;Test suite&lt;/h3&gt;
&lt;p&gt;The current test suite is non-existent. Some of the tools I plan to use are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rspec&lt;/code&gt; for testing models and controllers&lt;/li&gt;
&lt;li&gt;&lt;code&gt;factory_girl&lt;/code&gt; for feeding tests&lt;/li&gt;
&lt;li&gt;&lt;code&gt;capybara&lt;/code&gt; to simulate user interaction with the app&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For views I will use feature specs. Existing minitest tests will be replaced
with rspec ones.&lt;/p&gt;
&lt;h3 id="enhance-the-gemfile-tool"&gt;Enhance the gemfile tool&lt;/h3&gt;
&lt;p&gt;The &lt;a href="http://www.isitfedoraruby.com/stats/gemfile_tool" title=" Test your Gemfile or Gemfile.lock against Fedora"&gt;Gemfile tool&lt;/a&gt; checks against a Gemfile or Gemfile.lock and shows if
the gems are packaged for Fedora. In its current implementation, it basically
dumps all the information in the screen, which is not too handy if you need to
somehow extract this information.&lt;/p&gt;
&lt;p&gt;The functionality I want to add is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;provide a better view of the output (prettier table view)&lt;/li&gt;
&lt;li&gt;ability to provide a Gemfile url and have the output on a &lt;em&gt;static&lt;/em&gt; page like:
    &lt;code&gt;http://isitfedoraruby/stats/gemfile?url=www.example.com/Gemfile.lock&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With this we could calculate how many of the gems are in Fedora repos, which
brings me to another cool feature.&lt;/p&gt;
&lt;h3 id="show-the-packaging-progress-of-a-gem"&gt;Show the packaging progress of a gem&lt;/h3&gt;
&lt;p&gt;There are times where a gem depends on other gems not yet packaged for Fedora.
A cool feature would be to able to see the packaging progress of a gem.&lt;/p&gt;
&lt;p&gt;The plan is to either implement one of the two options below (or both):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Query &lt;a href="https://rubygems.org"&gt;https://rubygems.org&lt;/a&gt; and extract information on the dependencies.&lt;/li&gt;
&lt;li&gt;Provide a yaml file with info on the gem's review request bugzilla issue,
    then query koji for rawhide builds and bugzilla for any Blocks issues.
    If we have those two values we can calculate how many dependents gems
    there are not yet or already packaged.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I prefer the first option as with that one could see what dependencies
needed prior to submitting a package for a review request.&lt;/p&gt;
&lt;p&gt;A nice progress bar with the percentage of gem packaging completion will
be provided as well. For each gem that gets in rawhide, the progress bar
gets a little further. There can also be a number of other cool info in
the page, like links to bugzilla requests so that someone could lend a hand, etc.&lt;/p&gt;
&lt;p&gt;At first I will focus on implementing this for a single gem but later it
can be extended to track the progress of a rails app.&lt;/p&gt;
&lt;p&gt;That functionality will mainly come from the next feature in the list.
Enter dependency checker.&lt;/p&gt;
&lt;h3 id="enhance-dependency-checker"&gt;Enhance dependency checker&lt;/h3&gt;
&lt;p&gt;The &lt;a href="http://www.isitfedoraruby.com/fedorarpms/rubygem-rspec/full_deps" title="Dependencies represantation"&gt;current&lt;/a&gt; representation of a gem's dependencies is in a tree format,
not very handy if you want to extract information.&lt;/p&gt;
&lt;p&gt;Influenced by &lt;a href="https://www.gemlou.pe"&gt;https://www.gemlou.pe&lt;/a&gt;, I plan to implement a similar
representation and show the dependencies in a more elaborate way.&lt;/p&gt;
&lt;h3 id="uiux-enhancements"&gt;UI/UX enhancements&lt;/h3&gt;
&lt;p&gt;The app uses bootstrap as a frontend framework, as you could tell.
The idea is to make it more user friendly and prettier. If it were me
I would have used &lt;a href="http://foundation.zurb.com/" title="The most advanced responsive front-end framework in the world."&gt;foundation&lt;/a&gt; in the first place. Upstream provides
even a gem for immediate use in rails apps. In my opinion it's targeting
more to developers that don't want to get too messy with css. For the time
being I don't consider changing frameworks, but it's a food for thought.&lt;/p&gt;
&lt;h3 id="add-pages-providing-more-general-info"&gt;Add pages providing more general info&lt;/h3&gt;
&lt;p&gt;Pages that would help the user experience are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;list of gems pending review&lt;/li&gt;
&lt;li&gt;list of gems already assigned but stagnated for too long&lt;/li&gt;
&lt;li&gt;list of gems pending review and marked as NEEDSPONSOR&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All these can be queried from bugzilla through the ruby-bugzilla gem.&lt;/p&gt;
&lt;h3 id="documentation-on-contributing"&gt;Documentation on contributing&lt;/h3&gt;
&lt;p&gt;Last but certainly not least, I will document the development contribution
process should anyone want to provide any fixes/features.&lt;/p&gt;
&lt;p&gt;Apart from developing the app, I will provide a page with comprehensive
steps on packaging a rubygem. A draft article can be found &lt;a href="https://gitlab.com/fedora-ruby/gitlab-rpm/wikis/rubygem-packaging" title="Fedora Rubygem Packaging"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="progress-of-previous-week"&gt;Progress of previous week&lt;/h1&gt;
&lt;p&gt;I have been reading the codebase to get familiar with it and then done
a few minor things.&lt;/p&gt;
&lt;h2 id="deploy-on-staging-server"&gt;Deploy on staging server&lt;/h2&gt;
&lt;p&gt;Currently I run it on &lt;a href="http://fedoraruby.herokuapp.com" title="isitfeedoraruby on heroku"&gt;heroku&lt;/a&gt;, but the database exceeded the free plan they
provide so I'll have to move it elsewhere. I haven't yet imported the gems
as the rake tasks pull in all gems from rubygems.org and the database gets huge.
This is noted to be fixed in the rake task. Also, what you see is the next version
of the app using Rails 4 :)&lt;/p&gt;
&lt;h2 id="note-bugs-that-need-fixing"&gt;Note bugs that need fixing&lt;/h2&gt;
&lt;p&gt;Like last year, I will be documenting any progress in a &lt;a href="https://trello.com/b/4aOmUpEC/fedora-ruby" title="isitfedoraruby trello board progress"&gt;trello board&lt;/a&gt;.
In the code clean up list you can see what is marked as to be fixed.
If you have any comments please do leave them on the cards.&lt;/p&gt;
&lt;h1 id="whats-on-this-week"&gt;What's on this week&lt;/h1&gt;
&lt;p&gt;We are already in the middle of the second week, so here's a preview of
what I'm working on.&lt;/p&gt;
&lt;h2 id="architecture-analysis"&gt;Architecture analysis&lt;/h2&gt;
&lt;p&gt;The code needs a clean up and the only way to do this is to do an analysis
of the app's architecture. That will give me an overview of the changes need
to be done like merging the rubygem page view into fedorarpm.&lt;/p&gt;
&lt;h2 id="setup-a-proper-devtest-environment"&gt;Setup a proper dev/test environment&lt;/h2&gt;
&lt;p&gt;Right now, if anyone wanted to play with the app, apart from db migration
you would have to run the rake tasks that import all the info needed in
order to have a functional app. Rather than importing each gem (which can be
done in batches), I would like to create some fake data to begin with.&lt;/p&gt;
&lt;p&gt;This would help me afterwards with the tests.&lt;/p&gt;
&lt;h2 id="fix-bugs-found-in-first-week"&gt;Fix bugs found in first week&lt;/h2&gt;
&lt;p&gt;I'll try to apply fixes to as many bugs as possible I found previous week.&lt;/p&gt;
&lt;h1 id="the-end-for-now"&gt;The end (for now)&lt;/h1&gt;
&lt;p&gt;Soo, that's it for now! Hope you made it this far :)
Cheers to an interesting summer!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Tue, 27 May 2014 00:00:00 +0300</pubDate><guid>tag:axilleas.me,2014-05-27:en/blog/2014/gsoc2014-week-one</guid><category>fedora</category><category>isitfedoraruby</category><category>gsoc</category><category>ruby</category><category>rails</category><category>webdev</category></item><item><title>Bringing GitLab to Fedora</title><link>http://axilleas.me/en/blog/2013/bringing-gitlab-in-fedora</link><description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;Update&lt;/em&gt;&lt;/strong&gt;: I just got a confirmation mail that my proposal got accepted! &lt;a href="http://axilleas.me/en/blog/2013/accepted-for-gsoc-2013"&gt;Read here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So, I decided to write some info regarding my involvement for this year's
&lt;a href="http://www.google-melange.com/gsoc/homepage/google/gsoc2013" title="Google Summer of Code 2013"&gt;Google Summer of Code&lt;/a&gt;. I have been using/testing GitLab since
version 2.0 (almost a year now) and I am thrilled to see how much it has
growed since. This year I got a little more involved into this and
I made &lt;a href="https://github.com/gitlabhq/gitlabhq/commits/master/doc/install/installation.md?author=axilleas"&gt;two&lt;/a&gt; &lt;a href="https://github.com/gitlabhq/gitlabhq/commits/master/lib/tasks/gitlab/check.rake?author=axilleas"&gt;commits&lt;/a&gt; upstream. Nothing fancy, but I hope to
contribute more as time passes by.&lt;/p&gt;
&lt;p&gt;In the rest of this article I will try to explain what GitLab is,
how Fedora is involved into all this and what are the benefits of this involvement.
This is the first of many follow-up posts I intend to write, so keep tight!&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-gitlab"&gt;What is GitLab?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fedoras-involvement-so-far"&gt;Fedora's involvement so far&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-are-the-benefits"&gt;What are the benefits&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#get-more-ruby-packages-in-the-repos"&gt;Get more ruby packages in the repos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#a-new-service-for-fedorahostedorg"&gt;A new service for fedorahosted.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#next-steps-and-things-to-overcome"&gt;Next steps and things to overcome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="what-is-gitlab"&gt;What is GitLab?&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://blog.gitlab.com" title="GitLab home page"&gt;GitLab&lt;/a&gt; is an &lt;a href="https://github.com/gitlabhq/gitlabhq" title="GitLab on Github :p"&gt;open source&lt;/a&gt; MIT licenced &lt;a href="http://git-scm.com" title="git home page"&gt;git&lt;/a&gt; repository
management application. It is built on &lt;a href="http://rubyonrails.org/" title="Ruby on Rails"&gt;Ruby on Rails&lt;/a&gt; and is
one of the most &lt;a href="https://github.com/popular/starred" title="GitLab featured in Github's most popular repos"&gt;popular&lt;/a&gt; projects featured on Github.
It is used by many companies as their internal git management repository.
The reason it gained so much popularity is that it bares a strong resemblance
to github's &lt;a href="http://gitlab.org/screenshots/" title="GitLab screenshots"&gt;looks&lt;/a&gt; and &lt;a href="http://blog.gitlab.com/features/" title="GitLab features"&gt;feels&lt;/a&gt;.
It is a project with great potential, under heavy development with a release
cycle every month. That makes it possible to apply bug fixes quite regularly
and test new features. And since a picture is worth a thousand words, here is
a &lt;a href="http://demo.gitlab.com/users/sign_in" title="GitLab demo site"&gt;demo site&lt;/a&gt; where you can test all the latest features.&lt;/p&gt;
&lt;h1 id="fedoras-involvement-so-far"&gt;Fedora's involvement so far&lt;/h1&gt;
&lt;p&gt;The thought of GitLab being packaged and deployed for &lt;a href="http://fedorahosted.org"&gt;Fedora Hosted&lt;/a&gt; isn't new.
It all started last March when &lt;a href="https://fedoraproject.org/wiki/User:Mojavelinux"&gt;Dan Allen&lt;/a&gt; &lt;a href="https://lists.fedoraproject.org/pipermail/infrastructure/2012-March/011463.html"&gt;proposed&lt;/a&gt; GitLab
to be used as a service for Fedora Hosted. If you follow the conversation
it summarizes to some key points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Projects pages should be ideally hosted as &lt;code&gt;$projectname.fedorahosted.org&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;GitLab and its dependencies should be packaged for Fedora and EPEL 6.&lt;/li&gt;
&lt;li&gt;Puppetize the whole thing up. &lt;a href="https://forge.puppetlabs.com/sbadia/gitlab"&gt;There&lt;/a&gt; are &lt;a href="https://forge.puppetlabs.com/lboynton/gitlab"&gt;some&lt;/a&gt; configs, but they'll sure need some adjustment.&lt;/li&gt;
&lt;li&gt;We need to form a team of maintainers for longterm support even after GSoC is over.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There was even a &lt;a href="https://groups.google.com/forum/?fromgroups=#!topic/gitlabhq/SQMDi-yyXmU"&gt;post&lt;/a&gt; in GitLab's list, also by Dan Allen,
bringing the project to the attention of the GitLab community.
The most interesting thing was that the &lt;a href="https://github.com/randx"&gt;lead developer&lt;/a&gt; of GitLab
was more than willing to help. In the end, there was an &lt;a href="https://fedoraproject.org/wiki/GSOC_2012/Student_Application_babakb/GitlabSetup" title="Student application for GitLab at GSoC 2012"&gt;application&lt;/a&gt; but
unfortunately that was the last anyone heard about the project.&lt;/p&gt;
&lt;p&gt;So, here we are a year after with me applying for the project. To be exact
there is &lt;a href="https://lists.fedoraproject.org/pipermail/summer-coding/2013-March/000286.html"&gt;another&lt;/a&gt; sudent interested in this as well, so that makes it two of us.
I have already expressed my interest in &lt;a href="https://lists.fedoraproject.org/pipermail/ruby-sig/2013-March/001270.html"&gt;RubySIG&lt;/a&gt; and in the &lt;a href="https://lists.fedoraproject.org/pipermail/infrastructure/2013-March/012631.html"&gt;infrastructure&lt;/a&gt; mailing list.
I was glad to see that there was a positive response from Dan Allen,
as well as some valuable advice from user &lt;a href="https://fedoraproject.org/wiki/User:Ktdreyer"&gt;Ken Dreyer&lt;/a&gt; who currently
tries to deal with &lt;a href="https://fedoraproject.org/wiki/User:Ktdreyer/Gitorious"&gt;Gitorious&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="what-are-the-benefits"&gt;What are the benefits&lt;/h1&gt;
&lt;p&gt;There are two major benefits for Fedora.&lt;/p&gt;
&lt;h2 id="get-more-ruby-packages-in-the-repos"&gt;Get more ruby packages in the repos&lt;/h2&gt;
&lt;p&gt;Prior to addressing my interest in the mailing lists, I approached &lt;a href="https://fedoraproject.org/wiki/User:Vondruch"&gt;Vít Ondruch&lt;/a&gt; to get some feedback about this task.
He was very helpful and pointed me to what should be done as a first step.
That is&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;identify which gems are missing in Fedora and package them,&lt;/li&gt;
&lt;li&gt;compile a list of gems GitLab is using, including all their dependencies (and possibly bundled dependencies).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For the first task, I used a hackish bash script which first accumulates
all rubygems in a file and then removes the duplicate packages and the ones
that are documentation.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nv"&gt;file_raw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/home/axil/tools/fedora-gitlab/rubygems_fedora_raw&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;file_new&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/home/axil/tools/fedora-gitlab/rubygems_fedora&amp;#39;&lt;/span&gt;

yum search all rubygem &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt; &amp;gt; &lt;span class="nv"&gt;$file_raw&lt;/span&gt;

sed -e &lt;span class="s1"&gt;&amp;#39;s/rubygem-//g&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;s/.noarch//g&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;s/.x86_64//g&amp;#39;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
-e &lt;span class="s1"&gt;&amp;#39;/i686/d&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;/==/d&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;/:/d&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;/-doc/d&amp;#39;&lt;/span&gt; &amp;lt; &lt;span class="nv"&gt;$file_raw&lt;/span&gt; &amp;gt; &lt;span class="nv"&gt;$file_new&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In order to find what gems GitLab depends on, I used the &lt;a href="https://github.com/gitlabhq/gitlabhq/blob/master/Gemfile.lock"&gt;Gemfile.lock&lt;/a&gt;
and wrote a simple python &lt;a href="https://github.com/axilleas/gsoc/blob/master/gemfile.py"&gt;script&lt;/a&gt;&lt;sup id="fnref:python-script"&gt;&lt;a class="footnote-ref" href="#fn:python-script" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; that computes how many and which gems
Fedora and GitLab have in common. Below are some draft&lt;sup id="fnref:draft_numbers"&gt;&lt;a class="footnote-ref" href="#fn:draft_numbers" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; numbers and a bar chart.&lt;/p&gt;
&lt;div id="rubygems_chart"&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;Gitlab uses: &lt;strong&gt;203&lt;/strong&gt; gems.&lt;/p&gt;
&lt;p&gt;Fedora has packaged: &lt;strong&gt;385&lt;/strong&gt; gems.&lt;/p&gt;
&lt;p&gt;There are &lt;strong&gt;97&lt;/strong&gt; common gems.&lt;/p&gt;
&lt;p&gt;There should be packaged: &lt;strong&gt;106&lt;/strong&gt; gems.&lt;/p&gt;
&lt;p&gt;Fedora will have &lt;strong&gt;27.53 %&lt;/strong&gt; more ruby packages, that is &lt;strong&gt;482&lt;/strong&gt; gems in total.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Not bad, &lt;strong&gt;106&lt;/strong&gt; more ruby packages! That is a plus now that Fedora is considered
one of &lt;a href="https://bugs.ruby-lang.org/projects/ruby-trunk/wiki/20SupportedPlatforms"&gt;Ruby's supported platforms&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; I just found out about the &lt;a href="http://isitfedoraruby.com/stats/gemfile_tool"&gt;gemfile tool&lt;/a&gt; that isitfedoraruby.com&lt;sup id="fnref:isitfedruby"&gt;&lt;a class="footnote-ref" href="#fn:isitfedruby" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;
is using. This will come in handy.&lt;/p&gt;
&lt;h2 id="a-new-service-for-fedorahostedorg"&gt;A new service for fedorahosted.org&lt;/h2&gt;
&lt;p&gt;After the packaging is done, the next big thing is the deployment process on
&lt;a href="http://fedorahosted.org"&gt;Fedora Hosted&lt;/a&gt; as a new service. Quoting Dan Allen's &lt;a href="https://lists.fedoraproject.org/pipermail/infrastructure/2013-March/012680.html"&gt;thought&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the key reasons I've been pushing for GitLab is because I see the
potential it has for drastically improving the discoverability of the
Fedora code base and encourage participation. I've been involved with a lot
of projects on GitHub and I'm amazed by how simple it is to submit changes
(to both code and documentation). In fact, it's often easier to send a
patch with a description of the change than to create an issue...flipping
the normal bug submitting process on its head.&lt;/p&gt;
&lt;p&gt;GitHub also works because it enables collaboration over coordination. You
don't have to ask for permission on GitHub. You just do it. Then you can
easily track when they get pulled in or changes are requested. (the same is
true of GitLab).&lt;/p&gt;
&lt;p&gt;With GitLab, we can bring that experience to the Fedora community. It's a
large enough community (esp in terms of repositories), that I'm positive
we'd see that collaboration kindle within the Fedora instance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So yeah, this is a big deal from this point of view :)&lt;/p&gt;
&lt;h1 id="next-steps-and-things-to-overcome"&gt;Next steps and things to overcome&lt;/h1&gt;
&lt;p&gt;There is certainly a lot more to do. For starters, as a Fedora newbie,
I have to run through the &lt;a href="https://fedoraproject.org/wiki/Packaging:Ruby"&gt;Ruby guidelines&lt;/a&gt; and learn
about the philosophy of rpm. Luckily, I am not a linux newbie (I've been
using Archlinux for 5 years) and I am adopting rapidly.
Then, I need to learn some Ruby. I have already printed &lt;em&gt;&lt;a href="http://mislav.uniqpath.com/poignant-guide"&gt;why's (poignant) Guide to Ruby&lt;/a&gt;&lt;/em&gt;
which is considered a must read, and believe me it is! (download the pdf from &lt;a href="https://github.com/downloads/mislav/poignant-guide/whys-poignant-guide-to-ruby.pdf"&gt;here&lt;/a&gt;).
&lt;a href="http://ruby.learncodethehardway.org/book/"&gt;Learn Ruby the hard way&lt;/a&gt; is also a good starting point. Ι think I'm on the right track.&lt;/p&gt;
&lt;p&gt;Now, as far as the packaging process is concerned, here is what more needs to be done:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MariaDB support. Since MariaDB will be the &lt;a href="https://lists.fedoraproject.org/pipermail/devel/2013-January/176584.html" title="Proposed F19 Feature: Replace MySQL with MariaDB"&gt;default&lt;/a&gt; &lt;a href="https://fedoraproject.org/wiki/Features/ReplaceMySQLwithMariaDB" title="Features/ReplaceMySQLwithMariaDB"&gt;implementation&lt;/a&gt; of MySQL in Fedora 19, GitLab will need to support it.&lt;/li&gt;
&lt;li&gt;Write systemd service files. I had made an &lt;a href="https://github.com/axilleas/gitlab-recipes/tree/master/systemd"&gt;attempt&lt;/a&gt; two months ago when I was trying to set up GitLab on Archlinux, but it is far from perfect.&lt;/li&gt;
&lt;li&gt;Packages to be EPEL compatible. A great advantage if GitLab gets packaged for Fedora, is that it would make it as easy as pie to install on a server running Red Hat, Centos, or some other rpm based distro.&lt;/li&gt;
&lt;li&gt;Ruby 2.0 compatibility. I don't think that'll be much of a stopper since GitLab is in the &lt;a href="https://github.com/gitlabhq/gitlabhq/commit/52cd655f71c6a5393b71640c13cd95e35e8d2624"&gt;process&lt;/a&gt; of supporting it, but I put it here just in case.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's all for now. If you read through here you should have a good understanding
of this project's goal. More posts to come!&lt;/p&gt;
&lt;!--Load the AJAX API--&gt;

&lt;script type="text/javascript" src="https://www.google.com/jsapi"&gt;&lt;/script&gt;

&lt;script type="text/javascript"&gt;

  // Load the Visualization API and the piechart package.
  google.load('visualization', '1.0', {'packages':['corechart']});

  // Set a callback to run when the Google Visualization API is loaded.
  google.setOnLoadCallback(drawChart);

  // Callback that creates and populates a data table,
  // instantiates the pie chart, passes in the data and
  // draws it.
  function drawChart() {

  // Create the data table.
  var data = new google.visualization.DataTable();
  data.addColumn('string', '');
  data.addColumn('number', 'rubygems');
  data.addRows([
    ['GitLab', 203],
    ['Fedora', 385],
    ['Common', 97],
    ['To be packaged', 106],
    ['Total after packaging', 482]
    ]);

  // Set chart options
  var options = {'title':'Numbers calculated on 08-04-2013', 'width':600, 'height':500};

  // Instantiate and draw our chart, passing in some options.
  var chart = new google.visualization.BarChart(document.getElementById('rubygems_chart'));
  chart.draw(data, options);
  }
&lt;/script&gt;

&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:python-script"&gt;
&lt;p&gt;I should write it in ruby, I know :p&amp;#160;&lt;a class="footnote-backref" href="#fnref:python-script" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:draft_numbers"&gt;
&lt;p&gt;I say draft, mainly because that is a raw calculation of GitLab's dependencies. One has to take into account the different/old versions that may exist between Fedora and GtiLab. There are also some packages GitLab pulls from git and not rubygems.org.&amp;#160;&lt;a class="footnote-backref" href="#fnref:draft_numbers" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:isitfedruby"&gt;
&lt;p&gt;&lt;a href="http://isitfedoraruby.com"&gt;isitfedoraruby.com&lt;/a&gt; is a cool web app that was the result of &lt;a href="https://fedoraproject.org/wiki/GSOC_2012/Student_Application_Zuhao/IsItFedoraRuby"&gt;last year's GSoC&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:isitfedruby" rev="footnote" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">axil</dc:creator><pubDate>Sun, 07 Apr 2013 00:00:00 +0300</pubDate><guid>tag:axilleas.me,2013-04-07:en/blog/2013/bringing-gitlab-in-fedora</guid><category>fedora</category><category>gitlab</category><category>gsoc</category><category>ruby</category><category>rails</category></item></channel></rss>